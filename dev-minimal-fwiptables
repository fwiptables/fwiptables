#!/bin/bash
#### #### #### #### for shell bash:
#### #### #### #### #!/bin/bash
####
#### #### #### #### for shell zsh:
#### #### #### #### #!/bin/zsh
#### #### #### #### emulate -L bash
####
#### File:        fwiptables-mini
#### Description: Mini Fran FireWall fwiptables Generator
#### Author:      Francisco Garcia <fwiptables@gmx.com>
#### Copyright:   (c) 2020-2022 Francisco Garcia <fwiptables@gmx.com>
####
#### This program is free software; you can redistribute it and/or modify
#### it under the terms of the GNU General Public License as published by
#### the Free Software Foundation; either version 2 of the License, or
#### (at your option) any later version.
####
#### This program is distributed in the hope that it will be useful,
#### but WITHOUT ANY WARRANTY; without even the implied warranty of
#### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#### GNU General Public License for more details.
####
#### You should have received a copy of the GNU General Public License along
#### with this program; if not, write to the Free Software Foundation, Inc.,
#### 51 Franklin St, Fifth Floor, Boston MA 02110-1301 USA
####
####
####                 ## fwiptables license in source program
####   English: This program has gpl license GPL v2, this program is copyleft, it is free.
####   Spanish: Este programa tiene licencia GPL v2, este programa es copyleft, esto es libre.
####
####
####                 ## fwiptables comments in source program
####   English: The comments are in english language and spanish language
####   Spanish: Los comentarios estan en idioma ingles y en idioma español
####
####
####                 ## Report bugs and Sum ideas
####   Email: fwiptables@gmx.com
####
####
##########    english: are you root: uid 0 ?                ##########
##########    spanish: eres admnistrador: identificador 0 ? ##########
#### :rutina-inicial-admin:
####
####
if [ "$(id -u)" == "0" ] ; then echo -n ; else
echo
echo "  [ info ] [ fwiptables needs to be root to work ]"
echo
echo "  [ fail ] [ Be root to work with fwiptables in your system ] [ Try with root user ]"
exit ; fi
####
####
#### :rutina-final-admin:
##########     english name, description and version    ##########
##########     spanish: nombre, descripcion y version   ##########
#### :rutina-inicial-name:
####
####
#### #### english: program description   #### spanish: descripcion del programa
fdescription="One Script in bash for iptables firewall" ;
#### #### english: program name          #### spanish: nombre del porgrama
fprogram="Fran FireWall FWiptables Generator mini" ;
#### #### english: version program name          #### spanish: version del porgrama
fversion="minimal-v5.02" ;
####
####
#### :rutina-final-name:
##########    english: options priority        ##########
##########    spanish: prioridad de opciones   ##########
#### :rutina-inicial-order-options:
####
####
command_sed="$(command -v sed)"
#### #### english: option for default    #### spanish: opcion por defecto
zero_dir="$(pwd)" ;
#### #### english: option for default    #### spanish: opcion por defecto
zero_option="$0" ;
#### #### english: variables to launch   #### spanish: variables a lanzar
first_option="$(echo $1 | $command_sed s/\\///g -)"  ;                       
#### #### english: variable without "/"  #### spanish: variable sin "/"
second_option="$(echo $2 | $command_sed s/\\///g -)" ;                       
#### #### english: variable without "/"  #### spanish: variable sin "/"
third_option="$(echo $3 | $command_sed s/\\///g -)"  ;                       
#### #### english: variable without "/"  #### spanish: variable sin "/"
quarter_option="$(echo $4 | $command_sed s/\\///g -)"  ;                     
####
####
#### :rutina-final-order-options:
##########   english: profile y support X11       ##########
##########   spanish: profile y soporte de X11    ##########
#### :rutina-inicial-x11:
####
####
####     #### english: program version            #### spanish: Version del programa
####     #### english: launch profile             #### spanish: lanza profile
####
####
if [ -f /etc/profile ] ; then . /etc/profile ; fi
####
####     #### english: launch completion          #### spanish: lanza autocompletar
####
####
if [ -f "/etc/bash_completion.d/$cmd_fwiptables" ] ; then . /etc/bash_completion.d/$cmd_fwiptables ; fi
####
####
####     #### english: stablished the path        #### spanish: establece el path
####
####
PATH="/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:$PATH"
####
####     #### english: add auth xhost for root    #### spanish: añade autorización xhost para root
####     #### code for add xhost to root for graphicall use
####
####
command_id="$(command -v id)"
command_xhost="$(command -v xhost)"
command_grep="$(command -v grep)"
terminal_tty="$(tty | $command_grep -E -i tty | tail -1)"
####
####
if [ "$terminal_tty" = "$NULL" ] ; then
if [ "$(logname)" = "$NULL" ] || [ "$(logname)" = "root" ] ; 
then
sudo -u root $command_xhost +SI:localuser:root &> /dev/null ;
## sudo -u root $command_xhost +LOCAL &> /dev/null ;
else
sudo -u root $command_xhost +SI:localuser:root &> /dev/null ;
## sudo -u root $command_xhost +LOCAL &> /dev/null ;
fi; fi
####
####
#### deprecated
## sudo -u "$(logname)" $command_xhost +SI:localuser:root &> /dev/null
## sudo -u "$(logname)" command_xhost +root@127.0.0.1 &> /dev/null
## sudo -u "$(logname)" command_xhost +INET:root@127.0.0.1 &> /dev/null
## sudo -u "$(logname)" command_xhost +INET6:root@127.0.0.1 &> /dev/null
## sudo -u "$(logname)" command_xhost +DNET:root@127.0.0.1 &> /dev/null
## sudo -u "$(logname)" command_xhost +KRB:root@127.0.0.1 &> /dev/null
## sudo -u "$(logname)" command_xhost +NIS:root@127.0.0.1 &> /dev/null
####
####
#### :rutina-final-x11:
##########  english: permanent files: files and folders from fwiptables          ##########
##########  spanish: archivos permanentes: archivos y carpetas desde fwiptables  ##########
#### :rutina-inicial-files:
####
####
#### english: permanent files: and where are file path: name, command and icon
#### spanish: archivos permanentes: donde estan las rutas de archivo: nombre, comando e icono
####
#### english: program name #### spanish: nombre del programa
name_fwiptables="fwiptables-mini"
#### english: program exec #### spanish: programa ejectutable
cmd_fwiptables="fwiptables-mini"
#### english: name icon #### spanish: nombre de icono
#### icon_fwiptables="zenity"
####
####
#### english: permanent directory:   permanent directory and path directory config files
#### spanish: directorio permanente: directorios permanentes y ruta de directorios de los archivos de configuracion
####
####
directory_binary="/usr/bin"
directory_data="$HOME/.config/$cmd_fwiptables"
####
####
#### english: directory tree 
#### spanish: arbol de directorio
####
####
directory_fwrecover="$directory_data/fwiptables-fwrecover"
directory_default="$directory_data/fwiptables-default"
directory_config="$directory_data/fwiptables-config"
directory_log="$directory_data/fwiptables-log"
directory_shell="$directory_data/fwiptables-shell"
####
####
#### english: templates cfg
#### spanish: plantillas cfg
####
####
defaultcfg="$directory_config/default-full-english.cfg"             
defaultfullcfg_eng="$directory_config/default-full-english.cfg"     
defaultfullcfg_spa="$directory_config/default-full-spanish.cfg"     
defaultminicfg_eng="$directory_config/default-mini-english.cfg"     
defaultminicfg_spa="$directory_config/default-mini-spanish.cfg" 
####
####
#### english: file log:     log files and path files config files
#### spanish: archivos log: archivos log y ruta de los archivos de configuracion
####
####
output_filelog="$directory_log/$cmd_fwiptables-filelog"
output_autolog="$directory_log/$cmd_fwiptables-autolog"
####
####
##########    english: temporal files: files for fwiptables ##########
##########    spanish: archivos temporales: de fwiptables   ##########
####
####
#### for tmp in /tmp  , old-use ,  then directory_temporal_path="/tmp/$cmd_fwiptables-$fversion-tmp"
#### for tmp in /root , new-use ,  then directory_temporal_path="$HOME/.$cmd_fwiptables-$fversion-tmp"
####
####
#### english: temporal directory
#### spanish: directorio temporal
####
####
directory_tmp="$HOME/.cache/$cmd_fwiptables"
directory_temporal="$directory_tmp/.$cmd_fwiptables-$fversion-tmp"
####
####
#### english: temporal files
#### spanish: archivos temporales
####
####
temporal_text="$directory_temporal/$first_option-$second_option-$third_option"
temporal_textfinal="$directory_temporal/$first_option-$second_option-$third_option-textfinal"
temporal_gui="$directory_temporal/$first_option-$second_option-$third_option"
temporal_guifinal="$directory_temporal/$first_option-$second_option-$third_option-guifinal"
output_log="$directory_temporal/$first_option-$second_option-$third_option"
output_logfinal="$directory_temporal/$first_option-$second_option-$third_option-logfinal"
####
####
#### :rutina-final-files:
##########   english: if sane config directory                       ##########
##########   spanish: comprobar sanos directorios de configuracion   ##########
#### :rutina-inicial-dir-sane:
####
####
command_mkdir="$(command -v mkdir)"
####
####
if [ ! -d "$directory_data" ]; then $command_mkdir -p $directory_data &> /dev/null ; fi
if [ ! -d "$directory_temporal" ]; then $command_mkdir -p $directory_temporal &> /dev/null ; fi
if [ ! -d "$directory_config" ]; then $command_mkdir -p "$directory_config" &> /dev/null ; fi
if [ ! -d "$directory_fwrecover" ]; then $command_mkdir -p "$directory_fwrecover" &> /dev/null ; fi
if [ ! -d "$directory_default" ]; then $command_mkdir -p "$directory_default" &> /dev/null ; fi
if [ ! -d "$directory_log" ]; then $command_mkdir -p "$directory_log" &> /dev/null ; fi
if [ ! -d "$directory_shell" ]; then $command_mkdir -p "$directory_shell" &> /dev/null ; fi
####
####
#### :rutina-final-dir-sane:
##########  english: variables: variables to declare     ##########
##########  spanish: variables: variables para declarar  ##########
#### :rutina-inicial-config-variables:
####
####
allow_dmz_ip4="no" ; 
allow_dmz_ip6="no" ;
allow_forward_ip4="no" ; 
allow_forward_ip6="no" ; 
allow_gateway_ip4="no" ;
allow_gateway_ip6="no" ;
allow_input_all="no" ;
allow_input_bandwidth="no" ; 
allow_input_maxconnect="no" ;
allow_input_ping="no" ;
allow_input_state="no" ;
allow_mac_blacklist="no" ; 
allow_mac_whitelist="no" ;
allow_shield_maxtries="no"
allow_net_blacklist="no" ;
allow_net_vpn="no" ; 
allow_others_protocols="no" ;
allow_output_all="no" ; 
allow_output_bandwidth="no" ;
allow_output_gid="no" ;
allow_output_maxconnect="no" ;
allow_output_ping="no" ;
allow_output_state="no" ;
allow_output_uid="no" ; 
client_tcp="ssh,http,https" ;
client_udp="domain,bootpc,ntp,https" ;
config_dmz_ip4="" ;
config_dmz_ip6="" ;
config_input_bandwidth="12512" ; 
config_input_maxconnect="72" ; 
config_input_state="new,related,established" ;
config_mac_blacklist=""
config_mac_whitelist="" ;
config_shield_maxtries="12" ;
config_net_blacklist="yandex.com" ;
config_net_vpn="wesnoth.org" ; 
config_others_protocols="icmp,igmp" ;
config_output_bandwidth="512" ;
config_output_gid="root" ;
config_output_maxconnect="72" ;
config_output_state="new,related,established" ;
config_output_uid="root" ;
logserver_prefix_input="fwlog-input::" ; 
logserver_prefix_output="fwlog-output::" ;
logserver_tcp="no" ;
logserver_udp="no" ;
net_ipv4_client="0/0" ; 
net_ipv4_server="0/0" ;
net_ipv6_client="::/0" ;
net_ipv6_server="::/0" ;
separate_port_rules="no" ;
server_tcp="" ;
server_udp="" ; 
####
####
#### :rutina-final-config-variables:
##########   english: the basic system variables         ##########
##########   spanish: las variables basicas del sistema  ##########
#### :rutina-inicial-system-variables:
####
####
####    # english: before declared variables for default # spanish: variables declaradas antes por defecto
####
####
####    allow_legacy="" ; allow_nft="" ; allow_ipv4="" ; allow_ipv6="" ; config_shield_maxtries="20" ; config_shield_port="22" ;
####    allow_autolog="" ; server_waiting="9s" ; server_ping_ipv4="fast.com" ; server_ping_ipv6="fast.com" ;
####    serverip_iperf_ipv4="ping.online.net" ; serverport_iperf_ipv4="5001" ; serverip_iperf_ipv6="ping6.online.net" ; serverport_iperf_ipv6="5001" ;
####    graphic_dimension="--width=950 --height=650" ; 
####    radio_mp3="http://cadena100-cope-rrcast.flumotion.com/cope/cadena100.mp3" ; 
####    radio_cadena100="http://cadena100-cope-rrcast.flumotion.com/cope/cadena100.mp3" ;
####    radio_cadenadial="http://playerservices.streamtheworld.com/api/livestream-redirect/CADENADIAL.mp3" ; 
####
####
####       #### english: for all predefined system firewall: EXCEPT custom, and wizards, and load
####       #### spanish: para todos los cortafuegos predefinidos del sistema: EXCEPTO custom, y wizards, y load
allow_legacy=""                     ## fwiptables-file-default ## void or no
allow_nft="no"                          ## fwiptables-file-default ## void or no
allow_ipv4=""                         ## fwiptables-file-default ## void or no
allow_ipv6=""                         ## fwiptables-file-default ## void or no
####       #### english: list all rules: list all rules, void in names or no in numbers
####       #### spanish: list all rules: list todas las reglas, vacio en nombres o no en numeros
list_rules_conceptual=""                           ## fwiptables-file-default ## void or no
####       #### english: ssh shield configured to works with ports choose ports tcp
####       #### spanish: ssh escudo configurado para funcionar con elegidos puertos tcp
config_shield_port="22"                   ## fwiptables-file-default ##  void o ports
####       #### english: ssh tries per ip before shield
####       #### spanish: intentos ssh por ip antes del escudo
config_shield_maxtries="10"                   ## fwiptables-file-default ## void or no
####       #### english: auto log from command input
####       #### spanish: automatico log de linea introducida
allow_autolog=""                    ## fwiptables-file-default ## void or no
####       #### english: zenity GRAPHIC DIMENSIONS        
####       #### spanish: DIMESIONES GRAFICAS de zenity  
graphic_dimension="--width=950 --height=650"   ## fwiptables-file-default ## default: "--width=950 --height=650"
#### #### english: look  #### spanish: apariencia
quad="####" ; 
cinco="#####" ;
tab="     " ;
rallica="_____" ;
sinco=" || " ;
title_md="### " ;
text_md="     " ;
brake_md="---" ;
tabz="### _ _ _ _ _ _ _ " ;
ralla="______________________" ;
duo_md="### ###" ;
header_ok="### ### || || [ ok ] ||" ;
cincuenta="##################################################" ;
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
head_waiting_cli="  [ info ] [ cli ] [ Wait several seconds.. ] [ With aprox several seconds ]"
head_waiting_gui="  [ info ] [ gui ] [ Wait several seconds.. ] [ With aprox several seconds ]"
head_waiting_log="  [ info ] [ log ] [ Wait several seconds.. ] [ With aprox several seconds ]"
head_waiting_web="  [ info ] [ web ] [ Wait several seconds.. ] [ With aprox several seconds ]"
head_waiting_help="  [ info ] [ help: help in rst txt format ] [ Loading.. ]"
head_waiting_info="  [ info ] [ info: info in plain txt format ] [ loading.. ]"
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
head_autolog="[ $cmd_fwiptables ] [ $fversion ] [ $(date) ] [ $first_option $second_option $third_option ]"
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
give_cover="$duo_md || || [ ok ] || [ Firewall ] [ Program $cmd_fwiptables ] [ Version $fversion ] [ License GPL ] || || "
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
give_load="$duo_md || || [ ok ] || [ Load firewall ] [ netfilter iptables ] || ||"
#### #### english: echo void            #### spanish: impresion vacia
nada="echo -n" ; 
#### #### english: echo void            #### spanish: impresion vacia
nada="$(echo -n)" ; 
#### #### several languages 
tab_lang_english=" eng "
tab_lang_spanish=" spa "
#### #### your language 
#### show_lang_english=""
#### show_lang_spanish="##"
#### #### info list rules
message_info_rules="### ### || || [ ok ] || [ Configure ] [ list rules with names or with numbers ] \
[ Launch: $cmd_fwiptables modify-default ] || ||"
#### #### english: without cli or gui   #### spanish: sin cli o gui
message_without_cli="  [ fail ] [ cli ] [ Without support for output cli for this option ]"
message_without_gui="  [ fail ] [ gui ] [ Without support for output gui for this option ]"
message_without_web="  [ fail ] [ web ] [ Without support for output web for this option ]"
message_without_help="  [ fail ] [ help in rst ] [ Without support for output rst for this option ]"
message_without_info="  [ fail ] [ info in txt ] [ Without support for output info for this option ]"
message_without_info="  [ fail ] [ log ] [ Without support for output log for this option ]"
message_without_info="  [ fail ] [ null ] [ Without support for output null for this option ]"
####       #### english: close from graphicall with timeout in seconds #####
####       #### spanish: cierre desde graficos con retardo en segundos #####
close_graphicall="1"
####       #### english: message to close graphicall with timeout in seconds #####
####       #### spanish: mensage de cierre para graficos con retardo en segundos #####
mensage_timeout="Closing gui menu in $close_graphicall seconds"
####       #### english: autovariables        #### spanish: autovariables
launch_firewall="no" ;   #  autoconfigure with launch iptables rules
####       #### english: [download web link]  #### spanish: [descarga del enlace web]
fweb_main="https://sourceforge.net/projects/f-iptables/"
fweb_files="https://sourceforge.net/projects/f-iptables/files/" ;
fweb_latest="https://sourceforge.net/projects/f-iptables/files/latest/download" ;
fweb_changes="https://sourceforge.net/p/f-iptables/code/ci/master/tree/dev-changes?format=raw" ;
fweb_development_complete="https://sourceforge.net/p/f-iptables/code/ci/master/tree/dev-fwiptables?format=raw" ;
fweb_development_minimal="https://sourceforge.net/p/f-iptables/code/ci/master/tree/dev-minimal-fwiptables?format=raw" ;
fweb_newfiles="https://sourceforge.net/projects/f-iptables/files" ;
fweb_tree="https://sourceforge.net/p/f-iptables/code/ci/master/tree/" ;
fweb_git="https://git.code.sf.net/p/f-iptables/code f-iptables-code" ;
####       #### english: [Program license] #### spanish: [Licencia del programa]
flicense="Copyleft, without warranty, gnu license GPL v2."
license_gpl="https://sourceforge.net/p/f-iptables/code/ci/master/tree/LICENSE.txt?format=raw"
fweb_domain="https://sourceforge.net/p/f-iptables/code/ci/master/tree/domain-list?format=raw"
####
####
#### english: if wrong in whithout_option
#### spanish: si esta mal definidad definida whithout_option
####
####
default_security="mini-options"
####
####
fwiptables_installed=""
####
####
#### :rutina-final-system-variables:
##########    english: Update variables             ##########
##########    spanish: Actualiza variables          ##########
#### :rutina-inicial-update-variables:
####
####
####     #### english: variable to knows if fwiptables is installed
####     #### spanish: variable para comprobar si fwiptables esta instalado
####
####
if [ "$1" != "install" ] && [ "$1" != "upgrade" ] && [ "$1" != "dev-upgrade" ]; then
cmp -s $0 $directory_binary/$cmd_fwiptables || fwiptables_installed="no" 
fi
####
####
####     #### english: launch default for update variables
####     #### spanish: lanza default para actualizar variables
####
####
if [ -f $directory_default/fwiptables-default ] ; then . $directory_default/fwiptables-default ; fi
####
####
#### english: if null option is void return default to mini-options
#### spanish: si la opcion por defecto esta vacia vuelve a mini-options
####
####
if [ "$whithout_option" = "$NULL" ] ; then whithout_option="$default_security" ; fi
####
####
#### :rutina-final-update-variables:
##########    english: Notice Installer with intro      ##########
##########    spanish: noticia de Instalador con intro  ##########
#### :rutina-inicial-notice:
####
####
if [ "$fwiptables_installed" == "no" ] ; then echo "  [ info ] [ type: $0 install ] [ to be ready for $cmd_fwiptables config files ]" ; fi
####
####
#### :rutina-final-notice:
##########   english: search programs: programs path           ##########
##########   spanish: busca los programas: ruta de programas   ##########
#### :rutina-inicial-command:
####
####
command_arp="$(command -v arp)"
command_arp_scan="$(command -v arp-scan)"
command_arptables="$(command -v arptables)"
command_bash="$(command -v bash)"
command_bc="$(command -v bc)"
command_curl="$(command -v curl)"
command_cut="$(command -v cut)"
command_date="$(command -v date)"
command_dd="$(command -v dd)"
command_dhclient="$(command -v dhclient)"
command_dhclient_script="$(command -v dhclient-script)"
command_dhcpcd="$(command -v dhcpcd)"
command_dialog="$(command -v dialog)"
command_dig="$(command -v dig)"
command_ebtables="$(command -v ebtables)"
command_elinks="$(command -v elinks)"
command_find="$(command -v find)"
command_fmt="$(command -v fmt)"
command_geoiplookup="$(command -v geoiplookup)"
command_glxgears="$(command -v glxgears)"
command_gpg="$(command -v gpg)"
command_grep="$(command -v grep)"
command_halt="$(command -v halt)"
command_host="$(command -v host)"
command_ifconfig="$(command -v ifconfig)"
command_ip="$(command -v ip)"
command_ip6tables_legacy="$(command -v ip6tables-legacy)"
command_ip6tables_nft="$(command -v ip6tables-nft)"
command_iperf="$(command -v iperf)"
command_iptables_legacy="$(command -v iptables-legacy)"
command_iptables_nft="$(command -v iptables-nft)"
command_iw="$(command -v iw)"
command_links="$(command -v links)"
command_links2="$(command -v links2)"
command_ls="$(command -v ls)"
command_lsof="$(command -v lsof)"
command_lynx="$(command -v lynx)"
command_m2r="$(command -v m2r)"
command_md5sum="$(command -v md5sum)"
command_mdp="$(command -v mdp)"
command_mpg123="$(command -v mpg123)"
command_mpg321="$(command -v mpg321)"
command_netstat="$(command -v netstat)"
command_netstat_nat="$(command -v netstat-nat)"
command_nmap="$(command -v nmap)"
command_ntpdate="$(command -v ntpdate)"
command_openssl="$(command -v openssl)"
command_ping="$(command -v ping)"
command_rdate="$(command -v rdate)"
command_reboot="$(command -v reboot)"
command_resolveip="$(command -v resolveip)"
command_route="$(command -v route)"
command_sed="$(command -v sed)"
command_shc="$(command -v shc)"
command_shutdown="$(command -v shutdown)"
command_sleep="$(command -v sleep)"
command_sntp="$(command -v sntp) -S"
command_ss="$(command -v ss)"
command_sysctl="$(command -v sysctl)"
command_tcpdump="$(command -v tcpdump)"
command_tee="$(command -v tee)"
command_torify="$(command -v torify)"
command_traceroute="$(command -v traceroute)"
command_txt2html="$(command -v txt2html)"
command_uname="$(command -v uname)"
command_wget="$(command -v wget)"
command_wpa_passphrase="$(command -v wpa_passphrase)"
command_wpa_supplicant="$(command -v wpa_supplicant)"
command_xrandr="$(command -v xrandr)"
command_zenity="$(command -v zenity)"
command_zgrep="$(command -v zgrep)"
command_lpinfo="$(command -v lpinfo)"
command_lpstat="$(command -v lpstat)"
command_lsblk="$(command -v lsblk)"
command_lsusb="$(command -v lsusb)"
command_lscpu="$(command -v lscpu)"
command_lspci="$(command -v lspci)"
command_lsgpu="$(command -v lsgpu)"
command_lshw="$(command -v lshw)"
####
####
#### :rutina-final-command:
##########      english: search favorite browser: favorite browser     ##########
##########      spanish: busca preferido navegador: favorite browser   ##########
#### :rutina-inicial-favorite-text-browser:
####
####
favorite_text_browser=""
if [ "$command_links"  = "$NULL" ] ; then $nada ; else favorite_text_browser="$command_links"   ; fi
if [ "$command_links2" = "$NULL" ] ; then $nada ; else favorite_text_browser="$command_links2"  ; fi
if [ "$command_lynx"   = "$NULL" ] ; then $nada ; else favorite_text_browser="$command_lynx"    ; fi
if [ "$command_elinks" = "$NULL" ] ; then $nada ; else favorite_text_browser="$command_elinks"  ; fi
####
####
#### :rutina-inicial-favorite-text-browser:
##########      english: search favorite dhcp Discover ip net     ##########
##########      spanish: busca preferido dhcp Descubre la ip      ##########
#### :rutina-inicial-favorite-dhcp-command:
####
####
favorite_dhcp_command=""
if [ "$command_dhcpcd"  = "$NULL" ] ; then $nada         ; else favorite_dhcp_command="$command_dhcpcd"           ; fi
if [ "$command_dhclient_script" = "$NULL" ] ; then $nada ; else favorite_dhcp_command="$command_dhclient_script"  ; fi
if [ "$command_dhclient"   = "$NULL" ] ; then $nada      ; else favorite_dhcp_command="$command_dhclient"         ; fi
####
####
#### :rutina-final-favorite-dhcp-command:
##########      english: search favorite date: favorite date command        ##########
##########      spanish: busca preferida fecha: favorita comando de fecha   ##########
#### :rutina-inicial-favorite-date-command:
####
####
favorite_date_command=""
if [ "$command_rdate"   = "$NULL" ]; then $nada ; else favorite_date_command="$command_rdate -4 -a -n"  ; fi
if [ "$command_sntp"    = "$NULL" ]; then $nada ; else favorite_date_command="$command_sntp"            ; fi
if [ "$command_ntpdate" = "$NULL" ]; then $nada ; else favorite_date_command="$command_ntpdate"         ; fi
####
####
#### :rutina-final-favorite-date-command:
##########      english: search favorite music player            ##########
##########      spanish: busca preferida reproductor de musica   ##########
#### :rutina-inicial-favorite-music-command:
####
####
favoite_music_command=""
if [ "$command_mpg321" = "$NULL" ]; then $nada ; else favorite_radio_command="$command_mpg321"   ; fi
if [ "$command_mpg123" = "$NULL" ]; then $nada ; else favorite_radio_command="$command_mpg123"   ; fi
####
####
#### :rutina-final-favorite-music-command:
##########    english: ALIAS  simple y firewall y campus       ##########
##########    spanish: ALIAS  simple y cortafuegos y campo     ##########
#### :rutina-inicial-alias-simple:
####
####
##########     ALIAS SIMPLE
##########     ALIAS SIMPLE
####
####
#### english:  alias alias simple for output gui, -txt or -cli or -gui and more
####
####
if [ "$first_option" = "tui-menu"  ] ; then first_option="cli-menu"  ; fi
if [ "$first_option" = "-tui-menu"  ] || [ "$first_option" = "--tui-menu"  ] ; then first_option="cli-menu"  ; fi
if [ "$first_option" = "-cli-menu"  ] || [ "$first_option" = "--cli-menu"  ] ; then first_option="cli-menu"  ; fi
if [ "$first_option" = "-gui-menu"  ] || [ "$first_option" = "--gui-menu"  ] ; then first_option="gui-menu"  ; fi
if [ "$first_option" = "-gui-shell" ] || [ "$first_option" = "--gui-shell" ] ; then first_option="gui-shell" ; fi
if [ "$first_option" = "text" ] || [ "$first_option" = "-text" ]   ; then first_option="-txt"  ; fi
if [ "$first_option" = "tui"  ] || [ "$first_option" = "-tui" ]    ; then first_option="-cli"  ; fi
if [ "$first_option" = "txt"  ] || [ "$first_option" = "-txt"  ]   ; then first_option="-txt"  ; fi
if [ "$first_option" = "cli"  ] || [ "$first_option" = "-cli"  ]   ; then first_option="-cli"  ; fi
if [ "$first_option" = "gui"  ] || [ "$first_option" = "-gui"  ]   ; then first_option="-gui"  ; fi
if [ "$first_option" = "web"  ] || [ "$first_option" = "-web"  ]   ; then first_option="-web"  ; fi
if [ "$first_option" = "tor"  ] || [ "$first_option" = "-tor"  ]   ; then first_option="-tor"  ; fi
if [ "$first_option" = "help" ] || [ "$first_option" = "-help"  ]  ; then first_option="-help" ; fi
if [ "$first_option" = "-h"   ] || [ "$first_option" = "--help"  ] ; then first_option="-help" ; fi
if [ "$first_option" = "-t"   ] || [ "$first_option" = "--txt"  ]  ; then first_option="-txt"  ; fi
if [ "$first_option" = "-c"   ] || [ "$first_option" = "--cli"  ]  ; then first_option="-cli"  ; fi
if [ "$first_option" = "-g"   ] || [ "$first_option" = "--gui"  ]  ; then first_option="-gui"  ; fi
if [ "$first_option" = "-i"   ] || [ "$first_option" = "--info"  ] ; then first_option="-info" ; fi
if [ "$first_option" = "-w"   ] || [ "$first_option" = "--web"  ]  ; then first_option="-web"  ; fi
if [ "$first_option" = "-l"   ] || [ "$first_option" = "--log"  ]  ; then first_option="-log"  ; fi
if [ "$first_option" = "-n"   ] || [ "$first_option" = "--null"  ] ; then first_option="-null" ; fi
####
####
#### english: alias simple for options commons
####
####
if [ "$first_option" = "$NULL" ]  ; then first_option="options-mini" ; fi
####
####
if [ "$first_option" = "ls" ]; then first_option="-txt"; second_option="list4"; fi
if [ "$first_option" = "ls4" ]; then first_option="-txt";  second_option="list4"; fi
if [ "$first_option" = "list" ]  ; then first_option="-txt";  second_option="list4" ; fi
if [ "$first_option" = "ls6" ]; then first_option="-txt";  second_option="list6"; fi
if [ "$first_option" = "list6" ]  ; then first_option="-txt";  second_option="list6" ; fi
####
####
if [ "$first_option" = "options" ] ; then first_option="options-all" ; fi
if [ "$first_option" = "mini-options" ] ; then first_option="options-mini" ; fi
if [ "$first_option" = "options-full" ] ; then first_option="options-all" ; fi
if [ "$first_option" = "full-options" ] ; then first_option="options-all" ; fi
if [ "$first_option" = "examples" ] ; then first_option="options-examples"; fi
if [ "$first_option" = "output-interface" ] ; then first_option="options-interface" ; fi
if [ "$first_option" = "output" ] ; then first_option="options-interface" ; fi
if [ "$first_option" = "ntp" ] ; then first_option="ntpdate-client"; fi
if [ "$first_option" = "sentlog" ] ; then first_option="filelog"; fi
if [ "$first_option" = "radio" ] ; then first_option="radio-mp3"; fi
if [ "$first_option" = "regen" ] ; then first_option="regen-config"; fi
if [ "$first_option" = "cfg" ] ; then first_option="names-config" ; fi
if [ "$first_option" = "cfg-custom" ] ; then first_option="custom" ; fi
if [ "$first_option" = "list-fw" ] ; then first_option="names"; fi
if [ "$first_option" = "ram" ] ; then first_option="free-ram"; fi
if [ "$first_option" = "free" ] ; then first_option="free-ram"; fi
if [ "$first_option" = "ram-free" ] ; then first_option="free-ram"; fi
if [ "$first_option" = "list-allrules" ] ; then first_option="list-alltables"; fi
####
####
####  english: $1 or or $2 or $3 for complete path per file and other excepcions
####
####
if [ "$1" = "-n" ] ; then first_option="-null" ; fi
if [ "$first_option" = "md5sum"  ] ; then second_option="$2" ; third_option="$3" ; fi
if [ "$second_option" = "md5sum" ] ; then third_option="$3"  ; quad_option="$4"  ; fi
####
####
#### english:  alias simple for firewall names 
####
####

if [ "$first_option" = "erase-rules" ] ; then first_option="eraserules" ; fi
if [ "$first_option" = "games-udp" ]; then first_option="games-shooter"; fi
if [ "$first_option" = "offline" ] ; then first_option="off-line" ; fi
if [ "$first_option" = "clientweb" ] ; then first_option="client-web" ; fi
if [ "$first_option" = "clientvpn" ] ; then first_option="client-vpn" ; fi
if [ "$first_option" = "game-minecraft" ] ; then first_option="game-minetest" ; fi
if [ "$first_option" = "game-westnoth" ] ; then first_option="game-wesnoth" ; fi
if [ "$first_option" = "gamesudp" ] ; then first_option="games-shooter" ; fi
if [ "$first_option" = "allpermisive" ] ; then first_option="all-permisive" ; fi
if [ "$first_option" = "torbrowser" ] ; then first_option="client-tor" ; fi
if [ "$first_option" = "tor-browser" ] ; then first_option="client-tor" ; fi
if [ "$first_option" = "client-email" ] ; then first_option="client-mail" ; fi
if [ "$first_option" = "onlyweb-tor" ] ; then first_option="lan-tor" ; fi
if [ "$first_option" = "serversamba" ] ; then first_option="server-samba" ; fi
if [ "$first_option" = "serverprint" ] ; then first_option="server-print" ; fi
if [ "$first_option" = "serverweb" ] ; then first_option="server-web" ; fi
if [ "$first_option" = "serverssh" ] ; then first_option="server-ssh" ; fi
if [ "$first_option" = "serverlamp" ] ; then first_option="server-lamp" ; fi
if [ "$first_option" = "server-ts" ] ; then first_option="server-teamspeak" ; fi
if [ "$first_option" = "server-email" ] ; then first_option="server-mail" ; fi
####
####
#### english:  alias simple for regenerate configurations templates
####
####
case "$first_option" in
"wizard-mini"|"wizard-full"|"new-mini-config"|"new-full-config"|"nueva-mini-config"|"nueva-completa-config")
$cmd_fwiptables regen-config ;; esac
case "$second_option" in
"wizard-mini"|"wizard-full"|"new-mini-config"|"new-full-config"|"nueva-mini-config"|"nueva-completa-config")
$cmd_fwiptables regen-config ;; esac
####
####
#### :rutina-final-alias-simple:
##########    ALIAS CAMPUS
##########    ALIAS CAMPUS
#### :rutina-inicial-alias-campus:
####
####
#### output txt:
####
####
if [ "$first_option" = "-txt" ]; 
then case "$second_option" in
####
####
"list4") $cmd_fwiptables list4-ip &> $temporal_text 
cat $temporal_text | $command_grep -iv Warning:  &> $temporal_textfinal
cat $temporal_textfinal ; exit ;;
####
####
"list6") $cmd_fwiptables list6-ip &> $temporal_text 
cat $temporal_text | $command_grep -iv Warning:  &> $temporal_textfinal
cat $temporal_textfinal ; exit ;;
####
####
esac ; $cmd_fwiptables "$second_option" "$third_option" "$quad_option"
####
####
exit; fi
####
####
#### output cli:
####
####
if [ "$first_option" = "-cli" ]
then echo "$head_waiting_cli"
case "$second_option" in
wizard-*) echo "$message_without_cli" ; $cmd_fwiptables $second_option $third_option ;  exit ;;
"nueva-mini-config")  $cmd_fwiptables $second_option $third_option ;  exit ;;
"nueva-completa-config") $cmd_fwiptables $second_option $third_option ;  exit ;;
"new-mini-config") $cmd_fwiptables $second_option $third_option ;  exit ;;
"new-full-config") $cmd_fwiptables $second_option $third_option ;  exit ;;
"modify-config") $cmd_fwiptables $second_option $third_option ;  exit ;;
"modify-default") $cmd_fwiptables $second_option $third_option  ;  exit ;;
nmap-*) echo "$message_without_cli" ; $cmd_fwiptables $second_option $third_option  ;  exit ;;
"radio") echo "$message_without_cli" ; $cmd_fwiptables $second_option $third_option ;  exit ;;
"speed-cpu") echo "$message_without_cli" ; $cmd_fwiptables $second_option $third_option ;  exit ;;
"info-nodes") echo "$message_without_cli" ;  exit ;;
"game-domain") $cmd_fwiptables game-domain -cli ; exit ;;
"game-word") $cmd_fwiptables game-word -cli ; exit ;;
"game-number") $cmd_fwiptables game-number -cli ; exit ;;
"addblock-on") echo "$message_without_cli" ; $cmd_fwiptables $second_option $third_option  ;  exit ;;
"gpg-notes") $cmd_fwiptables $second_option $third_option ; exit ;;
"clean-tmp") $cmd_fwiptables $second_option $third_option ; exit ;;
"log-search") 
pattern="$(dialog --stdout --title "type the pattern to search" --inputbox "example: sshd" 0 0)" 
clear; $cmd_fwiptables log-search $pattern ; exit ;; 
log-*) echo "$message_without_cli" ; $cmd_fwiptables $second_option $third_option ;  exit ;;
fw-*)  echo "$message_without_cli" ; $cmd_fwiptables $second_option $third_option  ;  exit ;;
"hosts") echo "$message_without_cli" ; $cmd_fwiptables hosts ; exit ;;
*) dialog --title "  Cli Output || $cmd_fwiptables ||" \
--msgbox "$($cmd_fwiptables $second_option $third_option)" 0 0 ;  clear ; exit ;;
####
####
esac ; fi
####
####
#### output gui:
####
####
if [ "$first_option" = "-gui" ] 
then case "$second_option" in 
"ole_word") first_option="game-word" ; second_option="-gui" ;;
"ole_number") first_option="game-number" ; second_option="-gui" ;;
"ole_domain") first_option="game-domain" ; second_option="-gui" ;;
"rule-del-num") first_option="rule-del-num" ; second_option="-gui" ;;
"gpg-notes") first_option="gpg-notes" ; second_option="-gui" ;;
"clean-tmp") $cmd_fwiptables clean-tmp &> /dev/null ; $command_zenity --info --text "$(echo [ ok ] [ deleted cache $fwiptables ])"; exit ;;
"info-nodes") echo "$message_without_gui" ;  exit ;;
esac ; fi
####
####
#### output log
####
####
if [ "$first_option" = "-log" ]
then case "$second_option" in 
"wizard") echo "$message_without_log" ; exit ;;
"wizard-full") echo "$message_without_log" ; exit ;;
"new-mini-config") echo "$message_without_log" ; exit ;;
"nueva-mini-config") echo "$message_without_log" ; exit ;;
"new-full-config") echo "$message_without_log" ; exit ;;
"nueva-completa-config") echo "$message_without_log" ; exit ;;
"modify-config")  echo "$message_without_log" ; exit ;;
"gpg-notes") echo "$message_without_log" ; exit ;;
"wpa-save") echo "$message_without_log" ; exit ;;
pc-*) echo "$message_without_log" ; exit ;;
game-*) echo "$message_without_log" ; exit ;;
radio-*) echo "$message_without_log" ; exit ;;
rule-*) echo "$message_without_log" ; exit ;;
esac 
####
####
echo "$head_waiting_log"
echo "### ### [ info ] [ $second_option $third_option $quad_option ] [ $($command_date) ]" &> $output_log
$cmd_fwiptables $second_option $third_option $quad_option &>> $output_log
cat $output_log | $command_grep -iv Warning: &>> $output_filelog
echo "  [  ok  ] [ Output sended to $output_filelog ] [ show file: fwiptables filelog ]" ;
exit ; fi
####
####
#### output null
####
####
if [ "$first_option" = "-null" ]
then case "$second_option" in 
"wizard") echo "$message_without_null" ; exit ;;
"wizard-full") echo "$message_without_null" ; exit ;;
"new-mini-config") echo "$message_without_null" ; exit ;;
"nueva-mini-config") echo "$message_without_null" ; exit ;;
"new-full-config") echo "$message_without_null" ; exit ;;
"nueva-completa-config") echo "$message_without_null" ; exit ;;
"gpg-notes") echo "$message_without_null" ; exit ;;
"wpa-save") echo "$message_without_null" ; exit ;;
pc-*) echo "$message_without_null" ; exit ;;
game-*) echo "$message_without_null" ; exit ;;
radio-*) echo "$message_without_null" ; exit ;;
rule-*) echo "$message_without_null" ; exit ;;
esac
####
####
$cmd_fwiptables "$second_option" "$third_option" &> /dev/null
exit ; fi
####
####
#### output web:
####
####
if [ "$first_option" = "-web" ] ; then
if [ "$command_txt2html" = "$NULL" ]; then echo [ fail ] [ install txt2html command ]; exit; fi
if [ "$favorite_text_browser" = "$NULL" ]; then echo [ fail ] [ install one text browser ]; exit; fi
case "$second_option" in 
"$NULL") echo "[ info ] [ use: $cmd_fwiptables -web option-choosen, OR to see options use: $cmd_fwiptables options ]" ;
$cmd_fwiptables ; exit ;;
*-config) echo "$message_without_web" ; exit ;;
game-*) echo "$message_without_web" ; exit ;;
game-*) echo "$message_without_web" ; exit ;;
rule-del-number) echo "$message_without_web" ; exit ;;
wpa-save) echo "$message_without_web" ; exit ;;
wpa-load)  echo "$message_without_web" ; exit ;;
esac
echo $head_waiting_web
rm "$temporal_text"* &> /dev/null
$cmd_fwiptables $second_option $third_option &> $temporal_text.1 ;
$command_sed -e 's/^/ /' $temporal_text.1 &> $temporal_text.2  ;
$command_txt2html --outfile $temporal_text.html $temporal_text.2 ;
$favorite_text_browser $temporal_text.html
exit ; fi
####
####
#### first_option tor
####
####
if [ "$first_option" = "tor"  ] || [ "$first_option" = "-tor"  ] ; then $nada
echo "$tab [ info ] [ to connect web is necessary tor configured and browser elinks or lynx ]"
torify -i $cmd_fwiptables $second_option $third_option ; exit ; fi
####
####
#### :rutina-final-alias-campus:
##########     english: autolog:         ##########
##########     spanish: autoguardado     ##########
#### :rutina-inicial-allow-autolog:
####
####
####   english: autolog  
####   spanish: autoguardado
####
####
head_autolog="[ $cmd_fwiptables ] [ $fversion ] [ $(date) ] [ $first_option $second_option $third_option ]"
if [ "$allow_autolog" != "no" ]; then echo $head_autolog >> "$output_autolog" ; fi
####
####
#### :rutina-final-allow-autolog:
##########   english: uninstall:      fwiptables uninstall      ##########
##########   spanish: desinstalador:  fwiptables desistalador   ##########
#### :rutina-inicial-uninstall:
####
####
if [ "$first_option" = "uninstall" ] ; then $zero_option intro
echo "$header_ok [ $first_option ] [ $cmd_fwiptables uninstaller ] [ uninstall md ] || ||"
echo "$text_md [ info ] [ $cmd_fwiptables uninstall.. ]"
echo "$text_md [ info ] [ To deinstall fwiptables ] [ delete $directory_binary/$cmd_fwiptables ]"
exit; fi
####
####
#### :rutina-final-uninstall:
##########       english: install:    fwiptables install          ##########
##########       spanish: instalador: fwiptables instalador       ##########
#### :rutina-inicial-install:
####
####
if [ "$first_option" = "install" ] ; then echo $give_cover
echo "$header_ok [ $first_option ] [ $cmd_fwiptables $fversion installer ] [ install md ] || ||"
#### 
#### 
echo "$text_md [ info ] [ To install fwiptables ] [ Copy it manually ] [ cp $0 $directory_binary/$cmd_fwiptables ]"
echo "$(head -450 $0 | $command_grep -B 2 fwiptables-file-default)" &> "$directory_default/$cmd_fwiptables-default"
echo "$text_md [ ok ] [ Regenerated: $cmd_fwiptables values for default ]"
exit ; fi
####
####
#### :rutina-final-install:
##########       english: upgrade: upgrade in the file /usr/bin/fwiptables        ##########
##########       spanish: upgrade: actualiza en el archivo /usr/bin/fwiptables    ##########
#### :rutina-inicial-upgrade:
####
####
if [ "$first_option" = "upgrade" ]; then echo $give_cover
echo "$header_ok [ $first_option ] [ upgrade latest version from web ] [ upgrade md ] || ||"
echo "$text_md [ info ] [ upgrade  ] [ upgrade $cmd_fwiptables at latest version from sourceforge.net web ]"
echo "$text_md [ info ] [ upgrade  ] [ upgrade The $cmd_fwiptables in file $directory_binary/$cmd_fwiptables ]"
echo "$text_md [ info ] [ download ] [ the last stable  version ]  [ download:  $cmd_fwiptables from $fweb_latest  ]"
echo "$text_md [ info ] [ download ] [ the dev complete version ] [ download:  $cmd_fwiptables from $fweb_development_complete ]"
echo "$text_md [ info ] [ download ] [ the dev minimal  version ] [ download:  $cmd_fwiptables from $fweb_development_minimal  ]"
####
####
exit ; fi
####
####
#### :rutina-final-upgrade:
##########   english: regen-config: regen-config template wizard files       ##########
##########   spanish: regen-config: regen-configera template wizard archivos ##########
#### :rutina-inicial-regen-config:
####
####
if [ "$first_option" = "regen-config" ]; then echo "# $give_cover"
echo "# $header_ok [ $first_option ] [ Generate templates wizard and cfg ] || ||"
echo "# [ info ] [ regenerating template wizard and template cfg ]"
####
####
####    english: variables to prepare to gen files
####    spanish: variables para preparar para generar archivos
####
####
####    english: basic options in configuration file cfg
####    spanish: opciones basicas en configuracion de archivo cfg
####
####
var0="$(echo $cinco $fprogram from $cmd_fwiptables version $fversion $cinco )"
var1="$(echo $cinco BEGIN NECESARY $cinco )"
eng1="$(echo $cinco  .......... BEGIN Necesary options .......... .......... $cinco )"
spa1="$(echo $cinco INICIO .......... Opciones Necesarias .......... .......... $cinco )"
var2="$(echo $cinco NETFILTER $cinco )"
eng2="$(echo $cinco the iptables firewall netfilter, choose one or two )"
spa2="$(echo $cinco el iptables firewall netfilter, elige uno o dos )"
var3="$(echo allow_legacy=no )"
eng3="$(echo $cinco launch xtables, void to yes or type no )"
spa3="$(echo $cinco lanza xtables, vacio para si, o escribe no )"
var4="$(echo allow_nft= )"
eng4="$(echo $cinco launch nftables, void to yes or type no )"
spa4="$(echo $cinco lanza nftables, vacio para si, o escribe no )"
var5="$(echo $cinco PROTOCOL IP $cinco )"
eng5="$(echo $cinco ip protocol, modify with void or no )"
spa5="$(echo $cinco procolo ip, modificar con vacio o no )"
var6="$(echo allow_ipv4= )"
eng6="$(echo $cinco void to config firewall with ipv4 or no to dont configure ipv4 )"
spa6="$(echo $cinco varcio para ejecutar el firewall con ipv4 o no para no )"
var7="$(echo allow_ipv6= )"
eng7="$(echo $cinco void to config firewall with ipv6 or no to dont configure ipv6 )"
spa7="$(echo $cinco varcio para ejecutar el firewall con ipv6 o no para no )"
var8="$(echo $cinco CLIENT PORTS $cinco )"
eng8="$(echo $cinco Client ports, add with ',' and join ranges with  : )"
spa8="$(echo $cinco puertos Cliente, añadir con ',' y poner rangos con : )"
var9="$(echo client_tcp=http,https,ssh )"
eng9="$(echo $cinco tcp ports for client )"
spa9="$(echo $cinco puertos tcp para ser cliente )"
var10="$(echo client_udp=domain,bootpc,bootps,ntp,https )"
eng10="$(echo $cinco udp ports for client )"
spa10="$(echo $cinco puertos udp para ser cliente )"
var11="$(echo $cinco SERVER PORTS $cinco )"
eng11="$(echo $cinco Server ports, add with ',' and join ranges with : )"
spa11="$(echo $cinco Puertos Servidor, añadir con ',' y poner rangos con  : )"
var12="$(echo server_tcp=ssh )"
eng12="$(echo $cinco tcp ports for server )"
spa12="$(echo $cinco puertos tcp para servidor )"
var13="$(echo server_udp= )"
eng13="$(echo $cinco udp ports for server )"
spa13="$(echo $cinco puertos udp para servidor )"
var14="$(echo $cinco LOG TO SERVER PORTS $cinco )"
eng14="$(echo $cinco Log to server ports, add with ',' and join ranges with : )"
spa14="$(echo $cinco logear para puertos de Servidor, añadir con ',' y poner rangos con : )"
var15="$(echo logserver_tcp= )"
eng15="$(echo $cinco the tcp ports to log server )"
spa15="$(echo $cinco puertos tcp para logear servidor )"
var16="$(echo logserver_udp= )"
eng16="$(echo $cinco the udp ports to log server )"
spa16="$(echo $cinco puertos udp para logear servidor )"
var17="$(echo $cinco LOG PREFIX TO SERVER $cinco )"
eng17="$(echo $cinco Log to server ports with prefix )"
spa17="$(echo $cinco logear para puertos de servidor con prefijo )"
var18="$(echo logserver_prefix_input=fwlog-input:: )"
eng18="$(echo $cinco type input prefix for logserver )"
spa18="$(echo $cinco especifica prefijo de entrada para logserver )"
var19="$(echo logserver_prefix_output=fwlog-output:: )"
eng19="$(echo $cinco type output prefix for logserver )"
spa19="$(echo $cinco especifica prefijo de salida para logserver )"
var20="$(echo $cinco ALLOW MAXTRIES SHIELD $cinco )"
eng20="$(echo $cinco Put one shield for ports to new connecting, with max ip to each hour )"
spa20="$(echo $cinco Pone un escudo para los peuertos de nueva conexion, con maximo ip cada hora )"
var21="$(echo allow_shield_maxtries=no )"
eng21="$(echo $cinco void to allow one shield with max tries login in ssh for ip to each hour or no )"
spa21="$(echo $cinco vacio para permitir un escudo con los intentos maximos de logins in ssh por ip a cada hora o no )"
var22="$(echo config_shield_maxtries=12 )"
eng22="$(echo $cinco modify shield with number max of tries to log in us ssh server for ip at each hour )"
spa22="$(echo $cinco modificar escudo con los maximos intentos de logeo a nuestro servidor ssh por ip a cada hora )"
var23="$(echo config_shield_port=22 )"
eng23="$(echo $cinco modify shield ssh chaging maxtries port ssh o several ports with comma separate )"
spa23="$(echo $cinco modificar escudo ssh cambiando puerto de intentos ssh o varios puertos separados por comma )"
var24="$(echo $cinco END NECESARY $cinco )"
eng24="$(echo $cinco .......... END Necesary options .......... .......... $cinco )"
spa24="$(echo $cinco FINAL .......... Opciones Necesarias .......... .......... $cinco )"
####
####
#### english: advance options in configurations file cfg
#### spanish: avanzadas opciones in configuracion de archivo cfg
####
####
var31="$(echo $cinco BEGIN OPTIONAL $cinco )"
eng31="$(echo $cinco .......... BEGIN Optional options .......... .......... $cinco )"
spa31="$(echo $cinco INICIO .......... Opciones opcionales .......... .......... $cinco )"
var32="$(echo $cinco choose void or no $cinco )"
eng32="$(echo $cinco Allow Other Options,  modify with void, or no )"
spa32="$(echo $cinco Permitir Otras Opciones, modificar con vacio o no )"
var33="$(echo separate_port_rules=no )"
eng33="$(echo $cinco Separate the rules for each port or no )"
spa33="$(echo $cinco separar reglas por cada puerto o no )"
# var34="$(echo allow_shield_maxtries=no )"
# eng34="$(echo $cinco void to allow one shield with max tries login in ssh for ip to each hour or no )"
# spa34="$(echo $cinco vacio para permitir un escudo con los intentos maximos de logins in ssh por ip a cada hora o no )"
var35="$(echo allow_forward_ip4=no )"
eng35="$(echo $cinco void to yes to forward ip4, or no to no )"
spa35="$(echo $cinco vacio para reenvios ip4, o no para no )"
var36="$(echo allow_forward_ip6=no )"
eng36="$(echo $cinco void to allow ip forward ip6 or no )"
spa36="$(echo $cinco vacio para permitir reenvio ip6, o no )"
var37="$(echo allow_gateway_ip4=no )"
eng37="$(echo $cinco void to allow gateway ip4 to others nets or no )"
spa37="$(echo $cinco vacio para permitir gateway ip4  a otras redes, o no )"
var38="$(echo allow_gateway_ip6=no )"
eng38="$(echo $cinco void to allow gateway ip6 to other nets or no )"
spa38="$(echo $cinco vacio para hacer gateway ip6 a otras redes o no )"
var39="$(echo allow_dmz_ip4=no )"
eng39="$(echo $cinco void to allow dmz ip4 to one host local or no )"
spa39="$(echo $cinco vacio para permitir dmz ip4  a una host local, o no )"
var40="$(echo allow_dmz_ip6=no )"
eng40="$(echo $cinco void to allow dmz ip6 to one host local or no )"
spa40="$(echo $cinco vacio para hacer dmz ip6 a una host local o no )"
var41="$(echo allow_input_all=no )"
eng41="$(echo $cinco void when the rules are to allow input to all or no )"
spa41="$(echo $cinco vacio, reglas para permitir toda entrada o no )"
var42="$(echo allow_output_all=no )"
eng42="$(echo $cinco void when the rules are to allow output to all or no )"
spa42="$(echo $cinco vacio, reglas para permitir toda salida o no )"
var43="$(echo allow_input_state=no )"
eng43="$(echo $cinco Selective Input state with void or no )"
spa43="$(echo $cinco Estado de entrada selectivo con vacio o no )"
var44="$(echo allow_output_state=no )"
eng44="$(echo $cinco Selective Output state with void or no )"
spa44="$(echo $cinco Estado de salida selectivo con vacio o no )"
var45="$(echo allow_input_bandwidth=no )"
eng45="$(echo $cinco void to limit bandwidth input in kbits/sec for all sources or no )"
spa45="$(echo $cinco vacio para limitar ancho de banda de entrada para todas las fuentes en kbits/sec o no )"
var46="$(echo allow_output_bandwidth=no )"
eng46="$(echo $cinco void to limit bandwidth output in kbits/sec for each destination or no )"
spa46="$(echo $cinco vacio limitar ancho de banda de salida en kbits/sec por cada destino o no )"
var47="$(echo allow_input_maxconnect=no )"
eng47="$(echo $cinco void to limit max number for input simultaneous connections or no )"
spa47="$(echo $cinco vacio para limitar numero de conexiones simultaneas de entrada o no )"
var48="$(echo allow_output_maxconnect=no )"
eng48="$(echo $cinco void to limit max number for output simultaneous connections or no )"
spa48="$(echo $cinco vacio para limitar numero de conexiones simultaneas de salida o no )"
var49="$(echo allow_input_ping=no )"
eng49="$(echo $cinco void to allow RECIVE PING or no )"
spa49="$(echo $cinco vacio para permitir RECIVIR PING o no )"
var50="$(echo allow_output_ping=no )"
eng50="$(echo $cinco void to allow SEND PING or no )"
spa50="$(echo $cinco vacio para permitir ENVIAR PING o no )"
var51="$(echo allow_mac_whitelist=no )"
eng51="$(echo $cinco void to allow some exceptional MAC-ADDRESS or no )"
spa51="$(echo $cinco vacio para permitir DIRECCION-MAC excepcionales o no )"
var52="$(echo allow_mac_blacklist=no )"
eng52="$(echo $cinco void to drop some excepcional MAC-ADDRESS or no )"
spa52="$(echo $cinco vacio para denegar DIRECCION-MAC excepcionales o no )"
var53="$(echo allow_net_vpn=no )"
eng53="$(echo $cinco void to allow some exceptional HOST/IP or no )"
spa53="$(echo $cinco vacio para permitir HOST/IP excepcionales o no )"
var54="$(echo allow_net_blacklist=no )"
eng54="$(echo $cinco void to drop some excepcional HOST/IP or no )"
spa54="$(echo $cinco vacio para denegar HOST/IP excepcionales o no )"
var55="$(echo allow_output_uid=no )"
eng55="$(echo $cinco void to allow excepcional USER or no )"
spa55="$(echo $cinco vacio permite salida de paquetes de un USUARIO excepcional o no )"
var56="$(echo allow_output_gid=no )"
eng56="$(echo $cinco void to allow excepcional GROUP or no )"
spa56="$(echo $cinco vacio permite salida de paquetes de un GRUPO excepcional o no )"
var57="$(echo allow_others_protocols=no )"
eng57="$(echo $cinco void to allow other POTOCOL-IP excepcional or no )"
spa57="$(echo $cinco vacio para permitir otro PROTOCOLO-IP excepcional o no )"
####
####
#### english: advance options in configurations file cfg
#### spanish: avanzadas opciones in configuracion de archivo cfg
####
####
var58="$(echo $cinco Begin Variables $cinco.......... .......... $cinco.......... )"
eng58="$(echo $cinco Fill Variables )"
spa58="$(echo $cinco Rellena Variables )"
var59="$(echo $cinco Options )"
eng59="$(echo $cinco Other Options, add with , and join ranges with : )"
spa59="$(echo $cinco Otras Opciones, añadir con , y poner rangos con : )"
# var60="$(echo config_shield_maxtries=12 )"
# eng60="$(echo $cinco modify shield with number max of tries to log in us ssh server for ip at each hour )"
# spa60="$(echo $cinco modificar escudo con los maximos intentos de logeo a nuestro servidor ssh por ip a cada hora )"
# var61="$(echo config_shield_port=22 )"
# eng61="$(echo $cinco modify shield ssh chaging maxtries port ssh o several ports with comma separate )"
# spa61="$(echo $cinco modificar escudo ssh cambiando puerto de intentos ssh o varios puertos separados por comma )"
var62="$(echo config_dmz_ip4=192.168.1.7 )"
eng62="$(echo $cinco ip server ip lan to other external nets, nat prerouting )"
spa62="$(echo $cinco servidor ip lan para otras redes esternas, nat prerouting )"
var63="$(echo config_dmz_ip6=d4:12:43:01:36:2e )"
eng63="$(echo $cinco ip server ip lan to other external nets, nat prerouting )"
spa63="$(echo $cinco servidor ip lan para otras redes esternas, nat prerouting )"
var64="$(echo config_input_state=new,related,established )"
eng64="$(echo $cinco void for all or new,related,established,untracked,invalid )"
spa64="$(echo $cinco modificar con vacio o new,related,established,untracked,invalid )"
var65="$(echo config_output_state=new,related,established )"
eng65="$(echo $cinco void for all or new,related,established,untracked,invalid )"
spa65="$(echo $cinco modificar con vacio o new,related,established,untracked,invalid )"
var66="$(echo config_input_bandwidth=12512 )"
eng66="$(echo $cinco max input bandwidth in kbits/sec for all )"
spa66="$(echo $cinco maximo entrada de ancho de banda en kbit/sec para todos )"
var67="$(echo config_output_bandwidth=512 )"
eng67="$(echo $cinco max output bandwidth in kbits/sec for each ip )"
spa67="$(echo $cinco maximo salida de ancho de banda en kbits/sec para cada ip )"
var68="$(echo config_input_maxconnect=72 )"
eng68="$(echo $cinco max number for input simultaneous connections )"
spa68="$(echo $cinco maximo numero de conexiones simultaneas de entrada )"
var69="$(echo config_output_maxconnect=72 )"
eng69="$(echo $cinco max number for output simultaneous connections )"
spa69="$(echo $cinco maximo numero de conexiones simultaneas de salida )"
var70="$(echo config_mac_whitelist=d4:12:43:01:36:2e )"
eng70="$(echo $cinco allow this excepcitonal MAC-ADRESS )"
spa70="$(echo $cinco permitir estos MAC-ADDRESS excepcionales )"
var71="$(echo config_mac_blacklist=d4:12:43:01:36:2e )"
eng71="$(echo $cinco drop this excepcional MAC-ADDRESS )"
spa71="$(echo $cinco deniega estos MAC-ADDRESS excepcionales )"
var72="$(echo config_net_vpn=wesnoth.org,sf.net )"
eng72="$(echo $cinco allow this excepcitonal HOST/IP )"
spa72="$(echo $cinco permitir estos HOST/IP excepcionales )"
var73="$(echo config_net_blacklist=facebook.com,www.facebook.com )"
eng73="$(echo $cinco drop this excepcional HOST/IP )"
spa73="$(echo $cinco deniega estos HOST/IP excepcionales )"
var74="$(echo config_output_uid=root )"
eng74="$(echo $cinco allow out packages excepcional from this USER excepcional )"
spa74="$(echo $cinco permite salida de paquetes de este USUARIO excepcional )"
var75="$(echo config_output_gid=root )"
eng75="$(echo $cinco allow out packages excepcional from this GROUP excepcional )"
spa75="$(echo $cinco permite salida de paquetes de este GRUPO excepcional )"
var76="$(echo config_others_protocols=icmp,igmp )"
eng76="$(echo $cinco allow others protocols from /etc/protocolos )"
spa76="$(echo $cinco permitir otros protocolos desde /etc/protocols )"
var77="$(echo $cinco NET CLIENT AND NET SERVER $cinco )"
eng77="$(echo $cinco Net to connect likes client or server )"
spa77="$(echo $cinco Red para conectar como cliente o server )"
var78="$(echo net_ipv4_client=0/0 )"
eng78="$(echo $cinco the net to client ipv4, all is 0/0 )"
spa78="$(echo $cinco la red cual cliente ipv4, todos es 0/0 )"
var79="$(echo net_ipv4_server=0/0 )"
eng79="$(echo $cinco the net to server ipv4, all is 0/0 )"
spa79="$(echo $cinco la red cual servidor ipv4, todos es 0/0 )"
var80="$(echo net_ipv6_client=::/0 )"
eng80="$(echo $cinco the net to client ipv6, all is ::/0 )"
spa80="$(echo $cinco la red cual cliente ipv6, todos es ::/0 )"
var81="$(echo net_ipv6_server=::/0 )"
eng81="$(echo $cinco the net to server ipv6, all is ::/0 )"
spa81="$(echo $cinco la red cual servidor ipv6, todos es ::/0 )"
var82="$(echo $cinco $cinco )"
eng82="$(echo $cinco .......... END Optional options .......... .......... $cinco )"
spa82="$(echo $cinco FINAL .......... Opciones opcionales .......... .......... $cinco )"
####
####
##########   english: continue with autogen defaults configs cfg
##########   spanish: continua con auto genera configs cfg por defecto
####
####
#### english: where save default files #### spanish: donde se guardan los archivos
####
####
me="$defaultminicfg_eng"
ms="$defaultminicfg_spa"
fe="$defaultfullcfg_eng"
fs="$defaultfullcfg_spa"
####
####
#### wizard mini-english
####
####
echo -E "$var0"  &> $me
echo -E "$var1"  "$tabz" "$eng1"  &>> "$me"
echo -E "$var2"  "$tabz" "$eng2"  &>> "$me"
echo -E "$var3"  "$tabz" "$eng3"  &>> "$me"
echo -E "$var4"  "$tabz" "$eng4"  &>> "$me"
echo -E "$var5"  "$tabz" "$eng5"  &>> "$me"
echo -E "$var6"  "$tabz" "$eng6"  &>> "$me"
echo -E "$var7"  "$tabz" "$eng7"  &>> "$me"
echo -E "$var8"  "$tabz" "$eng8"  &>> "$me"
echo -E "$var9"  "$tabz" "$eng9"  &>> "$me"
echo -E "$var10" "$tabz" "$eng10" &>> "$me"
echo -E "$var11" "$tabz" "$eng11" &>> "$me"
echo -E "$var12" "$tabz" "$eng12" &>> "$me"
echo -E "$var13" "$tabz" "$eng13" &>> "$me"
echo -E "$var14" "$tabz" "$eng14" &>> "$me"
echo -E "$var15" "$tabz" "$eng15" &>> "$me"
echo -E "$var16" "$tabz" "$eng16" &>> "$me"
echo -E "$var17" "$tabz" "$eng17" &>> "$me"
echo -E "$var18" "$tabz" "$eng18" &>> "$me"
echo -E "$var19" "$tabz" "$eng19" &>> "$me"
echo -E "$var20" "$tabz" "$eng20" &>> "$me"
echo -E "$var21" "$tabz" "$eng21" &>> "$me"
echo -E "$var22" "$tabz" "$eng22" &>> "$me"
echo -E "$var23" "$tabz" "$eng23" &>> "$me"
echo -E "$var24" "$tabz" "$eng24" &>> "$me"
####
####
#### wizard mini-spanish
####
####
echo "$var0"  &> "$ms"
echo "$var1"  "$tabz" "$spa1"  &>> "$ms"
echo "$var2"  "$tabz" "$spa2"  &>> "$ms"
echo "$var3"  "$tabz" "$spa3"  &>> "$ms"
echo "$var4"  "$tabz" "$spa4"  &>> "$ms"
echo "$var5"  "$tabz" "$spa5"  &>> "$ms"
echo "$var6"  "$tabz" "$spa6"  &>> "$ms"
echo "$var7"  "$tabz" "$spa7"  &>> "$ms"
echo "$var8"  "$tabz" "$spa8"  &>> "$ms"
echo "$var9"  "$tabz" "$spa9"  &>> "$ms"
echo "$var10" "$tabz" "$spa10" &>> "$ms"
echo "$var11" "$tabz" "$spa11" &>> "$ms"
echo "$var12" "$tabz" "$spa12" &>> "$ms"
echo "$var13" "$tabz" "$spa13" &>> "$ms"
echo "$var14" "$tabz" "$spa14" &>> "$ms"
echo "$var15" "$tabz" "$spa15" &>> "$ms"
echo "$var16" "$tabz" "$spa16" &>> "$ms"
echo "$var17" "$tabz" "$spa17" &>> "$ms"
echo "$var18" "$tabz" "$spa18" &>> "$ms"
echo "$var19" "$tabz" "$spa19" &>> "$ms"
echo "$var20" "$tabz" "$spa20" &>> "$ms"
echo "$var21" "$tabz" "$spa21" &>> "$ms"
echo "$var22" "$tabz" "$spa22" &>> "$ms"
echo "$var23" "$tabz" "$spa23" &>> "$ms"
echo "$var24" "$tabz" "$spa24" &>> "$ms"
####
####
#### wizard full-english
####
####
echo -E "$var0"  &> "$fe"
echo -E "$var1"  "$tabz" "$eng1"  &>> "$fe"
echo -E "$var2"  "$tabz" "$eng2"  &>> "$fe"
echo -E "$var3"  "$tabz" "$eng3"  &>> "$fe"
echo -E "$var4"  "$tabz" "$eng4"  &>> "$fe"
echo -E "$var5"  "$tabz" "$eng5"  &>> "$fe"
echo -E "$var6"  "$tabz" "$eng6"  &>> "$fe"
echo -E "$var7"  "$tabz" "$eng7"  &>> "$fe"
echo -E "$var8"  "$tabz" "$eng8"  &>> "$fe"
echo -E "$var9"  "$tabz" "$eng9"  &>> "$fe"
echo -E "$var10" "$tabz" "$eng10" &>> "$fe"
echo -E "$var11" "$tabz" "$eng11" &>> "$fe"
echo -E "$var12" "$tabz" "$eng12" &>> "$fe"
echo -E "$var13" "$tabz" "$eng13" &>> "$fe"
echo -E "$var14" "$tabz" "$eng14" &>> "$fe"
echo -E "$var15" "$tabz" "$eng15" &>> "$fe"
echo -E "$var16" "$tabz" "$eng16" &>> "$fe"
echo -E "$var17" "$tabz" "$eng17" &>> "$fe"
echo -E "$var18" "$tabz" "$eng18" &>> "$fe"
echo -E "$var19" "$tabz" "$eng19" &>> "$fe"
echo -E "$var20" "$tabz" "$eng20" &>> "$fe"
echo -E "$var21" "$tabz" "$eng21" &>> "$fe"
echo -E "$var22" "$tabz" "$eng22" &>> "$fe"
echo -E "$var23" "$tabz" "$eng23" &>> "$fe"
echo -E "$var24" "$tabz" "$eng24" &>> "$fe"
##### english: advance variables
##### spanish: avanzadas variables
echo -E "$var30" "$tabz" "$eng30" &>> "$fe"
echo -E "$var31" "$tabz" "$eng31" &>> "$fe"
echo -E "$var32" "$tabz" "$eng32" &>> "$fe"
echo -E "$var33" "$tabz" "$eng33" &>> "$fe"
echo -E "$var34" "$tabz" "$eng34" &>> "$fe"
echo -E "$var35" "$tabz" "$eng35" &>> "$fe"
echo -E "$var36" "$tabz" "$eng36" &>> "$fe"
echo -E "$var37" "$tabz" "$eng37" &>> "$fe"
echo -E "$var38" "$tabz" "$eng38" &>> "$fe"
echo -E "$var39" "$tabz" "$eng39" &>> "$fe"
echo -E "$var40" "$tabz" "$eng40" &>> "$fe"
echo -E "$var41" "$tabz" "$eng41" &>> "$fe"
echo -E "$var42" "$tabz" "$eng42" &>> "$fe"
echo -E "$var43" "$tabz" "$eng43" &>> "$fe"
echo -E "$var44" "$tabz" "$eng44" &>> "$fe"
echo -E "$var45" "$tabz" "$eng45" &>> "$fe"
echo -E "$var46" "$tabz" "$eng46" &>> "$fe"
echo -E "$var47" "$tabz" "$eng47" &>> "$fe"
echo -E "$var48" "$tabz" "$eng48" &>> "$fe"
echo -E "$var49" "$tabz" "$eng49" &>> "$fe"
echo -E "$var50" "$tabz" "$eng50" &>> "$fe"
echo -E "$var51" "$tabz" "$eng51" &>> "$fe"
echo -E "$var52" "$tabz" "$eng52" &>> "$fe"
echo -E "$var53" "$tabz" "$eng53" &>> "$fe"
echo -E "$var54" "$tabz" "$eng54" &>> "$fe"
echo -E "$var55" "$tabz" "$eng55" &>> "$fe"
echo -E "$var56" "$tabz" "$eng56" &>> "$fe"
echo -E "$var57" "$tabz" "$eng57" &>> "$fe"
echo -E "$var58" "$tabz" "$eng58" &>> "$fe"
echo -E "$var59" "$tabz" "$eng59" &>> "$fe"
echo -E "$var60" "$tabz" "$eng60" &>> "$fe"
echo -E "$var61" "$tabz" "$eng61" &>> "$fe"
echo -E "$var62" "$tabz" "$eng62" &>> "$fe"
echo -E "$var63" "$tabz" "$eng63" &>> "$fe"
echo -E "$var64" "$tabz" "$eng64" &>> "$fe"
echo -E "$var65" "$tabz" "$eng65" &>> "$fe"
echo -E "$var66" "$tabz" "$eng66" &>> "$fe"
echo -E "$var67" "$tabz" "$eng67" &>> "$fe"
echo -E "$var68" "$tabz" "$eng68" &>> "$fe"
echo -E "$var69" "$tabz" "$eng69" &>> "$fe"
echo -E "$var70" "$tabz" "$eng70" &>> "$fe"
echo -E "$var71" "$tabz" "$eng71" &>> "$fe"
echo -E "$var72" "$tabz" "$eng72" &>> "$fe"
echo -E "$var73" "$tabz" "$eng73" &>> "$fe"
echo -E "$var74" "$tabz" "$eng74" &>> "$fe"
echo -E "$var75" "$tabz" "$eng75" &>> "$fe"
echo -E "$var76" "$tabz" "$eng76" &>> "$fe"
echo -E "$var77" "$tabz" "$eng77" &>> "$fe"
echo -E "$var78" "$tabz" "$eng78" &>> "$fe"
echo -E "$var79" "$tabz" "$eng79" &>> "$fe"
echo -E "$var80" "$tabz" "$eng80" &>> "$fe"
echo -E "$var81" "$tabz" "$eng81" &>> "$fe"
echo -E "$var82" "$tabz" "$eng82" &>> "$fe"
####
####
#### wizard full-spanish
####
####
echo -E "$var0"  &> "$fs"
echo -E "$var1"  "$tabz" "$spa1" &>> "$fs"
echo -E "$var2"  "$tabz" "$spa2" &>> "$fs"
echo -E "$var3"  "$tabz" "$spa3" &>> "$fs"
echo -E "$var4"  "$tabz" "$spa4" &>> "$fs"
echo -E "$var5"  "$tabz" "$spa5" &>> "$fs"
echo -E "$var6"  "$tabz" "$spa6" &>> "$fs"
echo -E "$var7"  "$tabz" "$spa7" &>> "$fs"
echo -E "$var8"  "$tabz" "$spa8" &>> "$fs"
echo -E "$var9"  "$tabz" "$spa9" &>> "$fs"
echo -E "$var10" "$tabz" "$spa10" &>> "$fs"
echo -E "$var11" "$tabz" "$spa11" &>> "$fs"
echo -E "$var12" "$tabz" "$spa12" &>> "$fs"
echo -E "$var13" "$tabz" "$spa13" &>> "$fs"
echo -E "$var14" "$tabz" "$spa14" &>> "$fs"
echo -E "$var15" "$tabz" "$spa15" &>> "$fs"
echo -E "$var16" "$tabz" "$spa16" &>> "$fs"
echo -E "$var17" "$tabz" "$spa17" &>> "$fs"
echo -E "$var18" "$tabz" "$spa18" &>> "$fs"
echo -E "$var19" "$tabz" "$spa19" &>> "$fs"
echo -E "$var20" "$tabz" "$spa20" &>> "$fs"
echo -E "$var21" "$tabz" "$spa21" &>> "$fs"
echo -E "$var22" "$tabz" "$spa22" &>> "$fs"
echo -E "$var23" "$tabz" "$spa23" &>> "$fs"
echo -E "$var24" "$tabz" "$spa24" &>> "$fs"
##### english: advance variables
##### spanish: avanzadas variables
echo -E "$var30" "$tabz" "$spa30" &>> "$fs"
echo -E "$var31" "$tabz" "$spa31" &>> "$fs"
echo -E "$var32" "$tabz" "$spa32" &>> "$fs"
echo -E "$var33" "$tabz" "$spa33" &>> "$fs"
echo -E "$var34" "$tabz" "$spa34" &>> "$fs"
echo -E "$var35" "$tabz" "$spa35" &>> "$fs"
echo -E "$var36" "$tabz" "$spa36" &>> "$fs"
echo -E "$var37" "$tabz" "$spa37" &>> "$fs"
echo -E "$var38" "$tabz" "$spa38" &>> "$fs"
echo -E "$var39" "$tabz" "$spa39" &>> "$fs"
echo -E "$var40" "$tabz" "$spa40" &>> "$fs"
echo -E "$var41" "$tabz" "$spa41" &>> "$fs"
echo -E "$var42" "$tabz" "$spa42" &>> "$fs"
echo -E "$var43" "$tabz" "$spa43" &>> "$fs"
echo -E "$var44" "$tabz" "$spa44" &>> "$fs"
echo -E "$var45" "$tabz" "$spa45" &>> "$fs"
echo -E "$var46" "$tabz" "$spa46" &>> "$fs"
echo -E "$var47" "$tabz" "$spa47" &>> "$fs"
echo -E "$var48" "$tabz" "$spa48" &>> "$fs"
echo -E "$var49" "$tabz" "$spa49" &>> "$fs"
echo -E "$var50" "$tabz" "$spa50" &>> "$fs"
echo -E "$var51" "$tabz" "$spa51" &>> "$fs"
echo -E "$var52" "$tabz" "$spa52" &>> "$fs"
echo -E "$var53" "$tabz" "$spa53" &>> "$fs"
echo -E "$var54" "$tabz" "$spa54" &>> "$fs"
echo -E "$var55" "$tabz" "$spa55" &>> "$fs"
echo -E "$var56" "$tabz" "$spa56" &>> "$fs"
echo -E "$var57" "$tabz" "$spa57" &>> "$fs"
echo -E "$var58" "$tabz" "$spa58" &>> "$fs"
echo -E "$var59" "$tabz" "$spa59" &>> "$fs"
echo -E "$var60" "$tabz" "$spa60" &>> "$fs"
echo -E "$var61" "$tabz" "$spa61" &>> "$fs"
echo -E "$var62" "$tabz" "$spa62" &>> "$fs"
echo -E "$var63" "$tabz" "$spa63" &>> "$fs"
echo -E "$var64" "$tabz" "$spa64" &>> "$fs"
echo -E "$var65" "$tabz" "$spa65" &>> "$fs"
echo -E "$var66" "$tabz" "$spa66" &>> "$fs"
echo -E "$var67" "$tabz" "$spa67" &>> "$fs"
echo -E "$var68" "$tabz" "$spa68" &>> "$fs"
echo -E "$var69" "$tabz" "$spa69" &>> "$fs"
echo -E "$var70" "$tabz" "$spa70" &>> "$fs"
echo -E "$var71" "$tabz" "$spa71" &>> "$fs"
echo -E "$var72" "$tabz" "$spa72" &>> "$fs"
echo -E "$var73" "$tabz" "$spa73" &>> "$fs"
echo -E "$var74" "$tabz" "$spa74" &>> "$fs"
echo -E "$var75" "$tabz" "$spa75" &>> "$fs"
echo -E "$var76" "$tabz" "$spa76" &>> "$fs"
echo -E "$var77" "$tabz" "$spa77" &>> "$fs"
echo -E "$var78" "$tabz" "$spa78" &>> "$fs"
echo -E "$var79" "$tabz" "$spa79" &>> "$fs"
echo -E "$var80" "$tabz" "$spa80" &>> "$fs"
echo -E "$var81" "$tabz" "$spa81" &>> "$fs"
echo -E "$var82" "$tabz" "$spa82" &>> "$fs"
####
####
echo "# [  ok  ] [ Wizard and templates cfg regenerated ]"
exit ; fi
####
####
#### :rutina-final-regen-config:
##########  english:  sane variables: for working sane         ########## 
##########  spanish:  sana variables: para funcionamiento sano ##########
#### :rutina-inicial-sane:
####
####
case "$NULL" in "$allow_autosave")         ;;  *)  allow_autosave="no" ;;  esac
case "$NULL" in "$allow_dmz_ip4")          ;;  *)  allow_dmz_ip4="no" ;; esac
case "$NULL" in "$allow_dmz_ip6")          ;;  *)  allow_dmz_ip6="no" ;; esac
case "$NULL" in "$allow_forward_ip4")      ;;  *)  allow_forward_ip4="no" ;; esac
case "$NULL" in "$allow_forward_ip6")      ;;  *)  allow_forward_ip6="no" ;; esac
case "$NULL" in "$allow_gateway_ip4")      ;;  *)  allow_gateway_ip4="no" ;; esac
case "$NULL" in "$allow_gateway_ip6")      ;;  *)  allow_gateway_ip6="no" ;; esac
case "$NULL" in "$allow_input_all")        ;;  *)  allow_input_all="no";; esac
case "$NULL" in "$allow_input_bandwidth")  ;;  *)  allow_input_bandwidth="no";; esac
case "$NULL" in "$allow_input_maxconnect") ;;  *)  allow_input_maxconnect="no";; esac
case "$NULL" in "$allow_input_ping")       ;;  *)  allow_input_ping="no";; esac
case "$NULL" in "$allow_input_state")      ;;  *)  allow_input_state="no";; esac
case "$NULL" in "$allow_ipv4")             ;;  *)  allow_ipv4="no" ;; esac
case "$NULL" in "$allow_ipv6")             ;;  *)  allow_ipv6="no" ;; esac
case "$NULL" in "$allow_legacy")           ;;  *)  allow_legacy="no" ;; esac
case "$NULL" in "$allow_mac_blacklist")    ;;  *)  allow_mac_blacklist="no" ;; esac
case "$NULL" in "$allow_mac_whitelist")    ;;  *)  allow_mac_whitelist="no" ;; esac
case "$NULL" in "$allow_shield_maxtries")  ;;  *)  allow_shield_maxtries="no" ;; esac
case "$NULL" in "$allow_net_blacklist")    ;;  *)  allow_net_blacklist="no";; esac
case "$NULL" in "$allow_net_vpn")          ;;  *)  allow_net_vpn="no";; esac
case "$NULL" in "$allow_nft")              ;;  *)  allow_nft="no" ;; esac
case "$NULL" in "$allow_only_output")      ;;  *)  allow_only_output="no" ;; esac
case "$NULL" in "$allow_other_protocols")  ;;  *)  allow_other_protocols="no";; esac
case "$NULL" in "$allow_others_protocols") ;;  *)  allow_others_protocols="no" ;; esac
case "$NULL" in "$allow_output_all")       ;;  *)  allow_output_all="no";; esac
case "$NULL" in "$allow_output_bandwidth") ;;  *)  allow_output_bandwidth="no";; esac
case "$NULL" in "$allow_output_gid")       ;;  *)  allow_output_gid="no";; esac
case "$NULL" in "$allow_output_maxconnect");;  *)  allow_output_maxconnect="no";; esac
case "$NULL" in "$allow_output_ping")      ;;  *)  allow_output_ping="no";; esac
case "$NULL" in "$allow_output_state")     ;;  *)  allow_output_state="no";; esac
case "$NULL" in "$allow_output_uid")       ;;  *)  allow_output_uid="no";; esac
case "$NULL" in "$choosed_iptables")       ;;  *)  choosed_iptables="no";; esac
case "$NULL" in "$launch_firewall")        ;;  *)  launch_firewall="no" ;; esac
case "$NULL" in "$list_rules_conceptual")  ;;  *)  list_rules_conceptual="-n";; esac
case "$NULL" in "$name_firewall")          ;;  *)  name_firewall="no" ;; esac
case "$NULL" in "$type_firewall")          ;;  *)  type_firewall="no" ;; esac
####
####
#### :rutina-final-sane:
##########    english: autosave: autosave of firewall to restore standard rules                 ##########
##########    english: autosave: autoguardado de firewall para recuperador de reglas estandar   ##########
#### :rutina-inicial-autosave:
####
####
#### english: iptables saved
#### spanish: iptables guardado
####
####
#### english: autosave with name autosave
#### spanish: autoguardado con nombre autosave
####
####
if [ "$first_option" = "autosave" ] && [ "$allow_autosave" = "$NULL" ]; then 
echo "  [ autosave ] [ firewall saved ] [ autosave-fwiptables ]" ;
$cmd_fwiptables save autosave-fwiptables &> /dev/null ; exit; fi
####
####
#### :rutina-final-autosave:
##########    english: ready system rules con its option               ##########
##########    spanish: preprara reglas del sistema con sus opciones    ##########
####
####
####   #### english: The first        firewall of system  
####   #### spanish: El primero       cortafuego del sistema
####
####
####
####
####   #### english: firewall of system custom:
####   #### spanish: cortafuego del sistema custom:
####
####
##########   english: custom firewall      ##########
##########   spanish: custom cortafuegos   ##########
#### :rutina-inicial-custom-rules:
####
####
if [ "$first_option" = "custom" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall custom ]" ;
launch_firewall="yes" ;
type_firewall="custom" ;
name_firewall="$second_option" ;
####
####
#### english: configure custom variables if there are
#### spanish: configura variables modificadas si estan ahi
####
####
if [ -f "$directory_config/$second_option" ]; then . "$directory_config/$second_option" ; fi
####
####
if [ ! -f "$directory_config/$second_option" ]; then  $cmd_fwiptables cfg ; 
echo "$tab [ info ] [ $cmd_fwiptables custom file-cfg ]"
echo "$tab [ info ] [ $cmd_fwiptables firewall-custom ]"
exit; fi
####
####
fi
####
####
#### :rutina-final-custom-rules:
##########   english: system firewall           ##########
##########   spanish: cortafuegos del sistema   ##########
#### :rutina-inicial-system-rules:
####
####
####   #### english: firewall of system off-line:
####   #### spanish: cortafuego del sistema off-line:
####
####
if [ "$first_option" = "off-line" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall off-line ]" ;
launch_firewall="yes" ;
type_firewall="off-line";
name_firewall="$first_option";
fi
####
####
####   #### english: firewall of system all-permisive:
####   #### spanish: cortafuego del sistema all-permisive:
####
####
if [ "$first_option" = "all-permisive" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall all-permisive ]" ;
launch_firewall="yes" ;
type_firewall="all-permisive" ;
name_firewall="$first_option";
fi
####
####
####   #### english: firewall of system shield-ssh:
####   #### spanish: cortafuego del sistema shield-ssh:
####
####
if [ "$first_option" = "shield-ssh" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall shield-ssh ]" ;
launch_firewall="yes" ;
type_firewall="shield-ssh"    ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
config_shield_maxtries="5" ;
#### english: ports client and ports server
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="" ;
client_port_tcp="http,https,ssh" ;
server_port_tcp="ssh" ;
fi
####
####
####   #### english: firewall of system client-web:
####   #### spanish: cortafuego del sistema client-web:
####
####
if [ "$first_option" = "client-web" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall client-web ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ;
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### you can connect normal web
server_port_udp="" ;
client_port_tcp="http,https,ssh" ;
client_port_udp="domain,bootpc,ntp,https" ;
server_port_tcp="" ;
fi
####
####
####   #### english: firewall of system client-vnc:
####   #### spanish: cortafuego del sistema client-vnc:
####
####
if [ "$first_option" = "client-vnc" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall client-vnc ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ;
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### you can connect normal web and vnc
server_port_udp="" ;
client_port_tcp="http,https,ssh,5900:5910" ;
client_port_udp="domain,bootpc,ntp,https" ;
server_port_tcp="" ;
fi
####
####
####   #### english: firewall of system client-torrent:
####   #### spanish: cortafuego del sistema client-torrent:
####
####
if [ "$first_option" = "client-torrent" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall client-torrent ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### you can connect web normal and bittorrent too
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="1025:65000" ;
client_port_tcp="http,https,ssh,9091,51413" ;
server_port_tcp="9091,51413" ;
fi
####
####
####   #### english: firewall of system client-vpn:
####   #### spanish: cortafuego del sistema client-vpn:
####
####
if [ "$first_option" = "client-vpn" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall client-vpn ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### you can connect web normal and web vpn
server_port_udp="" ;
client_port_udp="domain,bootpc,ntp,https,500,1194,1701,4500" ; 
client_port_tcp="http,https,ssh,443,1701,1723" ; 
server_port_tcp="" ;
fi
####
####
####   #### english: firewall of system client-tor:
####   #### spanish: cortafuego del sistema client-tor:
####
####
if [ "$first_option" = "client-tor" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall client-tor ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### you can connect web normal and web tor
server_port_udp="" ; 
client_port_udp="domain,bootpc,ntp,https" ;
client_port_tcp="http,https,ssh,9000:9170" ;
server_port_tcp="" ;
fi
####
####
####   #### english: firewall of system client-news:
####   #### spanish: cortafuego del sistema client-news:
####
####
if [ "$first_option" = "client-news" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall client-news ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### client news:
#### The well-known TCP port 119 is reserved for NNTP. Well-known TCP port 433 (NNSP) 
#### may be used when doing a bulk transfer of articles from one 
#### server to another. When clients connect to a news server with Transport Layer Security (TLS),
#### TCP port 563 is often used. This is sometimes referred to as NNTPS. 
#### Alternatively, a plain-text connection over port 119 may be changed to use TLS via the STARTTLS command. 
server_port_udp="" ; 
client_port_udp="domain,bootpc,ntp,https" ;
client_port_tcp="http,https,ssh,119,433,563" ;
server_port_tcp="" ;
fi
####
####
####   #### english: firewall of system client-mail:
####   #### spanish: cortafuego del sistema client-mail:
####
####
if [ "$first_option" = "client-mail" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall client-mail ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### client news:
#### The well-known TCP port 119 is reserved for NNTP. Well-known TCP port 433 (NNSP) 
#### may be used when doing a bulk transfer of articles from one 
#### server to another. When clients connect to a news server with Transport Layer Security (TLS),
#### TCP port 563 is often used. This is sometimes referred to as NNTPS. 
#### Alternatively, a plain-text connection over port 119 may be changed to use TLS via the STARTTLS command. 
#### client mail:
#### SMTP (sending mail)	Unencrypted	25* (or 26)
#### POP3 (receiving mail)	Encrypted - TLS	995
#### POP3 (receiving mail)	Encrypted - SSL	995
#### POP3 (receiving mail)	Unencrypted	110
#### negotiation submission     tls             465 and 587
#### 
server_port_udp="" ; 
client_port_udp="domain,bootpc,ntp,https" ;
client_port_tcp="http,https,ssh,25,119,433,563,25:26,995,110,465,587" ;
server_port_tcp="" ;
fi
####
####
####   #### english: firewall of system client-ftp:
####   #### spanish: cortafuego del sistema client-ftp:
####
####
if [ "$first_option" = "client-ftp" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall client-ftp ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ;
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### client ftp:
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="" ;
client_port_tcp="http,https,ssh,ftp,ftp-data,ftps,ftps-data" ;
server_port_tcp="" ;
fi
####
####
####   #### english: firewall of system client-squid:
####   #### spanish: cortafuego del sistema client-squid:
####
####
if [ "$first_option" = "client-squid" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall client-squid ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### server http and https and ssh /tcp and https udp
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="" ;
client_port_tcp="http,https,ssh,8080,3128" ;
server_port_tcp="" ;
fi
####
####
####   #### english: firewall of system lan-vpn:
####   #### spanish: cortafuego del sistema lan-vpn:
####
####
if [ "$first_option" = "lan-vpn" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall lan-vpn ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### vpn ports to connects ports vpn
#### with necesary ports to connect gatway and date, domain for your ip
server_port_udp="" ;
client_port_udp="domain,bootpc,ntp,500,1194,1701,4500" ; 
client_port_tcp="1701,1723" ; 
server_port_tcp="" ;
fi
####
####
####   #### english: firewall of system lan-tor:
####   #### spanish: cortafuego del sistema lan-tor:
####
####
if [ "$first_option" = "lan-tor" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall lan-tor ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### lan tor, 9000:9170 for connect to tor
#### with necesary ports to connect gatway and date, domain for your ip
server_port_udp="" ;
client_port_udp="bootpc,domain,ntp" ;
client_port_tcp="9000:9170" ;
server_port_tcp="" ;
fi
####
####
####   #### english: firewall of system games-shooter:
####   #### spanish: cortafuego del sistema games-shooter:
####
####
if [ "$first_option" = "games-shooter" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall games-shooter ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### games shooter 3D all udp without the root ports 1:1024 and ftp for download maps
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="1025:65000" ;
client_port_tcp="http,https,ssh,ftp,ftp-data,ftps,ftps-data" ;
server_port_tcp="" ;
fi
####
####
####   #### english: firewall of system game-wesnoth:
####   #### spanish: cortafuego del sistema game-wesnoth:
####
####
if [ "$first_option" = "game-wesnoth" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall game-wesnoth ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### game wesnoth port 14999 and 15001 usually
client_port_udp="domain,bootpc,ntp,https" ; 
server_port_udp="" ;
client_port_tcp="http,https,ssh,14950:15050" ;
server_port_tcp="14950:15050" ;
fi
####
####
####   #### english: firewall of system game-minetest:
####   #### spanish: cortafuego del sistema game-minetest:
####
####
if [ "$first_option" = "game-minetest" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall game-minetest ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### game minetest and minecraft porst 25k and 35k /udp
client_port_udp="domain,bootpc,ntp,https,25000:35000" ; 
server_port_udp="" ;
client_port_tcp="http,https,ssh,25000:35000" ;
server_port_tcp="25000:35000" ;
fi
####
####
####   #### english: firewall of system game-freeciv:
####   #### spanish: cortafuego del sistema game-freeciv:
####
####
if [ "$first_option" = "game-freeciv" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall game-freeciv ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
alllow_shield_ssh="no" ;
#### for default 5556 port tcp perhaps 5555 too
client_port_udp="domain,bootpc,ntp,https" ; 
server_port_udp="" ;
client_port_tcp="http,https,ssh,5555:5556" ;
server_port_tcp="5555:5556" ;
fi
####
####
####   #### english: firewall of system game-widelands:
####   #### spanish: cortafuego del sistema game-widelands:
####
####
if [ "$first_option" = "game-widelands" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall game-widelands ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="no" ;
#### for default 7396 port tcp and 7396 udp
client_port_udp="domain,bootpc,ntp,https,7396" ; 
server_port_udp="7396" ;
client_port_tcp="http,https,ssh,7396" ;
server_port_tcp="7396" ;
fi
####
####
####   #### english: firewall of system server-web:
####   #### spanish: cortafuego del sistema server-web:
####
####
if [ "$first_option" = "server-web" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-web ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
#### server http and https and ssh /tcp and https udp
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="https" ;
client_port_tcp="http,https,ssh" ;
server_port_tcp="http,https,ssh" ;
fi
####
####
####   #### english: firewall of system server-vnc:
####   #### spanish: cortafuego del sistema server-vnc:
####
####
if [ "$first_option" = "server-vnc" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-vnc ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ;
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
config_shield_maxtries="20" ;
config_shield_port="22,5900:5910"
#### you can connect normal web and vnc
server_port_udp="" ;
client_port_tcp="http,https,ssh,5900:5910" ;
client_port_udp="domain,bootpc,ntp,https" ;
server_port_tcp="ssh,5900:5910" ;
fi
####
####
####   #### english: firewall of system server-ftp:
####   #### spanish: cortafuego del sistema server-ftp:
####
####
if [ "$first_option" = "server-ftp" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-ftp ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
#### server http and https and ssh /tcp and https udp
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="" ;
client_port_tcp="http,https,ssh,ftp,ftp-data,ftps,ftps-data" ;
server_port_tcp="http,https,ssh,ftp,ftp-data,ftps,ftps-data" ;
fi
####
####
####   #### english: firewall of system server-squid:
####   #### spanish: cortafuego del sistema server-squid:
####
####
if [ "$first_option" = "server-squid" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-squid ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
#### server http and https and ssh /tcp and https udp
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="" ;
client_port_tcp="http,https,ssh,8080,3128" ;
server_port_tcp="http,https,ssh,8080,3128" ;
fi
####
####
####   #### english: firewall of system server-news:
####   #### spanish: cortafuego del sistema server-news:
####
####
if [ "$first_option" = "server-news" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-news ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
#### client news:
#### The well-known TCP port 119 is reserved for NNTP. Well-known TCP port 433 (NNSP) 
#### may be used when doing a bulk transfer of articles from one 
#### server to another. When clients connect to a news server with Transport Layer Security (TLS),
#### TCP port 563 is often used. This is sometimes referred to as NNTPS. 
#### Alternatively, a plain-text connection over port 119 may be changed to use TLS via the STARTTLS command. 
server_port_udp="" ; 
client_port_udp="domain,bootpc,ntp,https" ;
client_port_tcp="http,https,ssh,119,433,563" ;
server_port_tcp="http,https,ssh,119,433,563" ;
fi
####
####
####   #### english: firewall of system server-mail:
####   #### spanish: cortafuego del sistema server-mail:
####
####
if [ "$first_option" = "server-mail" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-mail ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
#### client news:
#### The well-known TCP port 119 is reserved for NNTP. Well-known TCP port 433 (NNSP) 
#### may be used when doing a bulk transfer of articles from one 
#### server to another. When clients connect to a news server with Transport Layer Security (TLS),
#### TCP port 563 is often used. This is sometimes referred to as NNTPS. 
#### Alternatively, a plain-text connection over port 119 may be changed to use TLS via the STARTTLS command. 
#### client mail:
#### SMTP (sending mail)	Unencrypted	25* (or 26)
#### POP3 (receiving mail)	Encrypted - TLS	995
#### POP3 (receiving mail)	Encrypted - SSL	995
#### POP3 (receiving mail)	Unencrypted	110
#### negotiation submission     tls             465 and 587
#### 
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="https" ;
client_port_tcp="http,https,ssh,25,119,433,563,25:26,995,110,465,587" ;
server_port_tcp="http,https,ssh,25,119,433,563,25:26,995,110,465,587" ;
fi
####
####
####   #### english: firewall of system server-samba:
####   #### spanish: cortafuego del sistema server-samba:
####
####
if [ "$first_option" = "server-samba" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-samba ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
#### server samba and active directory
client_port_tcp="http,https,ssh,ldap,636,microsoft-ds" ;
client_port_udp="domain,bootpc,ntp,https,ldap,636,137:139" ;
server_port_tcp="ssh,ldap,636,microsoft-ds" ; 
server_port_udp="ntp,domain,ldap,636,137:139" ;
fi
####
####
####   #### english: firewall of system server-print:
####   #### spanish: cortafuego del sistema server-print:
####
####
if [ "$first_option" = "server-print" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-print ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
#### server ipp and printer
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="" ;
client_port_tcp="http,https,ssh" ;
server_port_tcp="ssh,printer,ipp" ;
fi
####
####
####   #### english: firewall of system server-ssh:
####   #### spanish: cortafuego del sistema server-ssh:
####
####
if [ "$first_option" = "server-ssh" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-ssh ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ;
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
#### server ssh 22/tcp
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="" ;
client_port_tcp="http,https,ssh" ;
server_port_tcp="ssh" ;
fi
####
####
####   #### english: firewall of system server-lamp:
####   #### spanish: cortafuego del sistema server-lamp:
####
####
if [ "$first_option" = "server-lamp" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-lamp ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
####  english: udp: 20 is ftp-data, 21 is ftp, 989 is ftps-data y 990 is ftps
####  english: tcp: 10000 is webmin, 3306 is mysql, 5432 is postgresql
client_port_udp="domain,bootpc,ntp,https" ;
server_port_udp="https" ;
client_port_tcp="http,https,ssh,20,21,989,990" ;
server_port_tcp="http,https,ssh,10000,3306,5432" ;
fi
####
####
####   #### english: firewall of system server-asterisk:
####   #### spanish: cortafuego del sistema server-asterisk:
####
####
if [ "$first_option" = "server-asterisk" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-asterisk ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
####    UDP:5060 SIP (sip.conf), newer Versions support TCP:5060
####    UDP:10000-20000 RTP (rtp.conf) for the media stream, a higher Portrange
####    UDP:5036 IAX2
client_port_udp="domain,bootpc,ntp,https,5060,10000:20000,5036" ;
server_port_udp="5060,10000:20000,5036" ;
client_port_tcp="http,https,ssh,5060" ;
server_port_tcp="ssh,5060" ;
fi
####
####
####   #### english: firewall of system server-mumble:
####   #### spanish: cortafuego del sistema server-mumble:
####
####
if [ "$first_option" = "server-mumble" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-mumble ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
#### mumble port 64738 tcp and 64738 udp
client_port_udp="domain,bootpc,ntp,https,64738" ;
server_port_udp="64738" ;
client_port_tcp="http,https,ssh,64738" ;
server_port_tcp="ssh,64738" ;
fi
####
####
####   #### english: firewall of system server-teamspeak:
####   #### spanish: cortafuego del sistema server-teamspeak:
####
####
if [ "$first_option" = "server-teamspeak" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-teamspeak ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
#### Service	        Protocol	Local Port (Server)
#### Voice	        UDP	9987
#### Filetransfer	TCP	30033
#### ServerQuery (raw)	TCP	10011
#### ServerQuery (SSH)	TCP	10022
client_port_udp="domain,bootpc,ntp,https,9987" ;
server_port_udp="9987" ;
client_port_tcp="http,https,ssh,30033,10011,10022" ;
server_port_tcp="ssh,30033,10011,10022" ;
fi
####
####
####   #### english: firewall of system server-sql:
####   #### spanish: cortafuego del sistema server-sql:
####
####
if [ "$first_option" = "server-sql" ]; then echo $give_cover ; echo $give_load ;
echo "  [ info ] [ Configure preferences with: ] [ $cmd_fwiptables modify-default ]" ;
echo "  [ info ] [ loading firewall server-sql ]" ;
launch_firewall="yes" ; 
type_firewall="predesignated" ; 
name_firewall="$first_option" ;
#### english: max tries for each hour 
allow_shield_maxtries="" ;
####  POSTGRESQL 5432/tcp and 5432/udp
####  Technology	Default Port	Required
####  MySQL Client to Server - MySQL Protocol – 3306	3306/tcp	Optional - pick at least 1
####  MySQL Client to Server – New X Protocol – 33060	33060/tcp	Optional - pick at least 1
####  Connects via SSH Tunnel	22/tcp	Optional - pick at least 1
client_port_udp="domain,bootpc,ntp,https,5432" ;
server_port_udp="5432" ;
client_port_tcp="http,https,ssh,5432,3306,3360" ;
server_port_tcp="ssh,5432,3306,3360" ;
fi
####
####
#### :rutina-final-system-rules:
##########    english: mini-options: wellcome with semi help    ##########
##########    spanish: mini-options: bienvenida con semi ayuda  ##########
#### :rutina-inicial-mini-options:
####
####
if [ "$first_option" = "options-mini" ] ; then echo $give_cover
echo "$header_ok [ $first_option ] [ List mini options ] [ mini-options md ] || ||"
echo "$title_md -t|-txt -c|-cli -g|-gui -w|-web -l|-log -n|-null"
echo "$duo_md || || [ firewall ]  ### [  Control firewalls and rules to manage iptables ] ### || ||            "
echo "$text_md   firewall-control |  stop continue reset names actual show save load                           "
echo "$text_md      firewall-list |  ls ls6 list list6 status list-alltables list-filter4 list-filter6         "
echo "$text_md                       list-nat4 list-nat6 list-raw4 list-raw6 list-mangle4 list-mangle6         "
echo "$text_md                       list-security4 list-security6 list-ebtables list-arptables                "
echo "$text_md    firewall-custom |  new-full-config nueva-completa-config regen-config                        "
echo "$text_md                       new-mini-config nueva-mini-config examples-config                         "
echo "$text_md                       show-config modify-config del-config names-config                         "
echo "$text_md    firewall-launch |  eraserules custom wizard-mini wizard-full off-line all-permisive          "
echo "$text_md                       games-shooter game-wesnoth game-minetest game-freeciv game-widelands      "
echo "$text_md                       client-web client-vnc client-mail client-news client-torrent client-vpn   "
echo "$text_md                       client-tor client-ftp client-squid lan-tor lan-vpn shield-ssh server-ssh "
echo "$text_md                       server-vnc server-web server-samba server-print server-lamp server-news   "
echo "$text_md                       server-mail server-ftp server-teamspeak server-mumble server-sql          "
echo "$text_md                       server-asterisk server-squid                                              "
exit ; fi
####
####
#### :rutina-final-mini-options:
##########    english: names-config: list some config       ##########
##########    spanish: names-config: lista alguna config    ##########
#### :rutina-inicial-names-config:
####
####
if [ "$first_option" = "names-config" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ List configs cfg ] || ||"
echo "$tab $tab [ English ] [ list configs files in cfg format ]"
echo "$tab $tab [ Spanish ] [ Lista de archivos de configuraciones en cfg formato ]"
default_files_cfg="default-full-english.cfg|default-full-spanish.cfg\
|default-mini-english|default-mini-spanish|wizard-full|wizard-mini|nodefault-tmp"
echo "$tab"
echo "$tab [ System files ]"
$command_ls -1 $directory_config/ | $command_grep -E -i $default_files_cfg
echo "$tab"
echo "$tab [ User files ]"
$command_ls -1 $directory_config/ | $command_grep -E -iv $default_files_cfg
echo "$tab"
echo "$tab [ OK CFG FILES NAMES ]"
echo 
exit; fi
####
####
#### :rutina-final-names-config:
##########    english: -gui: Manage gui con three options  ##########
##########    spanish: -gui: Maneja gui con tres opciones  ##########
####
####
#### english: with third option
#### spanish: con tercera opcion
####
####
if [ "$first_option" = "-gui" ] && [ "$third_option" != "$NULL" ] ; then $nada
echo $head_waiting_gui
case "$command_zenity" in "$NULL") echo "  [ fail ] [ Install zenity to work ]" ; exit ;; esac
case $second_option in
#### 
#### 
"new-mini-config")
cp "$defaultminicfg_eng" "$directory_temporal/$cmd_fwiptables-$third_option"
$command_zenity --text-info $graphic_dimension --filename="$directory_temporal/$cmd_fwiptables-$third_option" \
--editable --title="NEW MINI CONFIG" &> "$directory_config/$third_option" ;
if [ -s "$directory_config/$third_option" ]; then $nada ;
$command_zenity --forms $graphic_dimension --text="OK new config file: $third_option || AND || launch: $cmd_fwiptables custom $third_option" ; exit
else rm "$directory_config/$third_option" ; 
$command_zenity --forms $graphic_dimension --text="Canceled new file: $third_option" ; exit; fi
;;
#### 
#### 
"new-full-config")
cp "$defaultfullcfg_eng" "$directory_temporal/$cmd_fwiptables-$third_option"
$command_zenity --text-info $graphic_dimension --filename="$directory_temporal/$cmd_fwiptables-$third_option" \
--editable --title="NEW FULL CONFIG" &> "$directory_config/$third_option" ;
if [ -s "$directory_config/$third_option" ]; then $nada ;
$command_zenity --forms $graphic_dimension --text="OK new config file: $third_option || AND || launch: $cmd_fwiptables custom $third_option" ; exit
else rm "$directory_config/$third_option" ; 
$command_zenity --forms $graphic_dimension --text="Canceled new file: $third_option" ; exit; fi
;;
#### 
#### 
"nueva-mini-config")
cp "$defaultminicfg_spa" "$directory_temporal/$cmd_fwiptables-$third_option"
$command_zenity  --text-info $graphic_dimension --filename="$directory_temporal/$cmd_fwiptables-$third_option" \
--editable --title="NUEVA MINI CONFIG" &> "$directory_config/$third_option" ;
if [ -s "$directory_config/$third_option" ]; then $nada ;
$command_zenity  --forms $graphic_dimension --text="OK new config file: $third_option || AND || launch: $cmd_fwiptables custom $third_option" ; exit
else rm "$directory_config/$third_option" ; 
$command_zenity  --forms $graphic_dimension --text="Canceled new file: $third_option" ; exit; fi
;;
#### 
#### 
"nueva-completa-config")
cp "$defaultfullcfg_spa" "$directory_temporal/$cmd_fwiptables-$third_option"
$command_zenity  --text-info $graphic_dimension --filename="$directory_temporal/$cmd_fwiptables-$third_option" \
--editable --title="NUEVA COMPLETA CONFIG" &> "$directory_config/$third_option" ;
if [ -s "$directory_config/$third_option" ]; then $nada ;
$command_zenity  --forms $graphic_dimension --text="OK new config file: $third_option || AND || launch: $cmd_fwiptables custom $third_option" ; exit
else rm "$directory_config/$third_option" ; 
$command_zenity  --forms $graphic_dimension --text="Canceled new file: $third_option" ; exit; fi
;;
#### 
#### 
"modify-config")
if [ -f "$directory_config/$third_option" ] ; then $nada
else $command_zenity  --forms $graphic_dimension --text="file not found: $third_option" ; exit ; fi 
cp "$directory_config/$third_option" "$directory_temporal/$cmd_fwiptables-$third_option"
$command_zenity  --text-info $graphic_dimension --filename="$directory_temporal/$cmd_fwiptables-$third_option" \
--editable --title="MODIFY CONFIG" &> "$directory_config/$third_option"
if [ -s "$directory_config/$third_option" ]; then $nada ; 
$command_zenity  --forms $graphic_dimension --text="OK. file: $third_option"
else cp "$directory_temporal/$cmd_fwiptables-$third_option" "$directory_config/$third_option"
$command_zenity --forms $graphic_dimension --text="Canceled. file: $third_option"; fi
;;
#### 
####
"game-word") $cmd_fwiptables game-word gui ; exit ;;
"game-number") $cmd_fwiptables game-number gui ; exit ;;
"game-domain") $cmd_fwiptables game-domain gui ; exit ;;
####
####
*)$cmd_fwiptables "$second_option" "$third_option" "$quarter_option" &> "$temporal_guifinal"
$command_zenity  --text-info $graphic_dimension --title="Gui Output || $cmd_fwiptables ||" \
--filename="$temporal_guifinal" --auto-scroll ;;
#### 
#### 
esac
#### 
#### 
exit; fi
####
####
##########    english: -gui: with second option    ##########
##########    spanish: -gui: con segunda opcion    ##########
####
####
if [ "$first_option" = "-gui" ] && [ "$second_option" != "$NULL" ] ; then $nada
echo $head_waiting_gui
case "$command_zenity" in "$NULL") echo "  [ fail ] [ Install zenity to work ]" ; exit ;; esac
case $second_option in
#### 
#### 
wizard-mini)
archivo="wizard-mini"
cp "$defaultminicfg_eng" "$directory_temporal/$cmd_fwiptables-$archivo"
$command_zenity  --text-info $graphic_dimension --filename="$directory_temporal/$cmd_fwiptables-$archivo" \
--editable --title="WIZARD MINI" &> "$directory_config/$archivo"
if [  -s "$directory_config/$archivo" ]; then $nada ; 
$cmd_fwiptables -gui custom $archivo ; $cmd_fwiptables -gui list ;
else rm "$directory_config/$archivo" ;
$command_zenity --info $graphic_dimension --text "Ok. $archivo canceled"; fi
;;
#### 
#### 
wizard-full)
archivo="wizard-full"
cp "$defaultfullcfg_eng" "$directory_temporal/$cmd_fwiptables-$archivo"
$command_zenity  --text-info $graphic_dimension --filename="$directory_temporal/$cmd_fwiptables-$archivo" \
--editable --title="WIZARD FULL" &> "$directory_config/$archivo"
if [  -s "$directory_config/$archivo" ]; then $nada ; 
$cmd_fwiptables -gui custom $second_option ; $cmd_fwiptables -gui list ;
else rm "$directory_config/$archivo" ;
$command_zenity  --info $graphic_dimension --text "OK. $archivo canceled"; fi
;;
#### 
####
modify-default)
cp "$directory_default/$cmd_fwiptables-default" "$directory_temporal/$cmd_fwiptables-default"
$command_zenity  --text-info $graphic_dimension --filename="$directory_temporal/$cmd_fwiptables-default" \
--editable --title="MODIFY DEFAULT" &> "$directory_default/$cmd_fwiptables-default"
if [  -s "$directory_default/$archivo" ]; then $nada ; 
else cp "$directory_temporal/$cmd_fwiptables-default" "$directory_default/$cmd_fwiptables-default" ;
$command_zenity  --info $graphic_dimension --text "OK. $archivo canceled"; fi
;;
#### 
####
"game-word") $cmd_fwiptables game-word gui ; exit ;;
"game-number") $cmd_fwiptables game-number gui ; exit ;;
"game-domain") $cmd_fwiptables game-domain gui ; exit ;;
####
####
*)$cmd_fwiptables $second_option $third_option &> $temporal_guifinal
#### cat $temporal_gui | $command_grep -iv Warning: &> $temporal_guifinal
$command_zenity  --text-info $graphic_dimension --title="Gui Output || $cmd_fwiptables ||" \
--filename="$temporal_guifinal" --auto-scroll ;;
#### 
#### 
esac
#### 
#### 
exit; fi
####
####
##########    english: -gui: without more options    ##########
##########    spanish: -gui: sin mas opcion          ##########
####
####
if [ "$first_option" = "-gui" ] && [ "$second_option" = "$NULL" ] ; then echo $head_waiting_gui
case "$command_zenity" in "$NULL") echo "  [ fail ] [ Install zenity to work ]" ; exit ;; esac
$command_zenity  --forms $graphic_dimension --title="Gui Output || $cmd_fwiptables || " --text="$($cmd_fwiptables mini-options)"
exit; fi
####
####

##########    english: text-pause: do pause     ##########
##########    spanish: text-pause: hace pausa   ##########
#### :rutina-inicial-text-pause:
####
####
if [ "$first_option" = "text-pause" ]; then $nada
read -p '##### [ ok ] ##### Press [enter] to continue now with the cli-menu ##### '
exit; fi
####
####
#### :rutina-final-text-pause:
##########     english: examples-config: Show config files examples            ##########
##########     spanish: examples-config: Muestra ejemplos de configuraciones   ##########
#### :rutina-inicial-examples-config:
####
####
if [ "$first_option" = "examples-config" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ Show examples ] || ||"
echo 
echo "[ examples ] [ examples for some services in client mode ]"
echo
####
####
#### config: web example ####
####
####
echo
echo "# config web example #" 
echo "config_client_tcp=http,https ;"
echo "config_client_udp=domain,ntp,bootpc,http ;"
####
####
#### config:  games example  ####
####
####
echo
echo "# config games example #"
echo "config_client_udp=domain,bootpc,ntp,https,1025:65499; "
echo "config_client_tcp=http,https"
####
####
#### config: wesnoth game example ####
####
####
echo
echo "# config web example #" 
echo "config_client_tcp=http,https,14995:15000 ;"
echo "config_client_udp=domain,ntp,bootpc,http ;"
####
####
#### config:  torrent-example1 ####
####
####
echo
echo "# config torrent example #"
echo "config_client_udp=domain,bootpc,ntp,https,1025:65499; "
echo "config_client_tcp=http,https"
####
####
#### config: samba-example1 ####
####
####
echo
echo "# config samba example #"
echo "config_client_udp=domain,bootpc,ntp,https,137:139 ; "
echo "config_client_tcp=http,https,ipp,microsoft-ds"
echo "allow_output_ping= ; allow_input_ping= ; "
####
####
#### config: server gateway masquerade ##
####
####
echo
echo "# config vpn example #"
echo "allow_gateway_ip4= ; "
####
####
#### config: vpn-sample1 ##
####
####
echo
echo "# config vpn example #"
echo "allow_forward_ip4= ; "
echo "allow_net_vpn= ; "
echo "config_net_vpn=wesnoth.org,sourceforge.net"
####
####
#### config: email-example1 ####
####
####
echo
echo "# config email example #"
echo "config_client_tcp=http,https,rsync,ssh,pop3,pop3s,poppassd,smtp,imap2,imaps"
####
####
#### config: ssh-example1 ####
####
####
echo
echo "# config ssh example #"
echo "config_client_tcp=http,https,printer,ipp,ssh,rsync,git"
####
####
#### config: vnc-example1 ####
####
####
echo
echo "# config vnc example #"
echo "config_client_tcp=http,https,ssh,5900:5910"
####
####
#### config: ftp-example1 ####
####
####
echo
echo "# config ftp example #"
echo "config_client_tcp=http,https,ftp,ftp-data,ftps,ftps-data,gsiftp,zope-ftp"
echo "config_client_udp=domain,bootpc,ntp,https,tftp"
####
####
#### config: printer-example1 ####
####
####
echo
echo "# config printer example #"
echo "config_client_tcp=http,https,ipp,printer"
####
####
#### config: irc-example1 ####
####
####
echo
echo "# config irc example #"
echo "config_client_tcp=http,https,ircd,ircs-u"
####
####
#### config: sql-example1 ####
####
####
echo
echo "# config sql example #"
echo "config_client_tcp=http,https,mysql,postgresql,mysql-proxy,ms-sql-s"
####
####
echo
exit ; fi
####
####
#### :rutina-final-examples-config:
##########    english: eraserules: Erase rules option   ##########
##########    spanish: eraserules: Opcion borra reglas  ##########
#### :rutina-inicial-eraserules:
####
####
if [ "$first_option" = "eraserules" ]; then echo $give_cover 
echo "$header_ok [ $first_option ] [ erase all iptables rules ] || ||"
####
####
#### english: erase the rules
#### spanish: borra las reglas
####
####
$command_arptables -F  &> /dev/null
$command_ebtables -t filter -F &> /dev/null
$command_ebtables -t nat -F &> /dev/null
$command_iptables_nft -t filter -F &> /dev/null
$command_ip6tables_nft -t filter  -F &> /dev/null
$command_iptables_legacy -t filter -F &> /dev/null
$command_ip6tables_legacy -t filter -F &> /dev/null
$command_iptables_nft -t nat -F &> /dev/null
$command_ip6tables_nft -t nat  -F &> /dev/null
$command_iptables_legacy -t nat -F &> /dev/null
$command_ip6tables_legacy -t nat -F &> /dev/null
$command_iptables_nft -t mangle -F &> /dev/null
$command_ip6tables_nft -t mangle  -F &> /dev/null
$command_iptables_legacy -t mangle -F &> /dev/null
$command_ip6tables_legacy -t mangle -F &> /dev/null
$command_iptables_nft -t raw -F &> /dev/null
$command_ip6tables_nft -t raw  -F &> /dev/null
$command_iptables_legacy -t raw -F &> /dev/null
$command_ip6tables_legacy -t raw -F &> /dev/null
$command_iptables_nft -t security -F &> /dev/null
$command_ip6tables_nft -t security -F &> /dev/null
$command_iptables_legacy -t security -F &> /dev/null
$command_ip6tables_legacy -t security -F &> /dev/null
####
####
$command_ebtables -t filter -P INPUT ACCEPT  &> /dev/null
$command_ebtables -t filter -P FORWARD ACCEPT &> /dev/null 
$command_ebtables -t filter -P OUTPUT ACCEPT &> /dev/null
$command_ebtables -t nat -P PREROUTING ACCEPT &> /dev/null
$command_ebtables -t nat -P OUTPUT ACCEPT  &> /dev/null
$command_ebtables -t nat -P POSTROUTING ACCEPT &> /dev/null
$command_iptables_nft -t filter -P INPUT ACCEPT &> /dev/null
$command_iptables_nft -t filter -P FORWARD ACCEPT &> /dev/null
$command_iptables_nft -t filter -P OUTPUT ACCEPT &> /dev/null
$command_ip6tables_nft -t filter -P INPUT ACCEPT &> /dev/null
$command_ip6tables_nft -t filter -P FORWARD ACCEPT &> /dev/null
$command_ip6tables_nft -t filter -P OUTPUT ACCEPT &> /dev/null
$command_iptables_legacy -t filter -P INPUT ACCEPT &> /dev/null
$command_iptables_legacy -t filter -P FORWARD ACCEPT &> /dev/null
$command_iptables_legacy -t filter -P OUTPUT ACCEPT &> /dev/null
$command_ip6tables_legacy -t filter -P INPUT ACCEPT &> /dev/null
$command_ip6tables_legacy -t filter -P FORWARD ACCEPT &> /dev/null
$command_ip6tables_legacy -t filter -P OUTPUT ACCEPT &> /dev/null
$command_iptables_nft -t nat -P INPUT ACCEPT &> /dev/null
$command_iptables_nft -t nat -P OUTPUT ACCEPT &> /dev/null
$command_iptables_nft -t nat -P PREROUTING ACCEPT &> /dev/null
$command_iptables_nft -t nat -P POSTROUTING ACCEPT &> /dev/null
$command_ip6tables_nft -t nat -P INPUT ACCEPT &> /dev/null
$command_ip6tables_nft -t nat -P OUTPUT ACCEPT &> /dev/null
$command_ip6tables_nft -t nat -P PREROUTING ACCEPT &> /dev/null
$command_ip6tables_nft -t nat -P POSTROUTING ACCEPT &> /dev/null
$command_iptables_legacy -t nat -P INPUT ACCEPT &> /dev/null
$command_iptables_legacy -t nat -P OUTPUT ACCEPT &> /dev/null
$command_iptables_legacy -t nat -P PREROUTING ACCEPT &> /dev/null
$command_iptables_legacy -t nat -P POSTROUTING ACCEPT &> /dev/null
$command_ip6tables_legacy -t nat -P INPUT ACCEPT &> /dev/null
$command_ip6tables_legacy -t nat -P OUTPUT ACCEPT &> /dev/null
$command_ip6tables_legacy -t nat -P PREROUTING ACCEPT &> /dev/null
$command_ip6tables_legacy -t nat -P POSTROUTING ACCEPT &> /dev/null
$command_iptables_nft -t mangle -P INPUT ACCEPT &> /dev/null
$command_iptables_nft -t mangle -P FORWARD ACCEPT &> /dev/null
$command_iptables_nft -t mangle -P OUTPUT ACCEPT &> /dev/null
$command_iptables_nft -t mangle -P PREROUTING ACCEPT &> /dev/null
$command_iptables_nft -t mangle -P POSTROUTING ACCEPT &> /dev/null
$command_ip6tables_nft -t mangle -P INPUT ACCEPT &> /dev/null
$command_ip6tables_nft -t mangle -P FORWARD ACCEPT &> /dev/null
$command_ip6tables_nft -t mangle -P OUTPUT ACCEPT &> /dev/null
$command_ip6tables_nft -t mangle -P PREROUTING ACCEPT &> /dev/null
$command_ip6tables_nft -t mangle -P POSTROUTING ACCEPT &> /dev/null
$command_iptables_legacy -t mangle -P INPUT ACCEPT &> /dev/null
$command_iptables_legacy -t mangle -P FORWARD ACCEPT &> /dev/null
$command_iptables_legacy -t mangle -P OUTPUT ACCEPT &> /dev/null
$command_iptables_legacy -t mangle -P PREROUTING ACCEPT &> /dev/null
$command_iptables_legacy -t mangle -P POSTROUTING ACCEPT &> /dev/null
$command_ip6tables_legacy -t mangle -P INPUT ACCEPT &> /dev/null
$command_ip6tables_legacy -t mangle -P FORWARD ACCEPT &> /dev/null
$command_ip6tables_legacy -t mangle -P OUTPUT ACCEPT &> /dev/null
$command_ip6tables_legacy -t mangle -P PREROUTING ACCEPT &> /dev/null
$command_ip6tables_legacy -t mangle -P POSTROUTING ACCEPT &> /dev/null
$command_iptables_nft -t raw -P OUTPUT ACCEPT &> /dev/null
$command_iptables_nft -t raw -P PREROUTING ACCEPT &> /dev/null
$command_ip6tables_nft -t raw -P OUTPUT ACCEPT &> /dev/null
$command_ip6tables_nft -t raw -P PREROUTING ACCEPT &> /dev/null
$command_iptables_legacy -t raw -P OUTPUT ACCEPT &> /dev/null
$command_iptables_legacy -t raw -P PREROUTING ACCEPT &> /dev/null
$command_ip6tables_legacy -t raw -P OUTPUT ACCEPT &> /dev/null
$command_ip6tables_legacy -t raw -P PREROUTING ACCEPT &> /dev/null
$command_iptables_nft -t security -P INPUT ACCEPT &> /dev/null
$command_iptables_nft -t security -P FORWARD ACCEPT &> /dev/null
$command_iptables_nft -t security -P OUTPUT ACCEPT &> /dev/null
$command_ip6tables_nft -t security -P INPUT ACCEPT &> /dev/null
$command_ip6tables_nft -t security -P FORWARD ACCEPT &> /dev/null
$command_ip6tables_nft -t security -P OUTPUT ACCEPT &> /dev/null
$command_iptables_legacy -t security -P INPUT ACCEPT &> /dev/null
$command_iptables_legacy -t security -P FORWARD ACCEPT &> /dev/null
$command_iptables_legacy -t security -P OUTPUT ACCEPT &> /dev/null
$command_ip6tables_legacy -t security -P INPUT ACCEPT &> /dev/null
$command_ip6tables_legacy -t security -P FORWARD ACCEPT &> /dev/null
$command_ip6tables_legacy -t security -P OUTPUT ACCEPT &> /dev/null
####
####
echo "  [ info ] [ Deleting the iptables rules firewall ]" 
echo "  [  ok  ] [ Firewall is erased ] [ Deleted rules ]"
exit; fi
####
####
#### :rutina-final-eraserules:
##########     english: list-alltables: list all rules         ##########
##########     spanish: list-alltables: list todas las reglas  ##########
#### :rutina-inicial-list-alltables:
####
####
 if [ "$first_option" = "list-alltables" ]; then  echo $give_cover
 echo "$header_ok [ $first_option ]  [ List all rules ] || ||"
 echo 
 echo; echo; echo "### LIST ARPTABLES ###"
 $cmd_fwiptables list-arptables
 echo; echo; echo "### LIST EBTABLES ###"
 $cmd_fwiptables list-ebtables
 echo; echo; echo "### LIST FILTER IP4 TABLE ###"
 $cmd_fwiptables list-filter4
 echo; echo; echo "### LIST FILTER IP6 TABLE ###"
 $cmd_fwiptables list-filter6
 echo; echo; echo "### LIST NAT IP4 TABLE ###"
 $cmd_fwiptables list-nat4
 echo; echo; echo "### LIST NAT IP6 TABLE ###"
 $cmd_fwiptables list-nat6
 echo; echo; echo "### LIST SECURITY IP4 TABLE ###"
 $cmd_fwiptables list-security4
 echo; echo; echo "### LIST SECURITY IP6 TABLE ###"
 $cmd_fwiptables list-security6
 echo; echo; echo "### LIST RAW IP4 TABLE ###"
 $cmd_fwiptables list-raw4
 echo; echo; echo "### LIST RAW IP6 TABLE ###"
 $cmd_fwiptables list-raw6
 echo; echo; echo "### LIST MANGLE IP4 TABLE ###"
 $cmd_fwiptables list-mangle4
 echo; echo; echo "### LIST MANGLE IP6 TABLE ###"
 $cmd_fwiptables list-mangle6
 echo 
 exit; fi
####
####
#### :rutina-final-list-alltables:
##########    english: list4-ip: The list option   ##########
##########    spanish: list4-ip: La opcion lista   ##########
#### :rutina-inicial-list:
####
####
if [ "$first_option" = "list4-ip" ]; then echo $give_cover
echo "$header_ok [ list ] [ List iptables filter ipv4 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
legacycuatro=$("$command_iptables_legacy" -t filter -L INPUT 1 && \
"$command_iptables_legacy" -t filter -L OUTPUT 1 ) &> /dev/null
nftcuatro=$("$command_iptables_nft" -t filter -L INPUT 1 && \
"$command_iptables_nft" -t filter -L OUTPUT 1 ) &> /dev/null
fromrules="filter-ip4"
echo
case $legacycuatro in
"$NULL") echo "  [ info ] [ Without rules xtables ] [ iptables-legacy ] [ $fromrules ] [ no list ]" ;;
*)
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ] [ listing rules .. ]"
echo
$command_iptables_legacy -t filter -v -L $list_rules_conceptual
;;
esac
echo "$tab"
case $nftcuatro in
"$NULL") echo "  [ info ] [ Without rules nftables ] [ iptables-legacy ] [ $fromrules ] [ no list ]" ;;
*)
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ] [ listing rules .. ]" 
echo
$command_iptables_nft -t filter -v -L $list_rules_conceptual
;;
esac
exit; fi
####
####
#### :rutina-final-list:
##########    english: list6-ip: list ipv6 rules filter           ##########
##########    spanish: list6-ip: lista reglas de filtros de ipv6  ##########
#### :rutina-inicial-list6:
####
####
if [ "$first_option" = "list6-ip" ]; then  echo $give_cover
echo "$header_ok [ list6 ] [ List iptables filter ipv6 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
legacyseis=$("$command_ip6tables_legacy" -t filter -L INPUT 1 && \
"$command_ip6tables_legacy" -t filter -L OUTPUT 1 )
nftseis=$("$command_ip6tables_nft" -t filter -L INPUT 1 && \
"$command_ip6tables_nft" -t filter -L OUTPUT 1 )
fromrules="filter-ip6"
echo
case $legacyseis in
"$NULL") echo "  [ info ] [ Without rules xtables ] [ iptables-legacy ] [ $fromrules ] [ no list ]" ;;
*)
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ] [ listing rules .. ]" 
echo
$command_ip6tables_legacy -v -L $list_rules_conceptual
;;
esac
echo $tab
case $nftseis in
"$NULL") echo "  [ info ] [ Without rules nftables ] [ iptables-legacy ] [ $fromrules ] [ no list ]" ;;
*)
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ] [ listing rules .. ]" 
echo
$command_ip6tables_nft -v -L $list_rules_conceptual
;;
esac
####
####
exit; fi
####
####
#### :rutina-final-list6:
##########    english: status: The list option ipv4 and ipv6    ##########
##########    spanish: status: La opcion lista ipv4 y ipv6      ##########
#### :rutina-inicial-status:
####
####
if [ "$first_option" = "status" ]; then $nada
####
####
$cmd_fwiptables list
#### if [ "$($command_ip -4 route | $command_grep -i  default | head -1)" != "$NULL" ]; then $cmd_fwiptables list
#### else echo ; echo "$tab [ Without default route for rules xtables ipv4 ] [ iptables-legacy ]" 
#### echo ; echo "$tab [ Without default route for rules xtables ipv4 ] [ iptables-legacy ]" ; fi
####
####
$cmd_fwiptables list6
#### if [ "$($command_ip -6 route | $command_grep -i  default | head -1)" != "$NULL" ]; then $cmd_fwiptables list6
#### else echo ; echo "$tab [ Without default route for rules xtables ipv6 ] [ ip6tables-legacy ]" 
#### echo ; echo "$tab [ Without default route for rules xtables ipv6 ] [ ip6tables-legacy ]" ; fi
####
####
exit; fi
####
####
#### :rutina-final-satus:
##########    english: listnum: The list option   ##########
##########    spanish: listnum: La opcion lista   ##########
#### :rutina-inicial-listnum:
####
####
if [ "$first_option" = "listnum" ]; then echo $give_cover
echo "$header_ok [ list ] [ List iptables numerical filter ipv4 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
legacycuatro=$("$command_iptables_legacy" -t filter -L INPUT 1 && \
"$command_iptables_legacy" -t filter -L OUTPUT 1 ) &> /dev/null
nftcuatro=$("$command_iptables_nft" -t filter -L INPUT 1 && \
"$command_iptables_nft" -t filter -L OUTPUT 1 ) &> /dev/null
fromrules="filter-numerical-ip4"
echo
case $legacycuatro in
"$NULL") echo "  [ info ] [ Without rules xtables ] [ iptables-legacy ] [ $fromrules ] [ no list ]" ;;
*)
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ] [ listing rules .. ]"
echo
$command_iptables_legacy -t filter -v -L -n
;;
esac
echo "$tab"
case $nftcuatro in
"$NULL") echo "  [ info ] [ Without rules nftables ] [ iptables-legacy ] [ $fromrules ] [ no list ]" ;;
*)
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ] [ listing rules .. ]" 
echo
$command_iptables_nft -t filter -v -L -n
;;
esac
exit; fi
####
####
#### :rutina-final-listnum:
##########    english: listnum6: The list option   ##########
##########    spanish: listnum6: La opcion lista   ##########
#### :rutina-inicial-listnum-filter6:
####
####
if [ "$first_option" = "listnum6" ]; then echo $give_cover
echo "$header_ok [ list ] [ List iptables numerical filter ipv6 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
legacycuatro=$("$command_ip6tables_legacy" -t filter -L INPUT 1 && \
"$command_ip6tables_legacy" -t filter -L OUTPUT 1 ) &> /dev/null
nftcuatro=$("$command_ip6tables_nft" -t filter -L INPUT 1 && \
"$command_ip6tables_nft" -t filter -L OUTPUT 1 ) &> /dev/null
fromrules="filter-numerical-ip6"
echo
case $legacycuatro in
"$NULL") echo "  [ info ] [ Without rules xtables ] [ iptables-legacy ] [ $fromrules ] [ no list ]" ;;
*)
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_iptables_legacy -t filter -v -L -n
;;
esac
echo "$tab"
case $nftcuatro in
"$NULL") echo "  [ info ] [ Without rules nftables ] [ iptables-nft ] [ $fromrules ] [ listing rules .. ]" ;;
*)
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ]" 
echo
$command_iptables_nft -t filter -v -L -n
;;
esac
exit; fi
####
####
#### :rutina-final-listnum6:
##########    english: list-filter4: The list option   ##########
##########    spanish: list-filter4: La opcion lista   ##########
#### :rutina-inicial-list-filter4:
####
####
if [ "$first_option" = "list-filter4" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables filter ipv4 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="filter-ip4"
echo
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_iptables_legacy -t filter -v -L $list_rules_conceptual
echo
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ]" 
echo
$command_iptables_nft -t filter -v -L $list_rules_conceptual
####
####
exit; fi
####
####
#### :rutina-final-list-filter4:
##########    english: list-forward: list iptables filter forward rules       ##########
##########    spanish: list-forward: lista reglas de iptables filter forward  ##########
#### :rutina-inicial-list-forward:
####
####
if [ "$first_option" = "list-forward" ]; then  echo $give_cover
echo "$header_ok [ $first_option ] [ List iptables filter forward ipv4 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="filter-forward-ip4"
echo
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_iptables_legacy -t filter -v -L FORWARD $list_rules_conceptual
echo
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_iptables_nft -t filter -v -L FORWARD $list_rules_conceptual
exit; fi
####
####
#### :rutina-final-list-forward:
##########    english: list-filter6: list ipv6 rules filter           ##########
##########    spanish: list-filter6: lista reglas de filtros de ipv6  ##########
#### :rutina-inicial-list-filter6:
####
####
if [ "$first_option" = "list-filter6" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables filter ipv6 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="filter-ip6"
echo
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ]" 
echo
$command_ip6tables_legacy -v -L $list_rules_conceptual
echo
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ]" 
echo
$command_ip6tables_nft -v -L $list_rules_conceptual
####
####
exit; fi
####
####
#### :rutina-final-list-filter6:
##########    english: list-forward6: list iptables filter forward rules ipv6        ##########
##########    spanish: list-forward6: lista reglas de iptables filter forward ipv6   ##########
#### :rutina-inicial-list-forward6:
####
####
if [ "$first_option" = "list-forward6" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables filter forward ipv6 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="filter-forward-ip6"
echo
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_ip6tables_legacy -t filter -v -L FORWARD $list_rules_conceptual
echo
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_ip6tables_nft -t filter -v -L FORWARD $list_rules_conceptual
exit; fi
####
####
#### :rutina-final-list-forward6:
##########    english: list-nat4: list NAT rules of ipv4       ##########
##########    spanish: list-nat4: lista reglas de NAT de ipv4  ##########
#### :rutina-inicial-list-nat-4:
####
####
 if [ "$first_option" = "list-nat4" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables nat ipv4 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="nat-ip4"
echo
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_iptables_legacy -t nat -v -L $list_rules_conceptual
echo
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_iptables_nft -t nat -v -L $list_rules_conceptual
exit; fi
####
####
#### :rutina-final-list-nat-4:
##########    english: list-nat6: list NAT rules of ipv6       ##########
##########    spanish: list-nat6: lista reglas de NAT de ipv6  ##########
#### :rutina-inicial-list-nat6:
####
####
if [ "$first_option" = "list-nat6" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables nat ipv6] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="nat-ip6"
echo
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_ip6tables_legacy -t nat -v -L $list_rules_conceptual
echo
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_ip6tables_nft -t nat -v -L $list_rules_conceptual 
#### echo 
exit; fi
####
####
#### :rutina-final-list-nat6:
##########    english: listnum-filter4: list option numerical filter ipv4   ##########
##########    spanish: listnum-filter4: lista numeral filter ipv4           ##########
#### :rutina-inicial-listnum-filter4:
####
####
if [ "$first_option" = "listnum-filter4" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables filter ipv4 in numerical ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
fromrules="filter-ip4"
echo
echo "  [ info ] [ With rules netfilter ] [ iptables-nft ] [ $fromrules ]"  
echo
$command_iptables_legacy -v -L -n 
echo
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_iptables_nft -v -L -n
exit; fi
####
####
#### :rutina-final-listnum-filter4:
##########    english: list-forwardnum: list iptables filter forward rules in numerical     ##########
##########    spanish: list-forwardnum: lista reglas de iptables filter forward in numeros  ##########
#### :rutina-inicial-list-forwardnum:
####
####
if [ "$first_option" = "list-forwardnum" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables filter forward ipv4 in numerical ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
fromrules="filter-forward-ip4"
echo
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_iptables_legacy -t filter -v -L FORWARD -n
echo
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_iptables_nft -t filter -v -L FORWARD -n
exit; fi
####
####
#### :rutina-final-list-forwardnum:
##########    english: listnum-filter6: list option numerical filter ipv6   ##########
##########    spanish: listnum-filter6: lista numeral filter ipv6           ##########
#### :rutina-inicial-listnum-filter6:
####
####
if [ "$first_option" = "listnum-filter6" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables filter ipv6 in numerical ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
fromrules="filter-ip6"
echo
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ]" 
echo
$command_ip6tables_legacy -v -L -n
echo
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ]" 
echo
$command_ip6tables_nft -v -L -n
exit; fi
####
####
#### :rutina-final-listnum-filter6:
##########    english: list-forwardnum6: list iptables filter forward rules in numerical ipv6      ##########
##########    spanish: list-forwardnum6: lista reglas de iptables filter forward in numeros ipv6   ##########
#### :rutina-inicial-list-forwardnum6:
####
####
if [ "$first_option" = "list-forwardnum6" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables filter forward ipv6 in numerical ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
fromrules="filter-forward-ip6"
echo
echo "  [ info ] [ With rules xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_ip6tables_legacy -t filter -v -L FORWARD -n
echo
echo "  [ info ] [ With rules nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_ip6tables_nft -t filter -v -L FORWARD -n
exit; fi
####
####
#### :rutina-final-list-forwardnum6:
##########    english: list-mangle4: list mangle rules from ipv4      ##########
##########    spanish: list-mangle4: lista reglas de mangle de ipv4   ##########
#### :rutina-inicial-list-mangle4:
####
####
if [ "$first_option" = "list-mangle4" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables mangle ipv4 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="mangle-ip4"
echo
echo "  [ info ] [ The xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_iptables_legacy -t mangle -v -L $list_rules_conceptual
echo
echo "  [ info ] [ The nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_iptables_nft -t mangle -v -L $list_rules_conceptual
echo 
exit; fi
####
####
#### :rutina-final-list-mangle4:
##########    english: list-mangle6: list mangle rules from ipv6     ##########
##########    spanish: list-mangle6: lista reglas de mangle de ipv6  ##########
#### :rutina-inicial-list-mangle6:
####
####
if [ "$first_option" = "list-mangle6" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables mangle ipv6 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="mangle-ip6"
echo
echo "  [ info ] [ The xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_ip6tables_legacy -t mangle -v -L $list_rules_conceptual
echo
echo "  [ info ] [ The nftables ] [iptables-nft ] [ $fromrules ]"
echo
$command_ip6tables_nft -t mangle -v -L $list_rules_conceptual
#### echo 
exit; fi
####
####
#### :rutina-final-list-mangle6:
##########    english: list-raw4: list raw rules from ipv4  ##########
##########    spanish: list-raw4: lista reglas raw de ipv4  ##########
#### :rutina-inicial-list-raw4:
####
####
if [ "$first_option" = "list-raw4" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables raw ipv4 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="raw-ip4"
echo
echo "  [ info ] [ The xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_iptables_legacy -t raw -v -L $list_rules_conceptual
echo
echo "  [ info ] [ The nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_iptables_nft -t raw -v -L $list_rules_conceptual
exit; fi
####
####
#### :rutina-final-list-raw4:
##########    english: list-raw6: list raw rules from ipv6  ##########
##########    spanish: list-raw6: lista reglas raw de ipv6  ##########
#### :rutina-inicial-list-raw6:
####
####
if [ "$first_option" = "list-raw6" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables raw ipv6 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="raw-ip6"
echo
echo "  [ info ] [ The xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_ip6tables_legacy -t raw -v -L $list_rules_conceptual
echo
echo "  [ info ] [ The nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_ip6tables_nft -t raw -v -L $list_rules_conceptual
exit; fi
####
####
#### :rutina-final-list-raw6:
##########    english: list-security4: list security rules from ipv4     ##########
##########    spanish: list-security4: lista reglas de security de ipv4  ##########
#### :rutina-inicial-list-security4:
####
####
if [ "$first_option" = "list-security4" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables security ipv4 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="security-ip4"
echo
echo "  [ info ] [ The xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_iptables_legacy -t security -v -L $list_rules_conceptual
echo
echo "  [ info ] [ The nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_iptables_nft -t security -v -L $list_rules_conceptual
exit; fi
####
####
#### :rutina-final-list-security4:
##########    english: list-security6: list security rules from ipv6     ##########
##########    spanish: list-security6: lista reglas de security de ipv6  ##########
#### :rutina-inicial-list-security6:
####
####
if [ "$first_option" = "list-security6" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List iptables security ipv6 ] [ it is sufficent with only one netfilter: legacy or nft ] || ||"
echo "$message_info_rules"
fromrules="security-ip6"
echo
echo "  [ info ] [ The xtables ] [ iptables-legacy ] [ $fromrules ]"
echo
$command_ip6tables_legacy -t security -v -L $list_rules_conceptual
echo
echo "  [ info ] [ The nftables ] [ iptables-nft ] [ $fromrules ]"
echo
$command_ip6tables_nft -t security -v -L $list_rules_conceptual
exit; fi
####
####
#### :rutina-final-list-security6:
##########    english: list-ebtables: list ebtables rules with mac adress       ##########
##########    spanish: list-ebtables: lista reglas de ebtables with mac adress  ##########
#### :rutina-inicial-list-ebtables:
####
####
if [ "$first_option" = "list-ebtables" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List ebtables ] || ||"
fromrules="ebtables"
echo
echo "  [ info ] [ ebtables: filter ethernet ] [ $fromrules ]"
echo
$command_ebtables -L -t filter
echo
echo "  [ info ] [ ebtables: nat ethernet ] [ $fromrules ]"
echo
$command_ebtables -L -t nat
exit; fi
####
####
#### :rutina-final-list-ebtables:
##########    english: list-arptables: list rules arptables with arp        ##########
##########    spanish: list-arptables: lista reglas de arptables with arp   ##########
#### :rutina-inicial-list-arptables:
####
####
if [ "$first_option" = "list-arptables" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List arptables ipv4 ] || ||"
fromrules="arptables"
echo
echo "  [ info ] [ arptables: filter arptables ] [ $fromrules ]"
echo
$command_arptables -L
exit; fi
####
####
#### :rutina-final-list-arptables:
##########    english: new-full-config: new-full-config option to create new configs   ##########
##########    spanish: new-full-config: new-full-config para cear nuevas config        ##########
#### :rutina-inicial-new-full-config:
####
####
if [ "$first_option" = "new-full-config" ] && [ "$second_option" = "$NULL" ]  ; then echo $give_cover
echo "$tab [ info ] [ usage: ] [ $cmd_fwiptables new-full-config config-new ]"
exit; fi
####
####
if [ "$first_option" = "new-full-config" ] && [ "$second_option" != "$NULL" ] ; then echo $give_cover
archivo="$second_option"
cp "$defaultfullcfg_eng" "$directory_temporal/$cmd_fwiptables-$archivo"
$command_dialog  --no-cancel --title "NEW FULL CONFIG" \
--editbox "$directory_temporal/$cmd_fwiptables-$archivo" 0 0 2> "$directory_config/$archivo"
####
####
if [ -s "$directory_config/$second_option" ]; then $nada 
$command_dialog  --msgbox "[ OK. Modify $second_option ]" 0 0 ; clear
echo 
fi
####
####
if [ ! -s "$directory_config/$second_option" ]; then $nada 
rm "$directory_config/$second_option" &> /dev/null
cp "$directory_temporal/$cmd_fwiptables-$archivo" "$directory_config/$second_option" &> /dev/null
$command_dialog  --msgbox "[ OK. Canceled. $second_option ]" 0 0 ; clear
fi
####
####
exit; fi
####
####
#### :rutina-final-new-full-config:
##########    english: nueva-completa-config: create new configs                             ##########
##########    spanish: nueva-completa-config: nueva-completa-config para cear nuevas config  ##########
#### :rutina-inicial-nueva-completa-config:
####
####
if [ "$first_option" = "nueva-completa-config" ] && [ "$second_option" = "$NULL" ]  ; then echo $give_cover
echo "$tab [ info ] [ usage: ] [ $cmd_fwiptables nueva-completa-config config-nueva ]"
exit; fi
####
####
if [ "$first_option" = "nueva-completa-config" ] && [ "$second_option" != "$NULL" ] ; then echo $give_cover
archivo="$second_option"
cp "$defaultfullcfg_spa" "$directory_temporal/$cmd_fwiptables-$archivo"
$command_dialog  --no-cancel --title "NUEVA COMPLETA CONFIG" \
--editbox "$directory_temporal/$cmd_fwiptables-$archivo" 0 0 2> "$directory_config/$archivo"
####
####
if [ -s "$directory_config/$second_option" ]; then $nada 
$command_dialog  --msgbox "[ OK. Modificado. $second_option ]" 0 0 ; clear
echo 
fi
####
####
if [ ! -s "$directory_config/$second_option" ]; then $nada 
rm "$directory_config/$second_option" &> /dev/null
cp "$directory_temporal/$cmd_fwiptables-$archivo" "$directory_config/$second_option" &> /dev/null
$command_dialog  --msgbox "[ OK. Cancelado. $second_option ]" 0 0 ; clear
fi
####
####
exit; fi
####
####
#### :rutina-final-nueva-completa-config:
##########    english: new-mini-config: create new configs   ##########
##########    spanish: new--mini config: cea nuevas config   ##########
#### :rutina-inicial-new-mini-config:
####
####
if [ "$first_option" = "new-mini-config" ] && [ "$second_option" = "$NULL" ]  ; then echo $give_cover
echo "$tab [ info ] [ usage: ] [ $cmd_fwiptables new-mini-config config-new ]"
exit; fi
####
####
if [ "$first_option" = "new-mini-config" ] && [ "$second_option" != "$NULL" ] ; then echo $give_cover
archivo="$second_option"
cp "$defaultminicfg_eng" "$directory_temporal/$cmd_fwiptables-$archivo"
$command_dialog  --no-cancel --title "NEW MINI CONFIG" \
--editbox "$directory_temporal/$cmd_fwiptables-$archivo" 0 0 2> "$directory_config/$archivo"
####
####
if [ -s "$directory_config/$second_option" ]; then $nada 
$command_dialog  --msgbox "[ OK. Modify $second_option ]" 0 0 ; clear
echo 
fi
####
####
if [ ! -s "$directory_config/$second_option" ]; then $nada 
rm "$directory_config/$second_option" &> /dev/null
cp "$directory_temporal/$cmd_fwiptables-$archivo" "$directory_config/$second_option" &> /dev/null
$command_dialog  --msgbox "[ OK. Canceled. $second_option ]" 0 0 ; clear
fi
####
####
exit; fi
####
####
#### :rutina-final-new-mini-config:
##########    english: nueva-mini-config: create new configs   ##########
##########    spanish: nueva-mini-config: crea nuevas config   ##########
#### :rutina-inicial-nueva-mini-config:
####
####
if [ "$first_option" = "nueva-mini-config" ] && [ "$second_option" = "$NULL" ]  ; then  echo $give_cover
echo "$tab [ info ] [ usage: ] [ $cmd_fwiptables nueva-mini-config config-nueva ]"
exit; fi
####
####
if [ "$first_option" = "nueva-mini-config" ] && [ "$second_option" != "$NULL" ] ; then  echo $give_cover
archivo="$second_option"
cp "$defaultminicfg_spa" "$directory_temporal/$cmd_fwiptables-$archivo"
$command_dialog  --no-cancel --title "NUEVA MINI CONFIG" \
--editbox "$directory_temporal/$cmd_fwiptables-$archivo" 0 0 2> "$directory_config/$archivo"
####
####
if [ -s "$directory_config/$second_option" ]; then $nada 
$command_dialog  --msgbox "[ OK. Modificado $second_option ]" 0 0 ; clear
echo 
fi
####
####
if [ ! -s "$directory_config/$second_option" ]; then $nada 
rm "$directory_config/$second_option" &> /dev/null
cp "$directory_temporal/$cmd_fwiptables-$archivo" "$directory_config/$second_option" &> /dev/null
$command_dialog  --msgbox "[ OK. Cancelado. $second_option ]" 0 0 ; clear
fi
####
####
exit; fi
####
####
#### :rutina-final-nueva-mini-config:
##########    english: modify-config: modify a one config.cfg        ##########
##########    spanish: modify-config: modify una configuracion.cfg   ##########
#### :rutina-inicial-modify-config:
####
####
if [ "$first_option" = "modify-config" ]; then  echo $give_cover
####
###
if [ ! -f "$directory_config/$second_option" ] ; then $nada
$cmd_fwiptables names-config
echo "$tab [ info ] [ usage: ] [ $cmd_fwiptables modify-config config-existent ]" ; exit; fi
####
####
if [ -f "$directory_config/$second_option" ] ; then $nada
cp "$directory_config/$second_option" "$directory_temporal/$second_option" &> /dev/null
$command_dialog  --no-cancel --title "MODIFY CONFIG" \
--editbox "$directory_temporal/$second_option" 0 0 2> "$directory_config/$second_option"
clear; fi
####
####
if [  -s "$directory_config/$second_option" ] ; then
$command_dialog  --msgbox "[OK file modify config file: $second_option]" 0 0 
clear ; exit ; fi
####
####
if [ ! -s "$directory_config/$second_option" ] ; then $nada
cp "$directory_temporal/$cmd_fwiptables-$second_option" "$directory_config/$second_option" &> /dev/null
$command_dialog  --msgbox "[Canceled file modify config file: $second_option]" 0 0 
clear ; exit ; fi
####
####
clear ; exit ; fi
####
####
#### :rutina-final-modify-config:
##########    english: show-config: show a one config          ##########
##########    spanish: show-config: muestra una configuracion  ##########
#### :rutina-inicial-show-config:
####
####
if [ "$first_option" = "show-config" ] ; then echo $give_cover
####
####
if [ ! -f "$directory_config"/"$second_option" ] ; then 
echo "$tab [ info ] [ Usage: $cmd_fwiptables show-config config-cfg ]" ; exit; fi
####
####
if [ -f "$directory_config"/"$second_option" ] ; then 
cat $directory_config/$second_option ;
echo  ; exit ; fi
####
####
exit; fi
####
####
#### :rutina-final-show-config:
##########    english: del-config: delete a old config               ##########
##########    spanish: del-config: elimina una vieja configuracion   ##########
#### :rutina-inicial-del-config:
####
####
if [ "$first_option" = "del-config" ]; then echo $give_cover
####
####
if [ ! -f $directory_config/$second_option ] ; then
echo "$tab [ info ] [ usage: ] [ $cmd_fwiptables del-config config-old ]" ; exit ; fi
####
####
if [ -f $directory_config/$second_option ] ; then
rm $directory_config/$second_option
echo "$directory_config/$second_option Deleted"
echo  ; exit ; fi
####
####
exit ; fi
####
####
#### :rutina-final-del-config:
##########    english: show-default: show $directory_default/$cmd_fwiptables   ##########
##########    spanish: show-default: show $directory_default/$cmd_fwiptables   ##########
#### :rutina-inicial-show-default:
####
####
if [ "$first_option" = "show-default" ]; then  echo $give_cover
echo "$header_ok [ $first_option ] [ show the default fwiptables ] || ||"
echo 
cat $directory_default/$cmd_fwiptables-default
echo 
echo "  [ info ] [ Change variables with: $cmd_fwiptables modify-default ] [ file: $directory_default/$cmd_fwiptables-default ]"
exit; fi
####
####
#### :rutina-final-show-default:
##########    english: modify-default: modify $directory_default/$cmd_fwiptables   ##########
##########    spanish: modify-default: modify $directory_default/$cmd_fwiptables   ##########
#### :rutina-inicial-modify-default:
####
####
if [ "$first_option" = "modify-default" ]; then  echo $give_cover
echo "$header_ok [ $first_option ] [ modify the default fwiptables ] || ||"
echo 
echo 
echo "  [ info ] [ edit file $directory_default/$cmd_fwiptables to change variables ]"
####
####
#### english: make security copy file
#### spanish: hace copia de seguridad
####
####
cp "$directory_default/$cmd_fwiptables-default" "$directory_temporal/$cmd_fwiptables-default"
####
####
#### english: edit file
#### spanish: edita el archivo
####
####
$command_dialog  --no-cancel --title "MODIFY FILE: $directory_default/$cmd_fwiptables-default" \
--editbox "$directory_temporal/$cmd_fwiptables-default" 0 0 2> "$directory_default/$cmd_fwiptables-default"
clear
####
####
#### english: probe all that is correct or recover
#### spanish: prueba que todo es correcto o lo recupera
####
####
if [ ! -s "$directory_default/$cmd_fwiptables-default" ] ; then $nada
cp "$directory_temporal/$cmd_fwiptables-default" "$directory_default/$cmd_fwiptables-default"; fi
####
####
exit; fi
####
####
#### :rutina-final-modify-default:
##########    english: names: file list whith rules in iptables format          ##########
##########    spanish: names: lista de archivos con reglas en formato iptables  ##########
#### :rutina-inicial-names:
####
####
if [ "$first_option" = "names" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ List names from firewall saved ] || ||"
echo
echo "$tab $tab [English:] [File list with iptables format in folder:] [$directory_fwrecover]"
echo "$tab $tab [Spanish:] [Lista de archivos con iptables formato en carpeta:] [$directory_fwrecover]"
echo 
echo "  [ info ] [ Listing firewall names ]"
$command_ls -1 $directory_fwrecover | $command_sed s/\-legacy\-ipv6//g | $command_sed s/\-nft\-ipv6//g | \
$command_sed s/\-legacy\-ipv4//g | $command_sed s/\-nft\-ipv4//g | \
$command_sed s/\-arptables//g | $command_sed s/\-ebtables//g | sort -u 
echo
echo "  [  ok  ] [ Listed firewall names ]"
exit; fi
####
####
#### :rutina-final-names:
##########    english: reset: reset counter rules            ##########
##########    spanish: reset: resetea contadores de reglas   ##########
#### :rutina-inicial-reset:
####
####
if [ "$first_option" = "reset" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ Reset the firewall ] || ||"
echo "  [ info ] [ Reseting the firewall ]"
$cmd_fwiptables stop &> /dev/null
$cmd_fwiptables continue &> /dev/null
echo "  [  ok  ] [ firewall reseted ]"
exit; fi
####
####
#### :rutina-final-reset:
##########    english: wizard-mini: wizard-mini      ##########
##########    spanish: wizard-mini: mini-asistente   ##########
#### :rutina-inicial-wizard-mini:
####
####
if [ "$first_option" = "wizard-mini" ]; then echo 
archivo="$first_option" ; launch_firewall=yes ; type_firewall="wizard-mini" ; name_firewall="wizard-mini"
cp "$defaultminicfg_eng" "$directory_temporal/$cmd_fwiptables-$archivo"
$command_dialog  --clear --no-cancel --title "MODIFY FILE" --editbox "$directory_temporal/$cmd_fwiptables-$archivo" \
0 0 2> "$directory_config/$archivo"
clear
if [  -s "$directory_config/$archivo" ]; then $nada ; 
$command_dialog  --msgbox "wizard full ready" 0 0 ; clear ; $cmd_fwiptables custom "$archivo" 
else rm "$directory_config/$archivo" ; $command_dialog  --msgbox "Wizard full canceled" 0 0 ; clear ; fi
#### echo 
exit; fi
####
####
#### :rutina-final-wizard-mini:
##########    english: wizard-full: wizard-full     ##########
##########    spanish: wizard-full: asistente       ##########
#### :rutina-inicial-wizard-full:
####
####
if [ "$first_option" = "wizard-full" ]; then $nada
archivo="$first_option" ; launch_firewall=yes ; type_firewall="wizard-full" ; name_firewall="wizard-full"
cp "$defaultfullcfg_eng" "$directory_temporal/$cmd_fwiptables-$archivo"
$command_dialog  --clear --no-cancel --title "MODIFY FILE" --editbox "$directory_temporal/$cmd_fwiptables-$archivo" \
0 0 2> "$directory_config/$archivo"
clear
if [  -s "$directory_config/$archivo" ]; then $nada ; 
$$command_dialog  --msgbox "Wizard full ready" 0 0 ; clear ; $cmd_fwiptables custom "$archivo" 
else rm "$directory_config/$archivo" ; $command_dialog  --msgbox "Wizard full canceled" 0 0 ; clear ; fi
#### echo 
exit; fi
####
####
#### :rutina-final-wizard-full:
##########    english: load: load the rules in iptables format      ##########
##########    spanish: load: carga las reglas en formato iptables   ##########
#### :rutina-inicial-load:
####
####
if [ "$first_option" = "load" ]; then 
####
####
#### English: Void in second option
####
####
if [ "second_option" = "$NULL" ]; then
$cmd_fwiptables names ; echo "$tab [ info ] [ usage: $cmd_fwiptables load fw-to-load ] [ See: $cmd_fwiptables names ]" ; exit ; fi
####
####
#### English if do exist second option in load
####
####
if [ -f $directory_fwrecover/$second_option-nft-ipv4 ] || [ -f $directory_fwrecover/$second_option-legacy-ipv4 ] ; then echo $give_cover
echo $give_load
####
####
#### English: show message
####
####
echo "  [ info ] [ Loading rules ]"
####
####
#### English: Remove all rules
####
####
$cmd_fwiptables eraserules &> /dev/null
####
####
#### English: Load all rules 
####
####
if [ -f "$directory_fwrecover/$second_option-ebtables" ]; then
cat $directory_fwrecover/$second_option-ebtables | $command_ebtables-restore &> /dev/null; fi
####
####
if [ -f "$directory_fwrecover/$second_option-arptables" ]; then
cat $directory_fwrecover/$second_option-arptables | $command_arptables-restore &> /dev/null; fi
####
#### 
cat $directory_fwrecover/$second_option-nft-ipv4 |  $command_iptables_nft-restore       
cat $directory_fwrecover/$second_option-legacy-ipv4 | $command_iptables_legacy-restore  
cat $directory_fwrecover/$second_option-nft-ipv6 | $command_ip6tables_nft-restore       
cat $directory_fwrecover/$second_option-legacy-ipv6 | $command_ip6tables_legacy-restore 
echo "  [  ok  ] [ firewall loaded ] [ $second_option ]"
####
####
#### english: if no found #### spanish: si no encuentra
####
####
else
$cmd_fwiptables names
echo "$tab [ info ] [ usage: $cmd_fwiptables load fw-to-load ] [ See: $cmd_fwiptables names ]"
fi 
####
####
#### echo 
exit; fi
####
####
#### :rutina-final-load:
##########    english: save: save the rules in iptables format      ##########
##########    spanish: save: guarda las reglas en formato iptables  ##########
#### :rutina-inicial-save:
####
####
if [ "$first_option" = "save" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ save one firewall with one name ] || ||"
case "$second_option" in
"$NULL") echo "$tab [ info ] [ Usage: $cmd_fwiptables save fw-to-save ]" ; exit ;;
*) archivofin="$second_option" ;; 
esac
####
####
echo "  [ info ] [ saving firewall ] [ $archivofin ]"
if [ "$command_arptables" = "$NULL"  ]; then $nada ; else
$command_arptables-save          &> $directory_fwrecover/$archivofin-arptables; fi
if [ "$command_ebtables"  = "$NULL"  ]; then $nada ; else
$command_ebtables-save           &> $directory_fwrecover/$archivofin-ebtables; fi
####
####
$command_iptables_nft-save      &> $directory_fwrecover/$archivofin-nft-ipv4     
$command_iptables_legacy-save    &> $directory_fwrecover/$archivofin-legacy-ipv4  
$command_ip6tables_nft-save      &> $directory_fwrecover/$archivofin-nft-ipv6     
$command_ip6tables_legacy-save   &> $directory_fwrecover/$archivofin-legacy-ipv6  
####
####
echo "  [  ok  ] [ firewall saved ] [ $archivofin ]"
if [ "$command_arptables" = "$NULL"  ]; then $nada ; else
$command_ls -l $directory_fwrecover/$archivofin-arptables; fi
if [ "$command_ebtables"  = "$NULL"  ]; then $nada ; else
$command_ls -l $directory_fwrecover/$archivofin-ebtables; fi
$command_ls -l $directory_fwrecover/$archivofin-nft-ipv4
$command_ls -l $directory_fwrecover/$archivofin-nft-ipv6
$command_ls -l $directory_fwrecover/$archivofin-legacy-ipv4
$command_ls -l $directory_fwrecover/$archivofin-legacy-ipv6
echo "  [  ok  ] [ firewall listed ] [ $archivofin ]"
exit; fi
####
####
#### :rutina-final-save:
##########    english: show: show the rules from one firewall in iptables format    ##########
##########    spanish: show: muestra las reglas de un firewall en formato iptables  ##########
#### :rutina-inicial-show:
####
####
if [ "$first_option" = "show" ]; then  echo $give_cover
echo "$header_ok [ $first_option ]  [ Show one firewall saved ] || ||"
echo
case "$second_option" in
"$NULL") $cmd_fwiptables names; echo "$tab [ info ] [ Use: $cmd_fwiptables show file-to-show ]" ; exit ;;
*) archivofin=$($command_sed 's/\///g' <<< "$second_option") ;;
esac
if [ ! -f $directory_fwrecover/$archivofin-legacy-ipv4 ] ; then exit; fi
$command_ls -l $directory_fwrecover/$archivofin-arptables
$command_ls -l $directory_fwrecover/$archivofin-ebtables
$command_ls -l $directory_fwrecover/$archivofin-nft-ipv4
$command_ls -l $directory_fwrecover/$archivofin-nft-ipv6
$command_ls -l $directory_fwrecover/$archivofin-legacy-ipv4
$command_ls -l $directory_fwrecover/$archivofin-legacy-ipv6
echo "  [ ok ] [ FIREWALL LISTED ] [ $archivofin ]"
echo "$cincuenta $archivofin-arptables"
cat $directory_fwrecover/$archivofin-arptables
echo "$cincuenta $archivofin-ebtables"
cat $directory_fwrecover/$archivofin-ebtables
echo "$cincuenta $archivofin-nft-ipv4"
cat $directory_fwrecover/$archivofin-nft-ipv4
echo "$cincuenta $archivofin-legacy-ipv4"
cat $directory_fwrecover/$archivofin-legacy-ipv4
echo "$cincuenta $archivofin-nft-ipv6"
cat $directory_fwrecover/$archivofin-nft-ipv6
echo "$cincuenta archivofin-legacy-ipv6"
cat $directory_fwrecover/$archivofin-legacy-ipv6
echo "  [ ok ] [ firewall readed ] [ $archivofin ]"
echo 
exit; fi
####
####
#### :rutina-final-show:
##########    english: actual: show actual firewall          ##########
##########    spanish: actual: muestra las reglas actuales   ##########
#### :rutina-inicial-actual:
####
####
if [ "$first_option" = "actual" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ show the last firewall saved ] || ||"
echo 
$command_arptables-save          &> $directory_fwrecover/$cmd_fwiptables-actual-arptables
$command_ebtables-save           &> $directory_fwrecover/$cmd_fwiptables-actual-ebtables   
$command_iptables_nft-save       &> $directory_fwrecover/$cmd_fwiptables-actual-nft-ipv4   
$command_iptables_legacy-save    &> $directory_fwrecover/$cmd_fwiptables-actual-legacy-ipv4
$command_ip6tables_nft-save      &> $directory_fwrecover/$cmd_fwiptables-actual-nft-ipv6   
$command_ip6tables_legacy-save   &> $directory_fwrecover/$cmd_fwiptables-actual-legacy-ipv6
echo "$cincuenta arptables $cinco"
cat $directory_fwrecover/$cmd_fwiptables-actual-arptables
echo "$cincuenta ebtables $cinco"
cat $directory_fwrecover/$cmd_fwiptables-actual-ebtables
echo "$cincuenta nft with ipv4 $cinco"
cat $directory_fwrecover/$cmd_fwiptables-actual-nft-ipv4
echo "$cincuenta legacy with ipv4 $cinco"
cat $directory_fwrecover/$cmd_fwiptables-actual-legacy-ipv4
echo "$cincuenta nft with ipv6 $cinco"
cat $directory_fwrecover/$cmd_fwiptables-actual-nft-ipv6
echo "$cincuenta legacy with ipv6 $cinco"
cat $directory_fwrecover/$cmd_fwiptables-actual-legacy-ipv6
echo
echo "$tab  [ ok ] [ readed firewall actual ]"
exit; fi
####
####
#### :rutina-final-actual:
##########    english: stop: stop firewall      ##########
##########    spanish: stop: para el firewall   ##########
#### :rutina-inicial-stop:
####
####
if [ "$first_option" = "stop" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ Stop the firewall ] || ||"
####
####
#### english: save actual fw #### spanish: guarda actual fw
####
####
$command_arptables-save &> $directory_fwrecover/$cmd_fwiptables-stoped-arptables
$command_ebtables-save &> $directory_fwrecover/$cmd_fwiptables-stoped-ebtables             
$command_iptables_nft-save &> $directory_fwrecover/$cmd_fwiptables-stoped-nft-ipv4         
$command_iptables_legacy-save &> $directory_fwrecover/$cmd_fwiptables-stoped-legacy-ipv4   
$command_ip6tables_nft-save &> $directory_fwrecover/$cmd_fwiptables-stoped-nft-ipv6        
$command_ip6tables_legacy-save &> $directory_fwrecover/$cmd_fwiptables-stoped-legacy-ipv6  
####
####
#### english: erase the rules #### spanish: borra las reglas
####
####
$cmd_fwiptables eraserules &> /dev/null
echo "  [ info ] [ stopping firewall ]"
echo "  [  ok  ] [ firewall stopped ]"
exit; fi
####
####
#### :rutina-final-stop:
##########    english: continue: continue the firewall      ##########
##########    spanish: continue: continua el cortafuegos    ##########
#### :rutina-inicial-continue:
####
####
if [ "$first_option" = "continue" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ Continue the stoped firewall ] || ||"
####
####
#### english: restore last fw #### spanish: restaura el ultimo fw
####
####
cat $directory_fwrecover/$cmd_fwiptables-stoped-arptables | $command_arptables-restore
cat $directory_fwrecover/$cmd_fwiptables-stoped-ebtables | $command_ebtables-restore
cat $directory_fwrecover/$cmd_fwiptables-stoped-nft-ipv4 | $command_iptables_nft-restore  
cat $directory_fwrecover/$cmd_fwiptables-stoped-legacy-ipv4 | $command_iptables_legacy-restore  
cat $directory_fwrecover/$cmd_fwiptables-stoped-nft-ipv6 | $command_ip6tables_nft-restore  
cat $directory_fwrecover/$cmd_fwiptables-stoped-legacy-ipv6 | $command_ip6tables_legacy-restore  
echo "  [ info ] [ continue firewall ]"
echo "  [  ok  ] [ firewall continued ]"
exit; fi
####
####
#### :rutina-final-continue:
##########    english: config-eng: several options to config in english        ##########
##########    spanish: config-eng: varias opciones para configurar en ingles   ##########
#### :rutina-inicial-config-eng:
####
####
if [ "$first_option" = "config-eng" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ show variables cfg from english configuration ] || ||"
cat  $defaultfullcfg_eng
exit; fi
####
####
#### :rutina-final-config-eng:
##########    english: config-spa: several options to config in spanish         ##########
##########    spanish: config-spa: varias opciones para configurar en spanish   ##########
#### :rutina-inicial-config-spa:
####
####
if [ "$first_option" = "config-spa" ]; then echo $give_cover
echo "$header_ok [ $first_option ]  [ show variables cfg from spanish configuration ] || ||"
cat $defaultfullcfg_spa
exit; fi
####
####
#### :rutina-final-config-spa:

############################       english: default: without other valid options
############################	   spanish: default: sin otra valida opcion
####
####
if [ "$launch_firewall" != "yes" ] ; then
echo "### ### [ fail ] [ Option: $first_option ] ### [ it is not valid option. ]  ###  [ Choose a one valid option ... ] ###" ;
$cmd_fwiptables $default_security ;
exit ; fi
####
####
###############################################################################################################
###############################################################################################################
####                                                                                            ###############
####           Knowed now sure that:         launch_firewall="yes"                              ###############
####                                                                                            ###############
###############################################################################################################
###############################################################################################################
####                                                                                            ###############
####          ready to launch rules ..                                                          ###############
####                                                                                            ###############
###############################################################################################################
###############################################################################################################
####                                                                                            ###############
####                                                                                            ###############
####  english: Options for launch rules:     system firewall with designed previous             ###############
####  spanish: Opciones para lanzar reglas:  firewall del sistema con diseño previo             ###############
####                                                                                            ###############
####                                                                                            ###############
###############################################################################################################
###############################################################################################################
####
####
########################################     english: ipv4 iptables all-permisive:
########################################     spanish: ipv4 iptables todo permisivo
#### :rutina-inicial-code-allpermisive:
####
####
#### legacy ip4
####
####
if [ "$type_firewall" = "all-permisive" ]; then $cmd_fwiptables eraserules &> /dev/null ;
####
####
#### english: legacy ipv4 127.0.0.1 acept and the others legacy ipv4 accept too
#### spanish: legacy ipv4 127.0.0.1 acepta y los otros legacy ipv4 acepta tambien
####
####
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
$input_state  -j ACCEPT \
-m comment --comment "state input" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-j ACCEPT \
-m comment --comment "all output" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A FORWARD \
-j ACCEPT \
-m comment --comment "all forward" &> /dev/null
####
####
#### english: nft ipv4 127.0.0.1 acept and the others nft ipv4 accept too
#### spanish: nft ipv4 127.0.0.1 acepta y los otros nft ipv4 acepta tambien
####
####
$allow_nft $allow_ipv4   $command_iptables_nft -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_nft $allow_ipv4   $command_iptables_nft -A INPUT \
-m state --state NEW,RELATED,ESTABLISHED -j ACCEPT \
-m comment --comment "state input" &> /dev/null
$allow_nft $allow_ipv4   $command_iptables_nft -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_nft $allow_ipv4   $command_iptables_nft -A OUTPUT \
-j ACCEPT \
-m comment --comment "all output" &> /dev/null
$allow_nft $allow_ipv4   $command_iptables_nft -A FORWARD \
-j ACCEPT \
-m comment --comment "all forward" &> /dev/null
####
####
########################################     english: ipv6 iptables all-permisive:
########################################     spanish: ipv6 iptables todo permisivo
####
####
#### english: legacy ipv6 127.0.0.1 acept and the others legacy ipv6 accept too
#### spanish: legacy ipv6 127.0.0.1 acepta y los otros legacy ipv6 acepta tambien
####
####
$allow_legacy $allow_ipv6   $command_ip6tables_legacy -A INPUT  \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_legacy $allow_ipv6   $command_ip6tables_legacy -A INPUT \
-m state --state NEW,RELATED,ESTABLISHED -j ACCEPT \
-m comment --comment "state input" &> /dev/null
$allow_legacy $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-j ACCEPT \
-m comment --comment "all otuput" &> /dev/null
$allow_legacy $allow_ipv6   $command_ip6tables_legacy -A FORWARD \
-j ACCEPT \
-m comment --comment "all forward" &> /dev/null
####
####
#### english: nft ipv6 127.0.0.1 acept and the others nft ipv6 accept too
#### spanish: nft ipv6 127.0.0.1 acepta y los otros nft ipv6 acepta tambien
####
####
$allow_nft $allow_ipv6   $command_ip6tables_nft -A INPUT   \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_nft $allow_ipv6   $command_ip6tables_nft -A INPUT   \
-m state --state NEW,RELATED,ESTABLISHED -j ACCEPT \
-m comment --comment "state input" &> /dev/null
$allow_nft $allow_ipv6   $command_ip6tables_nft -A OUTPUT  \
-j ACCEPT \
-m comment --comment "all output" &> /dev/null
$allow_nft $allow_ipv6   $command_ip6tables_nft -A FORWARD \
-j ACCEPT \
-m comment --comment "all forward" &> /dev/null
####
####
#### english: ipv6-icmp accept in legacy and accept in nft
#### spanish: ipv6-icmp acepta en legacy y acepta en nft
####
####
$allow_legacy $allow_ipv6 $command_ip6tables_legacy -A INPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
$allow_legacy $allow_ipv6 $command_ip6tables_legacy -A OUTPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
$allow_nft $allow_ipv6 $command_ip6tables_nft -A INPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
$allow_nft $allow_ipv6 $command_ip6tables_nft -A OUTPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
####
####
#### english: close with drop legacy and close with drop nft
#### spanish: cierra con drop legacy y cierra con drop nft
####
####
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv4     $command_iptables_nft -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv4     $command_iptables_nft -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
####
####
$allow_legacy  $allow_ipv4     $command_iptables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv4     $command_iptables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv6     $command_ip6tables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
####
####
echo "  [  ok  ] [ Launched: firewall ] [ Type: $type_firewall ] [ Name: $name_firewall ]"
exit; fi
####
####
#### :rutina-final-code-allpermisive:
########################################     english: ipv4 iptables off-line:
########################################     spanish: ipv4 iptables desconectado
#### :rutina-inicial-code-off-line:
####
####
#### legacy ip4
####
####
if [ "$type_firewall" = "off-line" ];  then $cmd_fwiptables eraserules &> /dev/null ;
####
####
#### english: legacy ipv4 127.0.0.1 acept
#### spanish: legacy ipv4 127.0.0.1 acepta
####
####
$allow_legacy $allow_ipv4  $command_iptables_legacy -A INPUT  \
-s 127.0.0.1 -d 127.0.0.1   -j ACCEPT \
-m comment --comment "localhost"  &> /dev/null
$allow_legacy $allow_ipv4  $command_iptables_legacy -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### english: legacy ipv4 127.0.0.1 acept
#### spanish: nft ipv4 127.0.0.1 acepta
####
####
$allow_nft $allow_ipv4   $command_iptables_nft -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_nft $allow_ipv4   $command_iptables_nft -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1 -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
########################################     english: ipv6 iptables off-line
########################################     spanish: ipv6 iptables desconectado
####
####
#### english: legacy ipv6 127.0.0.1 acept
#### spanish: legacy ipv6 127.0.0.1 acepta
####
####
$allow_legacy $allow_ipv6   $command_ip6tables_legacy -A INPUT  \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_legacy $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### english: nft ipv6 127.0.0.1 acept
#### spanish: nft ipv6 127.0.0.1 acepta
####
####
$allow_nft $allow_ipv6   $command_ip6tables_nft -A INPUT  \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_nft $allow_ipv6   $command_ip6tables_nft -A OUTPUT \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
########################################     english: close in off-line
########################################     spanish: cierra en off-line
####
####
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
####
$allow_nft  $allow_ipv4     $command_iptables_nft -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv4     $command_iptables_nft -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv4     $command_iptables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
####
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A OUTPUT -j DROP \
ç-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
####
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
####
####  
echo "  [  ok  ] [ Launched: firewall ] [ Type: $type_firewall ] [ Name: $name_firewall ]"
exit; fi
####
####
#### :rutina-final-code-off-line:
########################################     english: ipv4 iptables shield-ssh:
########################################     spanish: ipv4 iptables shield-ssh:
#### :rutina-inicial-code-shield-ssh:
####
####
if [ "$type_firewall" = "shield-ssh" ];  then $cmd_fwiptables eraserules &> /dev/null ;
####
####
#### loopback localhost legacy ip4
####
####
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### shield ssh legacy ipv4
#### escudo ssh legacy ipv4 
####
####
$allow_shield_maxtries $allow_legacy  $allow_ipv4  $command_iptables_legacy -A INPUT \
-p tcp -m multiport --dports ssh -m state --state NEW -m recent --set --name shield-tries \
-m comment --comment "shield tries" &> /dev/null
$allow_shield_maxtries $allow_legacy  $allow_ipv4  $command_iptables_legacy -A INPUT \
-m recent --name shield-tries --update --seconds 3600 --hitcount $config_shield_maxtries -j DROP \
-m comment --comment "shield tries" &> /dev/null
####
####
#### log server legacy ipv4
#### log servidor legacy ipv4
####
#### 
#### $allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
#### -p udp -m multiport --dports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null&> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null &> /dev/null
####
####
#### $allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
#### -p udp -m multiport --sports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-p tcp -m multiport --sports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### filter rules legacy ipv4
#### reglas de filtros legacy ipv4 
####
####
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-p udp -m multiport --sports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-p tcp -m multiport --sports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-p udp -m multiport --dports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-p tcp -m multiport --dports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
####
####
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-p udp -m multiport --dports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp"&> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-p udp -m multiport --sports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-p tcp -m multiport --sports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
#### loopback localhost nft ip4
####
####
$allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### shield ssh nft ipv4
#### escudo ssh nft ipv4 
####
####
$allow_shield_maxtries $allow_nft  $allow_ipv4  $command_iptables_nft -A INPUT \
-p tcp -m multiport --dports ssh -m state --state NEW -m recent --set --name shield-tries \
-m comment --comment "shield tries" &> /dev/null
$allow_shield_maxtries $allow_nft $allow_ipv4  $command_iptables_nft -A INPUT \
-m recent --name shield-tries --update --seconds 3600 --hitcount $config_shield_maxtries -j DROP \
-m comment --comment "shield tries" &> /dev/null
####
####
#### log server nft ipv4
#### log servidor nft ipv4
####
####
#### $allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
#### -p udp -m multiport --dports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### $allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
#### -p udp -m multiport --sports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-p tcp -m multiport --sports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### filter rules nft ipv4
#### reglas de filtros nft ipv4 
####
####
$allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
-p udp -m multiport --sports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
-p tcp -m multiport --sports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-p udp -m multiport --dports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-p tcp -m multiport --dports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
####
####
$allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
-p udp -m multiport --dports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-p udp -m multiport --sports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-p tcp -m multiport --sports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
########################################     english: ipv6 iptables 
########################################     spanish: ipv6 iptables 
####
####
#### loopback localhost legacy ip6
####
####
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A OUTPUT \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### shield ssh legacy ipv6
#### escudo ssh legacy ipv6 
####
####
$allow_shield_maxtries $allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
-p tcp -m multiport --dports ssh -m state --state NEW -m recent \
--set --name shield-tries \
-m comment --comment "shield tries" &> /dev/null
$allow_shield_maxtries $allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
-m recent --name shield-tries --update --seconds 3600 \
--hitcount $config_shield_maxtries -j DROP \
-m comment --comment "shield tries" &> /dev/null
####
####
#### log server legacy ipv6
#### log servidor legacy ipv6 
####
####
#### $allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
#### -p udp -m multiport --sports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A INPUT \
-p tcp -m multiport --sports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### $allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
#### -p udp -m multiport --dports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport --dports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### filter rules legacy ipv6
#### reglas de filtros legacy ipv6 
####
####
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
-p udp -m multiport --sports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A INPUT \
-p tcp -m multiport --dports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-p udp -m multiport --dports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport --dports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
-p udp -m multiport --dports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A INPUT \
-p tcp -m multiport --sports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-p udp -m multiport --sports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport --sports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
####
####
#### loopback localhost nft ip6
#### loopback localhost nft ipv6
####
####
$allow_nft  $allow_ipv6  $command_ip6tables_nft -A INPUT \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_nft  $allow_ipv6  $command_ip6tables_nft -A OUTPUT \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### shield ssh nft ipv6
#### escudo ssh nft ipv6 
####
####
$allow_shield_maxtries $allow_nft  $allow_ipv6  $command_ip6tables_nft -A INPUT \
-p tcp -m multiport --dports $config_shield_port -m state --state NEW -m recent \
--set --name shield-tries \
-m comment --comment "shield tries" &> /dev/null
$allow_shield_maxtries $allow_nft     $allow_ipv6  $command_ip6tables_nft -A INPUT \
-m recent --name shield-tries --update --seconds 3600 \
--hitcount $config_shield_maxtries -j DROP \
-m comment --comment "shield tries" &> /dev/null
####
####
#### log server nft ipv6
#### log servidor nft ipv6
####
####
#### $allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
#### -p udp -m multiport --dports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### $allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
#### -p udp -m multiport --sports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
-p tcp -m multiport --sports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### filter rules nft ipv6
#### reglas de filtros nft ipv6 
####
####
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
-p udp -m multiport --sports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
-p tcp -m multiport --sports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
-p udp -m multiport --sports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
-p tcp -m multiport --sports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
####
####
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
-p udp -m multiport --dports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
-p udp -m multiport --dports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
-p tcp -m multiport --dports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
########################################     english: close iptables 
########################################     spanish: cierra iptables 
####
####
$allow_legacy $allow_ipv6 $command_ip6tables_legacy -A INPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
$allow_legacy $allow_ipv6 $command_ip6tables_legacy -A OUTPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
$allow_nft $allow_ipv6 $command_ip6tables_nft -A INPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
$allow_nft $allow_ipv6 $command_ip6tables_nft -A OUTPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
####
####
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A INPUT -j DROP   \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A OUTPUT -j DROP  \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv4     $command_iptables_nft -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv4     $command_iptables_nft -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A OUTPUT -j DROP \
-m comment --comment "close"  &> /dev/null
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A INPUT -j DROP \
-m comment --comment "close"  &> /dev/null
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
####
####
$allow_nft  $allow_ipv4   $command_iptables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
####
####
echo "  [  ok  ] [ Launched: firewall ] [ Type: $type_firewall ] [ Name: $name_firewall ]"
exit; fi
####
####
#### :rutina-final-code-shield-ssh:
########################################     english: ipv4 iptables legacy
########################################     spanish: ipv4 iptables legacy
#### :rutina-inicial-code-rulesdefault:
####
####
if [ "$type_firewall" = "predesignated" ]; then $cmd_fwiptables eraserules &> /dev/null ;
####
####
#### loopback localhost legacy ip4
####
####
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### shield ssh legacy ipv4
#### escudo ssh legacy ipv4 
####
####
$allow_shield_maxtries $allow_legacy $allow_ipv4 $command_iptables_legacy -A INPUT \
-p tcp -m multiport --dports "$config_shield_port" -m state --state NEW -m recent --set --name shield-tries \
-m comment --comment "shield tries" &> /dev/null
$allow_shield_maxtries $allow_legacy $allow_ipv4 $command_iptables_legacy -A INPUT \
-m recent --name shield-tries --update --seconds 3600 --hitcount $config_shield_maxtries -j DROP \
-m comment --comment "shield tries" &> /dev/null
####
####
#### log server legacy ipv4
#### log servidor legacy ipv4
####
#### 
#### $allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
#### -p udp -m multiport --dports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null&> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null &> /dev/null
####
####
#### $allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
#### -p udp -m multiport --sports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-p tcp -m multiport --sports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### filter rules legacy ipv4
#### reglas de filtros legacy ipv4 
####
####
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-p udp -m multiport --sports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-p tcp -m multiport --sports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
$allow_legacy $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-p udp -m multiport --dports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-p tcp -m multiport --dports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
####
####
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-p udp -m multiport --dports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp"&> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-p udp -m multiport --sports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A OUTPUT \
-p tcp -m multiport --sports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
########################################     english: ipv4 iptables nft
########################################     spanish: ipv4 iptables nft
####
####
#### loopback localhost nft ip4
####
####
$allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### shield ssh nft ipv4
#### escudo ssh nft ipv4 
####
####
$allow_shield_maxtries $allow_nft $allow_ipv4 $command_iptables_nft -A INPUT \
-p tcp -m multiport --dports "$config_shield_port" -m state --state NEW -m recent --set --name "shield-tries" \
-m comment --comment "shield tries" &> /dev/null
$allow_shield_maxtries $allow_nft $allow_ipv4 $command_iptables_nft -A INPUT \
-m recent --name "shield-tries" --update --seconds 3600 --hitcount "$config_shield_maxtries" -j DROP \
-m comment --comment "shield tries" &> /dev/null
#### 
####
#### log server nft ipv4
#### log servidor nft ipv4
####
####
#### $allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
#### -p udp -m multiport --dports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_nft $allow_ipv4   $command_iptables_nft -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### $allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
#### -p udp -m multiport --sports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-p tcp -m multiport --sports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### filter rules nft ipv4
#### reglas de filtros nft ipv4 
####
####
$allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
-p udp -m multiport --sports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
-p tcp -m multiport --sports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-p udp -m multiport --dports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-p tcp -m multiport --dports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
####
####
$allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
-p udp -m multiport --dports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-p udp -m multiport --sports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft  $allow_ipv4   $command_iptables_nft -A OUTPUT \
-p tcp -m multiport --sports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
########################################     english: ipv6 iptables legacy
########################################     spanish: ipv6 iptables legacy
####
####
#### loopback localhost legacy ip6
####
####
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A OUTPUT \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### shield ssh legacy ipv6
#### escudo ssh legacy ipv6 
####
####
$allow_shield_maxtries $allow_legacy $allow_ipv6 $command_ip6tables_legacy -A INPUT \
-p tcp -m multiport --dports "$config_shield_port" -m state --state NEW -m recent \
--set --name shield-tries \
-m comment --comment "shield tries" &> /dev/null
$allow_shield_maxtries $allow_legacy $allow_ipv6 $command_ip6tables_legacy -A INPUT \
-m recent --name shield-tries --update --seconds 3600 \
--hitcount $config_shield_maxtries -j DROP \
-m comment --comment "shield tries" &> /dev/null
####
####
#### log server legacy ipv6
#### log servidor legacy ipv6 
####
####
#### $allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
#### -p udp -m multiport --sports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A INPUT \
-p tcp -m multiport --sports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### $allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
#### -p udp -m multiport --dports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport --dports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### filter rules legacy ipv6
#### reglas de filtros legacy ipv6 
####
####
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
-p udp -m multiport --sports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A INPUT \
-p tcp -m multiport --dports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-p udp -m multiport --dports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport --dports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
-p udp -m multiport --dports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A INPUT \
-p tcp -m multiport --sports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-p udp -m multiport --sports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport --sports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
####
####
########################################     english: ipv6 iptables nft
########################################     spanish: ipv6 iptables nft
####
####
#### loopback localhost nft ip6
#### loopback localhost nft ipv6
####
####
$allow_nft  $allow_ipv6  $command_ip6tables_nft -A INPUT \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_nft  $allow_ipv6  $command_ip6tables_nft -A OUTPUT \
-s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### shield ssh nft ipv6
#### escudo ssh nft ipv6 
####
####
$allow_shield_maxtries $allow_nft $allow_ipv6 $command_ip6tables_nft -A INPUT \
-p tcp -m multiport --dports "$config_shield_port" -m state --state NEW -m recent \
--set --name shield-tries \
-m comment --comment "shield tries" &> /dev/null
$allow_shield_maxtries $allow_nft $allow_ipv6 $command_ip6tables_nft -A INPUT \
-m recent --name shield-tries --update --seconds 3600 \
--hitcount $config_shield_maxtries -j DROP \
-m comment --comment "shield tries" &> /dev/null
####
####
#### log server nft ipv6
#### log servidor nft ipv6
####
####
#### $allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
#### -p udp -m multiport --dports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### $allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
#### -p udp -m multiport --sports $server_port_udp -j LOG \
#### -m comment --comment "logserver udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
-p tcp -m multiport --sports $server_port_tcp -j LOG \
-m comment --comment "logserver tcp" &> /dev/null
####
####
#### filter rules nft ipv6
#### reglas de filtros nft ipv6 
####
####
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
-p udp -m multiport --sports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
-p tcp -m multiport --sports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
-p udp -m multiport --sports $client_port_udp -j ACCEPT \
-m comment --comment "client udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
-p tcp -m multiport --sports $client_port_tcp -j ACCEPT \
-m comment --comment "client tcp" &> /dev/null
####
####
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
-p udp -m multiport --dports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A INPUT \
-p tcp -m multiport --dports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
-p udp -m multiport --dports $server_port_udp -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft  $allow_ipv6      $command_ip6tables_nft -A OUTPUT \
-p tcp -m multiport --dports $server_port_tcp -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
########################################     english: close iptables 
########################################     spanish: cierra iptables 
####
####
$allow_legacy $allow_ipv6 $command_ip6tables_legacy -A INPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
$allow_legacy $allow_ipv6 $command_ip6tables_legacy -A OUTPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
$allow_nft $allow_ipv6 $command_ip6tables_nft -A INPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
$allow_nft $allow_ipv6 $command_ip6tables_nft -A OUTPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "nexthop ip6" &> /dev/null
####
####
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A INPUT -j DROP   \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A OUTPUT -j DROP  \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv4     $command_iptables_nft -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv4     $command_iptables_nft -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A OUTPUT -j DROP \
-m comment --comment "close"  &> /dev/null
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A INPUT -j DROP \
-m comment --comment "close"  &> /dev/null
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
####
####
$allow_nft  $allow_ipv4   $command_iptables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv4   $command_iptables_legacy -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft  $allow_ipv6     $command_ip6tables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
####
####
echo "  [  ok  ] [ Launched: firewall ] [ Type: $type_firewall ] [ Name: $name_firewall ]"
exit; fi
####
####
#### :rutina-final-code-rulesdefault:
###############################################################################################################
###############################################################################################################
####                                                                                            ###############
####          ready to launch rules CUSTOM                                                      ###############
####                                                                                            ###############
###############################################################################################################
###############################################################################################################
####
####
###############################################################################################################
###############################################################################################################
####                                                                                            ###############
####                                                                                            ###############
####  english: Options for launch rules:     system firewall custom                             ###############
####  spanish: Opciones para lanzar reglas:  firewall del sistema custom                        ###############
####                                                                                            ###############
####                                                                                            ###############
###############################################################################################################
###############################################################################################################
#### :rutina-inicial-code-wizard:
####
####
##############################       english: overwrite system varibles with the config cfg
##############################       spanish: sobreescribe las variables con la config cfg
####
####
if [ "$first_option" = "custom" ]; then if [ -f $directory_config/$second_option ]; 
then source $directory_config/$second_option &> /dev/null ; else echo "$tab [ fail ] [ Config file not found ]"; exit ; fi ; fi
####
####
##############################      english: selective state of intput/oputut          #####################
##############################      spanish: estado selectivo de entrada/salida        #####################
####
####
if [ "$allow_input_state" = "$NULL" ]  ; then config_input_state="-m state --state $config_input_state"   ;
else config_input_state="$NULL"  ; fi
if [ "$allow_output_state" = "$NULL" ] ; then config_output_state="-m state --state $config_output_state" ;
else config_output_state="$NULL" ; fi
####
####
##############################      english: output_uid or output_gid for input established status        #####################
##############################      spanish: usuario o grupo para establecidos de entrada de estado        #####################
####
####
config_uid_gid=no
if [ "$allow_output_uid" = "$NULL" ]; then config_uid_gid="" ; else $nada ; fi
if [ "$allow_output_gid" = "$NULL" ]; then config_uid_gid="" ; else $nada ; fi
####
####
###############################################################################################################
###############################################################################################################
####                                                                                            ###############
####          launching rules ..                                                                ###############
####                                                                                            ###############
###############################################################################################################
###############################################################################################################
####
####
############################       english: iptables rules ipv4  iptables-legacy
############################       spanish: reglas de iptables ipv4   iptables-legacy
####
####
#### english: erase all rules
#### spanish: borra todas las reglas
####
####
$cmd_fwiptables eraserules &> /dev/null
####
####
#######################################        english: ebtables mac rules
#######################################        spanish: ebtables mac rules
####
####
$allow_mac_whitelist $command_ebtables -A INPUT  -s $config_mac_whitelist  -j ACCEPT \
-m comment --comment "mac whitelist" &> /dev/null
$allow_mac_whitelist $command_ebtables -A OUTPUT -d $config_mac_whitelist  -j ACCEPT \
-m comment --comment "mac whitelist" &> /dev/null
####
####
$allow_mac_blacklist $command_ebtables -A INPUT  -s $config_mac_blacklist  -j DROP \
-m comment --comment "mac blacklist"  &> /dev/null
$allow_mac_blacklist $command_ebtables -A OUTPUT -d $config_mac_blacklist  -j DROP \
-m comment --comment "mac blacklist" &> /dev/null
####
####
#######################################        english: Accept  localhost rules
#######################################        spanish: aceptar reglas localhost
####
####
$allow_legacy $allow_ipv4 $command_iptables_legacy -A INPUT  -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_legacy $allow_ipv4 $command_iptables_legacy -A OUTPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
$allow_legacy $allow_ipv6 $command_ip6tables_legacy -A INPUT  -s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_legacy $allow_ipv6 $command_ip6tables_legacy -A OUTPUT -s ::1 -d ::1 -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
$allow_nft $allow_ipv4 $command_iptables_nft -A INPUT  -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_nft $allow_ipv4 $command_iptables_nft -A OUTPUT -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
$allow_nft $allow_ipv6 $command_ip6tables_nft -A INPUT  -s ::1 -d ::1  -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$allow_nft $allow_ipv6 $command_ip6tables_nft -A OUTPUT -s ::1 -d ::1 -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
####################################### english: rules for max tries for ssh
####################################### spanish: reglas for max ties for ssh
####
####
if [ "$allow_shield_maxtries" = "" ]; then $nada
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A INPUT \
-p tcp -m multiport --dports $config_shield_port -m state --state NEW -m recent \
--set --name count-tries-ssh \
-m comment --comment "shield tries" &> /dev/null
$allow_nft  $allow_ipv4  $command_iptables_nft -A INPUT \
-p tcp -m multiport --dports $config_shield_port -m state --state NEW -m recent \
--set --name count-tries-ssh \
-m comment --comment "shield tries" &> /dev/null
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
-p tcp -m multiport --dports $config_shield_port -m state --state NEW -m recent \
--set --name count-tries-ssh \
-m comment --comment "shield tries" &> /dev/null
$allow_nft  $allow_ipv6  $command_ip6tables_nft -A INPUT \
-p tcp -m multiport --dport $config_shield_port -m state --state NEW -m recent \
--set --name count-tries-ssh \
-m comment --comment "shield tries" &> /dev/null
####
####
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A INPUT \
-m recent --name count-tries-ssh --update --seconds 3600 \
--hitcount $config_shield_maxtries -j DROP \
-m comment --comment "shield tries" &> /dev/null
$allow_nft     $allow_ipv4  $command_iptables_nft -A INPUT \
-m recent --name count-tries-ssh --update --seconds 3600 \
--hitcount $config_shield_maxtries -j DROP \
-m comment --comment "shield tries" &> /dev/null
$allow_legacy  $allow_ipv6  $command_ip6tables_legacy -A INPUT \
-m recent --name count-tries-ssh --update --seconds 3600 \
--hitcount $config_shield_maxtries -j DROP \
-m comment --comment "shield tries" &> /dev/null
$allow_nft     $allow_ipv6  $command_ip6tables_nft -A INPUT \
-m recent --name count-tries-ssh --update --seconds 3600 \
--hitcount $config_shield_maxtries -j DROP \
-m comment --comment "shield tries" &> /dev/null
fi
####
####
#######################################        english: limit bandwidth in kb/s
#######################################        spanish: limitar ancho de banda en kb/s
####
####
#### english: ipv4  bandwidth
#### spanish: ipv4  ancho de banda
####
####
$allow_ipv4 $allow_legacy $allow_input_bandwidth $command_iptables_legacy     -A  INPUT \
-m hashlimit --hashlimit-above   "$config_input_bandwidth"kb/sec \
--hashlimit-name maxinputlegacy  -j DROP \
-m comment --comment "bandwidth kb/s"  &> /dev/null
####
####
$allow_ipv4 $allow_legacy $allow_output_bandwidth $command_iptables_legacy    -A OUTPUT \
-m hashlimit --hashlimit-above  "$config_output_bandwidth"kb/sec \
--hashlimit-mode dstip --hashlimit-name maxoutputlegacy -j DROP \
-m comment --comment "bandwidth kb/s"  &> /dev/null
####
####
$allow_ipv4 $allow_nft $allow_input_bandwidth $command_iptables_nft           -A INPUT \
-m hashlimit    --hashlimit-above "$config_input_bandwidth"kb/sec  \
--hashlimit-name maxinputnft  -j DROP \
-m comment --comment "bandwidth kb/s"  &> /dev/null
####
####
$allow_ipv4 $allow_nft $allow_output_bandwidth $command_iptables_nft          -A OUTPUT \
-m hashlimit  --hashlimit-above "$config_output_bandwidth"kb/sec \
--hashlimit-mode dstip  --hashlimit-name maxoutputnft -j DROP \
-m comment --comment "bandwidth kb/s"  &> /dev/null
####
####
#######################################        english: ipv6 bandwidth
#######################################        spanish: ipv6 ancho de banda
####
####
$allow_ipv6 $allow_legacy $allow_input_bandwidth $command_ip6tables_legacy -A  INPUT \
-m hashlimit --hashlimit-above "$config_input_bandwidth"kb/sec --hashlimit-name maxinput  -j DROP \
-m comment --comment "bandwidth kb/s"  &> /dev/null
####
####
$allow_ipv6 $allow_legacy $allow_output_bandwidth $command_ip6tables_legacy -A OUTPUT \
-m hashlimit --hashlimit-above  "$config_output_bandwidth"kb/sec --hashlimit-name maxoutput -j DROP \
-m comment --comment "bandwidth kb/s"  &> /dev/null
####
####
$allow_ipv6 $allow_nft $allow_input_bandwidth $command_ip6tables_nft -A  INPUT \
-m hashlimit --hashlimit-above "$config_input_bandwidth"kb/sec --hashlimit-name maxinput  -j DROP \
-m comment --comment "bandwidth kb/s"  &> /dev/null
####
####
$allow_ipv6 $allow_nft $allow_output_bandwidth $command_ip6tables_nft -A OUTPUT \
-m hashlimit --hashlimit-above "$config_output_bandwidth"kb/sec --hashlimit-name maxoutput -j DROP \
-m comment --comment "bandwidth kb/s"  &> /dev/null
####
####
#######################################        english: limit number of all connections
#######################################        spanish: limitar numero de conexiones totales
####
####
#### english: ipv4  bandwidth
#### spanish: ipv4  ancho de banda
$allow_ipv4 $allow_legacy $allow_input_maxconnect  $command_iptables_legacy -A INPUT  \
-m connlimit --connlimit-above $config_input_maxconnect   -j DROP  \
-m comment --comment "max connect"  &> /dev/null
####
####
$allow_ipv4 $allow_legacy $allow_output_maxconnect $command_iptables_legacy -A OUTPUT \
-m connlimit --connlimit-above $config_output_maxconnect  -j DROP \
-m comment --comment "max connect"  &> /dev/null
####
####
$allow_ipv4 $allow_nft $allow_input_maxconnect $command_iptables_nft   -A INPUT  \
-m connlimit --connlimit-above $config_input_maxconnect       -j DROP \
-m comment --comment "max connect"  &> /dev/null
####
####
$allow_ipv4 $allow_nft $allow_output_maxconnect $command_iptables_nft  -A OUTPUT \
-m connlimit --connlimit-above $config_output_maxconnect      -j DROP \
-m comment --comment "max connect"  &> /dev/null
####
####
#### english: ipv6 bandwidth
#### spanish: ipv6 ancho de banda
####
####
$allow_ipv6 $allow_legacy $allow_input_maxconnect  $command_ip6tables_legacy -A INPUT  \
-m connlimit --connlimit-above $config_input_maxconnect  -j DROP \
-m comment --comment "max connect"  &> /dev/null
####
####
$allow_ipv6 $allow_legacy $allow_output_maxconnect $command_ip6tables_legacy -A OUTPUT \
-m connlimit --connlimit-above $config_output_maxconnect -j DROP \
-m comment --comment "max connect"  &> /dev/null
####
####
$allow_ipv6 $allow_nft $allow_input_maxconnect $command_ip6tables_nft   -A INPUT  \
-m connlimit --connlimit-above $config_input_maxconnect       -j DROP \
-m comment --comment "max connect"  &> /dev/null
####
####
$allow_ipv6 $allow_nft $allow_output_maxconnect $command_ip6tables_nft  -A OUTPUT \
-m connlimit --connlimit-above $config_output_maxconnect      -j DROP \
-m comment --comment "max connect"  &> /dev/null
####
####
####################################### english: Drop rules for blacklist
####################################### spanish: reglas de denegar para lista negra
####
####
for one_blacklist in $(echo $config_net_blacklist | $command_sed 's/,/ /g')
####
####
#### ipv4
####
####
do
$allow_ipv4 $allow_legacy $allow_net_blacklist $command_iptables_legacy  -A INPUT  \
-s $one_blacklist -j DROP \
-m comment --comment "blacklist $one_blacklist" &> /dev/null
####
####
$allow_ipv4 $allow_legacy $allow_net_blacklist $command_iptables_legacy  -A OUTPUT \
-d $one_blacklist -j DROP \
-m comment --comment "blacklist $one_blacklist" &> /dev/null
####
####
$allow_ipv4 $allow_nft    $allow_net_blacklist $command_iptables_nft     -A INPUT  \
-s $one_blacklist -j DROP \
-m comment --comment "blacklist $one_blacklist" &> /dev/null
####
####
$allow_ipv4 $allow_nft    $allow_net_blacklist $command_iptables_nft     -A OUTPUT \
-d $one_blacklist -j DROP \
-m comment --comment "blacklist $one_blacklist" &> /dev/null
####
####
#### ipv6
####
####
$allow_ipv6 $allow_legacy $allow_net_blacklist $command_ip6tables_legacy -A INPUT  \
-s $one_blacklist -j DROP \
-m comment --comment "blacklist $one_blacklist" &> /dev/null
####
####
$allow_ipv6 $allow_legacy $allow_net_blacklist $command_ip6tables_legacy -A OUTPUT \
-d $one_blacklist -j DROP \
-m comment --comment "blacklist $one_blacklist" &> /dev/null
####
####
$allow_ipv6 $allow_nft    $allow_net_blacklist $command_ip6tables_nft    -A INPUT  \
-s $one_blacklist -j DROP \
-m comment --comment "blacklist $one_blacklist" &> /dev/null
####
####
$allow_ipv6 $allow_nft    $allow_net_blacklist $command_ip6tables_nft    -A OUTPUT \
-d $one_blacklist -j DROP \
-m comment --comment "blacklist $one_blacklist" &> /dev/null
done
#### 
####
####################################### english: Accept rules for vpn
####################################### spanish: reglas de aceptar para vpn
####
####
for one_vpn in $(echo $config_net_vpn | $command_sed 's/,/ /g') 
#### ipv4
####
do
$allow_ipv4 $allow_legacy $allow_net_vpn $command_iptables_legacy  -A  INPUT  \
-s $one_vpn -j ACCEPT \
-m comment --comment "vpn $one_vpn" &> /dev/null
####
####
$allow_ipv4 $allow_legacy $allow_net_vpn $command_iptables_legacy  -A  OUTPUT \
-d $one_vpn -j ACCEPT \
-m comment --comment "vpn $one_vpn" &> /dev/null
####
####
$allow_ipv4 $allow_nft    $allow_net_vpn $command_iptables_nft     -A  INPUT  \
-s $one_vpn -j ACCEPT \
-m comment --comment "vpn $one_vpn" &> /dev/null
####
####
$allow_ipv4 $allow_nft    $allow_net_vpn $command_iptables_nft     -A  OUTPUT \
-d $one_vpn -j ACCEPT \
-m comment --comment "vpn $one_vpn" &> /dev/null
####
####
#### ipv6
####
####
$allow_ipv6 $allow_legacy $allow_net_vpn $command_ip6tables_legacy -A  INPUT  \
-s $one_vpn -j ACCEPT \
-m comment --comment "vpn $one_vpn" &> /dev/null
####
####
$allow_ipv6 $allow_legacy $allow_net_vpn $command_ip6tables_legacy -A  OUTPUT \
-d $one_vpn -j ACCEPT \
-m comment --comment "vpn $one_vpn" &> /dev/null
####
####
$allow_ipv6 $allow_nft    $allow_net_vpn $command_ip6tables_nft    -A  INPUT  \
-s $one_vpn -j ACCEPT \
-m comment --comment "vpn $one_vpn" &> /dev/null
####
####
$allow_ipv6 $allow_nft    $allow_net_vpn $command_ip6tables_nft    -A  OUTPUT \
-d $one_vpn -j ACCEPT \
-m comment --comment "vpn $one_vpn" &> /dev/null
done
####
####
####################################### english: rules to allow client ports with without separate rules
####################################### spanish: reglas para permitir puertos cliente without separate rules
####
####
if [ "$separate_port_rules" = "no" ]; then 
####
####
####    CLIENT  UDP
####
#### ipv4 legacy udp
####
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A INPUT \
-p udp -m multiport $config_input_state --sports $client_udp -s $net_ipv4_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A OUTPUT \
-p udp -m multiport $config_output_state --dports $client_udp -d $net_ipv4_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
####
#### 
#### ipv4 nft udp
####
$allow_nft $allow_ipv4 $command_iptables_nft -A INPUT \
-p udp -m multiport $config_input_state --sports $client_udp -s $net_ipv4_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
$allow_nft $allow_ipv4 $command_iptables_nft -A OUTPUT \
-p udp -m multiport $config_output_state --dports $client_udp -d $net_ipv4_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
####
####
#### ipv6 legacy udp
####
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A INPUT \
-p udp -m multiport $config_input_state --sports $client_udp -s $net_ipv6_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A OUTPUT \
-p udp -m multiport $config_output_state --dports $client_udp -d $net_ipv6_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
####
####
#### ipv6 nft udp
####
####
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A INPUT \
-p tcp -m multiport $config_input_state --sports $client_udp -s $net_ipv6_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A OUTPUT \
-p tcp -m multiport $config_output_state --dports $client_udp -d $net_ipv6_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
####
####
####    CLIENT  TCP
####
#### ipv4 legacy tcp
####
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A INPUT \
-p tcp -m multiport $config_input_state --sports $client_tcp -s $net_ipv4_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A OUTPUT \
-p tcp -m multiport $config_output_state --dports $client_tcp -d $net_ipv4_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
####
#### 
#### ipv4 nft tcp
####
$allow_nft $allow_ipv4 $command_iptables_nft -A INPUT \
-p tcp -m multiport $config_input_state --sports $client_tcp -s $net_ipv4_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
$allow_nft $allow_ipv4 $command_iptables_nft -A OUTPUT \
-p tcp -m multiport $config_output_state --dports $client_tcp -d $net_ipv4_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
####
####
#### ipv6 legacy tcp
####
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A INPUT \
-p tcp -m multiport $config_input_state --sports $client_tcp -s $net_ipv6_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport $config_output_state --dports $client_tcp -d $net_ipv6_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
####
####
#### ipv6 nft tcp
####
####
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A INPUT \
-p tcp -m multiport $config_input_state --sports $client_tcp -s $net_ipv6_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A OUTPUT \
-p tcp -m multiport $config_output_state --dports $client_tcp -d $net_ipv6_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
####
####
fi
####
####
####################################### english: rules to allow client ports with with separate rules
####################################### spanish: reglas para permitir puertos cliente with separate rules
####
####
if [ "$separate_port_rules" = "" ]; then 
for one_udp in $(echo $client_udp | $command_sed 's/,/ /g') ;
do
####
####
####    CLIENT  UDP
####
#### ipv4 legacy udp
####
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A INPUT \
-p udp -m multiport $config_input_state --sports $one_udp -s $net_ipv4_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A OUTPUT \
-p udp -m multiport $config_output_state --dports $one_udp -d $net_ipv4_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
####
#### 
#### ipv4 nft udp
####
$allow_nft $allow_ipv4     $command_iptables_nft -A INPUT \
-p udp -m multiport $config_input_state --sports $one_udp -s $net_ipv4_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
$allow_nft $allow_ipv4     $command_iptables_nft -A OUTPUT \
-p udp -m multiport $config_output_state --dports $one_udp -d $net_ipv4_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
####
####
#### ipv6 legacy udp
####
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A INPUT \
-p udp -m multiport $config_input_state --sports $one_udp -s $net_ipv6_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A OUTPUT \
-p udp -m multiport $config_output_state --dports $one_udp -d $net_ipv6_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
####
####
#### ipv6 nft udp
####
####
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A INPUT \
-p tcp -m multiport $config_input_state --sports $one_udp -s $net_ipv6_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A OUTPUT \
-p tcp -m multiport $config_output_state --dports $one_udp -d $net_ipv6_client -j ACCEPT \
-m comment --comment "client udp"  &> /dev/null
####
####
done; fi
####
####
if [ "$separate_port_rules" = "" ]; then 
for one_tcp in $(echo $client_tcp | $command_sed 's/,/ /g') ;
do
####
####
####    CLIENT TCP
####
#### ipv4 legacy tcp
####
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A INPUT \
-p tcp -m multiport $config_input_state --sports $one_tcp -s $net_ipv4_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A OUTPUT \
-p tcp -m multiport $config_output_state --dports $one_tcp -d $net_ipv4_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
####
#### 
#### ipv4 nft tcp
####
$allow_nft $allow_ipv4     $command_iptables_nft -A INPUT \
-p tcp -m multiport $config_input_state --sports $one_tcp -s $net_ipv4_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
$allow_nft $allow_ipv4     $command_iptables_nft -A OUTPUT \
-p tcp -m multiport $config_output_state --dports $one_tcp -d $net_ipv4_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
####
####
#### ipv6 legacy tcp
####
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A INPUT \
-p tcp -m multiport $config_input_state --sports $one_tcp -s $net_ipv6_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport $config_output_state --dports $one_tcp -d $net_ipv6_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
####
####
#### ipv6 nft tcp
####
####
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A INPUT \
-p tcp -m multiport $config_input_state --sports $one_tcp -s $net_ipv6_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A OUTPUT \
-p tcp -m multiport $config_output_state --dports $one_tcp -d $net_ipv6_client -j ACCEPT \
-m comment --comment "client tcp"  &> /dev/null
####
####
done ; fi
####
####
####################################### english: rules to log servers
####################################### spanish: reglas para logear servers
####
####
#### ipv4
####
####
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A INPUT  \
-p tcp  -m multiport --dports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_input" \
-m comment --comment "logserver tcp"  &> /dev/null
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A INPUT  \
-p udp  -m multiport --dports $logserver_udp -j LOG --log-prefix "$logserver_prefix_input" \
-m comment --comment "logserver udp"  &> /dev/null
####
####
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A OUTPUT \
-p tcp -m multiport --sports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_output" \
-m comment --comment "logserver tcp"  &> /dev/null
$allow_legacy  $allow_ipv4  $command_iptables_legacy -A OUTPUT \
-p udp -m multiport --sports $logserver_udp -j LOG --log-prefix "$logserver_prefix_output" \
-m comment --comment "logserver udp"  &> /dev/null
####
####
$allow_nft     $allow_ipv4  $command_iptables_nft    -A INPUT  \
-p tcp  -m multiport --dports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_input" \
-m comment --comment "logserver tcp"  &> /dev/null
$allow_nft     $allow_ipv4  $command_iptables_nft    -A INPUT  \
-p udp  -m multiport --dports $logserver_udp -j LOG --log-prefix "$logserver_prefix_input" \
-m comment --comment "logserver udp"  &> /dev/null
####
####
$allow_nft     $allow_ipv4  $command_iptables_nft    -A OUTPUT \
-p tcp -m multiport --sports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_output" \
-m comment --comment "logserver tcp"  &> /dev/null
$allow_nft     $allow_ipv4  $command_iptables_nft    -A OUTPUT \
-p udp -m multiport --sports $logserver_udp -j LOG --log-prefix "$logserver_prefix_output" \
-m comment --comment "logserver udp"  &> /dev/null
####
####
#### ipv6
####
####
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A INPUT   \
-p tcp  -m multiport --dports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_input" \
-m comment --comment "logserver tcp"  &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A INPUT   \
-p udp  -m multiport --dports $logserver_udp -j LOG --log-prefix "$logserver_prefix_input" \
-m comment --comment "logserver udp"  &> /dev/null
####
####
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT  \
-p tcp -m multiport --sports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_output" \
-m comment --comment "logserver tcp"  &> /dev/null
$allow_legacy  $allow_ipv6   $command_ip6tables_legacy -A OUTPUT  \
-p udp -m multiport --sports $logserver_udp -j LOG --log-prefix "$logserver_prefix_output" \
-m comment --comment "logserver udp"  &> /dev/null
####
####
$allow_nft     $allow_ipv6   $command_ip6tables_nft    -A INPUT   \
-p tcp  -m multiport --dports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_input" \
-m comment --comment "logserver tcp"  &> /dev/null
$allow_nft     $allow_ipv6   $command_ip6tables_nft    -A INPUT   \
-p udp  -m multiport --dports $logserver_udp -j LOG --log-prefix "$logserver_prefix_input" \
-m comment --comment "logserver udp"  &> /dev/null
####
####
$allow_nft     $allow_ipv6   $command_ip6tables_nft    -A OUTPUT  \
-p tcp -m multiport --sports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_output" \
-m comment --comment "logserver tcp"  &> /dev/null
$allow_nft     $allow_ipv6   $command_ip6tables_nft    -A OUTPUT  \
-p udp -m multiport --sports $logserver_udp -j LOG --log-prefix "$logserver_prefix_output" \
-m comment --comment "logserver udp"  &> /dev/null
####
####
####################################### english: rules allow server ports
####################################### spanish: reglas para permitir puertos servidor 
####
####
#### ipv4 legacy
####
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A INPUT  \
-p udp -m multiport --dports $server_udp -s $net_ipv4_server -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A INPUT  \
-p tcp -m multiport --dports $server_tcp -s $net_ipv4_server -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A OUTPUT \
-p udp -m multiport --sports $server_udp -d $net_ipv4_server -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv4 $command_iptables_legacy -A OUTPUT \
-p tcp -m multiport --sports $server_tcp -d $net_ipv4_server -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
#### 
#### ipv4 nft
####
$allow_nft $allow_ipv4 $command_iptables_nft -A INPUT \
-p udp -m multiport --dports $server_udp -s $net_ipv4_server -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft $allow_ipv4 $command_iptables_nft -A INPUT \
-p tcp -m multiport --dports $server_tcp -s $net_ipv4_server -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
$allow_nft $allow_ipv4 $command_iptables_nft -A OUTPUT \
-p udp -m multiport --sports $server_udp -d $net_ipv4_server -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft $allow_ipv4 $command_iptables_nft -A OUTPUT \
-p tcp -m multiport --sports $server_tcp -d $net_ipv4_server -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
#### ipv6 legacy
####
####
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A INPUT  \
-p udp -m multiport --dports $server_udp -s $net_ipv6_server -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A INPUT  \
-p tcp -m multiport --dports $server_tcp -s $net_ipv6_server -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A OUTPUT \
-p udp -m multiport --sports $server_udp -d $net_ipv6_server -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport --sports $server_tcp -d $net_ipv6_server -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
#### ipv6 nft
####
####
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A INPUT  \
-p udp -m multiport --dports $server_udp -s $net_ipv6_server -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A INPUT  \
-p tcp -m multiport --dports $server_tcp -s $net_ipv6_server -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A OUTPUT \
-p udp -m multiport --sports $server_udp -d $net_ipv6_server -j ACCEPT \
-m comment --comment "server udp" &> /dev/null
$allow_nft  $allow_ipv6 $command_ip6tables_nft -A OUTPUT \
-p tcp -m multiport --sports $server_tcp -d $net_ipv6_server -j ACCEPT \
-m comment --comment "server tcp" &> /dev/null
####
####
####################################### english: rules from input of legacy ipv4 for ping, uid, gid and protocols
####################################### spanish: reglas de entrada de legacy ipv4 para ping, uid, gid y protocolos
####
####
$allow_legacy  $allow_ipv4 $allow_output_ping  $command_iptables_legacy -A INPUT  \
-p icmp --icmp-type echo-reply -j ACCEPT \
-m comment --comment "icmp reply" &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $allow_input_ping $command_iptables_legacy -A INPUT \
-p icmp --icmp-type echo-request -j ACCEPT \
-m comment --comment "icmp resquest" &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $config_uid_gid $command_iptables_legacy -A INPUT \
-m state --state related,established -j ACCEPT \
-m comment --comment "state uid-gid" &> /dev/null
####
####
for one_protocol in $(echo $config_others_protocols | $command_sed 's/,/ /g') ;
do $allow_legacy  $allow_ipv4 $allow_others_protocols $command_iptables_legacy -A INPUT \
-p $one_protocol -j ACCEPT \
-m comment --comment "other protocols" &> /dev/null
done
####
####
####################################### english: rules from output of legacy ipv4 for ping, uid, gid and protocols
####################################### spanish: reglas de salida de legacy ipv4 para ping, uid, gid y protocolos
####
####
$allow_legacy  $allow_ipv4 $allow_output_ping  $command_iptables_legacy   -A OUTPUT \
-p icmp --icmp-type echo-request -j ACCEPT \
-m comment --comment "icmp request" &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $allow_input_ping  $command_iptables_legacy -A OUTPUT \
-p icmp --icmp-type echo-reply -j ACCEPT \
-m comment --comment "icmp reply" &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $allow_output_uid $command_iptables_legacy   -A OUTPUT \
-m owner --uid-owner $config_output_uid -j ACCEPT \
-m comment --comment "state uid" &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $allow_output_gid $command_iptables_legacy   -A OUTPUT \
-m owner --gid-owner $config_output_gid -j ACCEPT \
-m comment --comment "state gid" &> /dev/null
####
####
for one_protocol in $(echo $config_others_protocols | $command_sed 's/,/ /g') ;
do $allow_legacy  $allow_ipv4 $allow_others_protocols      $command_iptables_legacy -A OUTPUT \
-p $one_protocol -j ACCEPT \
-m comment --comment "other protocols" &> /dev/null
done
####
####
####################################### english: ipv6 filter legacy rules input and output for ping, uid, gid and protocols
####################################### spanish: ipv6 filtros legacy reglas de entrada y salida para ping, uid, gid y protocolos
####
#### 
#### english: ipv6 filter legacy rules input 
#### spanish: ipv6 filtros de legacy reglas de entrada
####
####
$allow_legacy  $allow_ipv6 $allow_output_ping      $command_ip6tables_legacy -A INPUT \
-p icmpv6 --icmpv6-type echo-reply -j ACCEPT \
-m comment --comment "icmp nexthop" &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $allow_input_ping    $command_ip6tables_legacy -A INPUT \
-p icmpv6 --icmpv6-type echo-request -j ACCEPT \
-m comment --comment "icmp nexthop" &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $config_uid_gid $command_ip6tables_legacy -A INPUT \
-m state --state related,established -j ACCEPT \
-m comment --comment "state uid-gid" &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A INPUT \
-p ipv6-icmp -j ACCEPT \
-m comment --comment "icmp nexthop" &> /dev/null
####
####
for one_protocol in $(echo $config_others_protocols | $command_sed 's/,/ /g') ;
do $allow_legacy  $allow_ipv6 $allow_others_protocols      $command_ip6tables_legacy -A INPUT \
-p $one_protocol -j ACCEPT \
-m comment --comment "other protocols" &> /dev/null
done
####
####
#### english: ipv6 filter legacy rules output
#### spanish: ipv6 filtros legacy reglas de salida
####
####
$allow_legacy  $allow_ipv6 $allow_output_ping  $command_ip6tables_legacy   -A OUTPUT \
-p icmpv6 --icmpv6-type echo-request -j ACCEPT \
-m comment --comment "icmp request" &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $allow_input_ping  $command_ip6tables_legacy -A OUTPUT \
-p icmpv6 --icmpv6-type echo-reply -j ACCEPT \
-m comment --comment "icmp reply" &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $allow_output_uid $command_ip6tables_legacy   -A OUTPUT \
-m owner --uid-owner $config_output_uid -j ACCEPT \
-m comment --comment "state uid" &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $allow_output_gid $command_ip6tables_legacy   -A OUTPUT \
-m owner --gid-owner $config_output_gid -j ACCEPT \
-m comment --comment "state gid" &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $command_ip6tables_legacy -A OUTPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "icmp nexthop" &> /dev/null
####
####
for one_protocol in $(echo $others_protocols | $command_sed 's/,/ /g') ;
do $allow_legacy6  $allow_ipv6 $allow_others_protocols      $command_ip6tables_legacy -A OUTPUT \
-p $one_protocol -j ACCEPT \
-m comment --comment "other protocols" &> /dev/null
done
####
####
############################       english: iptables rules ipv4  iptables-nft for ping, uid, gid and protocols
############################       spanish: reglas de iptables ipv4 iptables-nft para ping, uid, gid y protocolos
####
####
#### english: ipv4 filter nft rules input
#### spanish: ipv4 filter nft reglas de entrada
####
####
$allow_nft $allow_ipv4 $allow_output_ping     $command_iptables_nft -A INPUT \
-p icmp --icmp-type echo-reply -j ACCEPT \
-m comment --comment "icmp reply" &> /dev/null
####
####
$allow_nft $allow_ipv4 $allow_input_ping   $command_iptables_nft -A INPUT \
-p icmp --icmp-type echo-request -j ACCEPT \
-m comment --comment "icmp request" &> /dev/null
####
####
$allow_nft $allow_ipv4 $config_uid_gid $command_iptables_nft -A INPUT \
-m state --state related,established -j ACCEPT \
-m comment --comment "state uid-gid" &> /dev/null
####
####
for one_protocol in $(echo $config_others_protocols | $command_sed 's/,/ /g') ;
do $allow_nft $allow_ipv4 $allow_others_protocols       $command_iptables_nft -A INPUT \
-p $one_protocol -j ACCEPT \
-m comment --comment "other protocols" &> /dev/null
done
####
####
#### english: ipv4 filter nft rules output
#### spanish: ipv4 filter nft reglas de salida
####
####
$allow_nft $allow_ipv4 $allow_output_ping    $command_iptables_nft -A OUTPUT \
-p icmp --icmp-type echo-request -j ACCEPT \
-m comment --comment "icmp request" &> /dev/null
####
####
$allow_nft $allow_ipv4 $allow_input_ping  $command_iptables_nft -A OUTPUT \
-p icmp --icmp-type echo-reply -j ACCEPT \
-m comment --comment "icmp reply" &> /dev/null
####
####
$allow_nft $allow_ipv4 $allow_output_uid $command_iptables_nft   -A OUTPUT \
-m owner --uid-owner $config_output_uid -j ACCEPT \
-m comment --comment "status uid" &> /dev/null
####
####
$allow_nft $allow_ipv4 $allow_output_gid $command_iptables_nft   -A OUTPUT \
-m owner --gid-owner $config_output_gid -j ACCEPT \
-m comment --comment "status gid" &> /dev/null
####
####
for one_protocol in $(echo $config_others_protocols | $command_sed 's/,/ /g') ;
do $allow_nft $allow_ipv4 $allow_others_protocols      $command_iptables_nft -A OUTPUT \
-p $one_protocol -j ACCEPT \
-m comment --comment "other protocols" &> /dev/null
done
####
####
########## english: ipv6 filter nft rules input and output for ping, uid, gid and protocols
########## spanish: ipv6 filtros nft relgas de entrada y salida para ping, uid, gid y protocolos
####
####
#### ipv6 filter nft rules input
#### ipv6 filtros nft reglas d entrada
####
####
$allow_nft $allow_ipv6 $allow_output_ping      $command_ip6tables_nft -A INPUT \
-p icmpv6 --icmpv6-type echo-reply -j ACCEPT \
-m comment --comment "icmp reply" &> /dev/null
####
####
$allow_nft $allow_ipv6 $allow_input_ping    $command_ip6tables_nft -A INPUT \
-p icmpv6 --icmpv6-type echo-request -j ACCEPT \
-m comment --comment "imcp request" &> /dev/null
####
####
$allow_nft $allow_ipv6 $config_uid_gid $command_ip6tables_nft -A INPUT \
-m state --state related,established -j ACCEPT \
-m comment --comment "status uid-gid" &> /dev/null
####
####
$allow_nft $allow_ipv6 $command_ip6tables_nft -A INPUT \
-p ipv6-icmp -j ACCEPT \
-m comment --comment "icmp nexthop" &> /dev/null
####
####
for one_protocol in $(echo $config_others_protocols | $command_sed 's/,/ /g') ;
do $allow_nft $allow_ipv6 $allow_others_protocols      $command_ip6tables_nft -A INPUT \
-p $one_protocol -j ACCEPT \
-m comment --comment "other protocols" &> /dev/null
done
####
####
#### english: ipv6 filter nft rules output
#### spanish: ipv6 filtros nft reglas de salida
####
####
$allow_nft $allow_ipv6 $allow_output_ping      $command_ip6tables_nft -A OUTPUT \
-p icmpv6 --icmpv6-type echo-request -j ACCEPT \
-m comment --comment "icmp request" &> /dev/null
####
####
$allow_nft $allow_ipv6 $allow_input_ping    $command_ip6tables_nft -A OUTPUT \
-p icmpv6 --icmpv6-type echo-reply -j ACCEPT \
-m comment --comment "icmp reply" &> /dev/null
####
####
$allow_nft $allow_ipv6 $allow_output_uid     $command_ip6tables_nft -A OUTPUT \
-m owner --uid-owner $config_output_uid -j ACCEPT \
-m comment --comment "status uid" &> /dev/null
####
####
$allow_nft $allow_ipv6 $allow_output_gid     $command_ip6tables_nft -A OUTPUT \
-m owner --gid-owner $config_output_gid -j ACCEPT \
-m comment --comment "status gid" &> /dev/null
####
####
$allow_nft $allow_ipv6 $command_ip6tables_nft -A OUTPUT -p ipv6-icmp -j ACCEPT \
-m comment --comment "icmp nexthop" &> /dev/null
####
####
for one_protocol in $(echo $config_others_protocols | $command_sed 's/,/ /g') ;
do $allow_nft $allow_ipv6 $allow_others_protocols      $command_ip6tables_nft -A OUTPUT \
-p $one_protocol -j ACCEPT \
-m comment --comment "other protocols" &> /dev/null
done
####
####
########################################## english: nat for ipv4 and ipv6
########################################## spanish: nat para ipv4 y ipv6
####
####
#### english: nat DELETED
#### spanish: borrado nat
####
####
#### $command_iptables_nft -t nat -F
#### $command_iptables_legacy -t nat -F
#### $command_ip6tables_nft -t nat -F
#### $command_ip6tables_legacy -t nat -F
####
####
#### english: do masquerade nat ip4 and ip6 ALLOW GATEWAY
#### spanish: hace nat masquerade ip4 y ip6 PERMITIR GATEWAY
####
####
$allow_nft    $allow_ipv4    $allow_gateway_ip4 $command_iptables_nft -t nat \
-A POSTROUTING -j MASQUERADE \
-m comment --comment "ip gateway" &>/dev/null
$allow_legacy $allow_ipv4 $allow_gateway_ip4 $command_iptables_legacy -t nat \
-A POSTROUTING -j MASQUERADE \
-m comment --comment "ip gateway" &>/dev/null
####
####
$allow_nft $allow_ipv6 $allow_gateway_ip6 $command_ip6tables_nft -t nat \
-A POSTROUTING -j MASQUERADE \
-m comment --comment "ip gateway" &>/dev/null
$allow_legacy $allow_ipv6 $allow_gateway_ip6 $command_ip6tables_legacy -t nat \
-A POSTROUTING -j MASQUERADE \
-m comment --comment "ip gateway" &>/dev/null
####
####
$allow_nft $allow_ipv4    $allow_gateway_ip4 $command_iptables_nft -t nat \
-A PREROUTING -j ACCEPT \
-m comment --comment "ip gateway"  &>/dev/null
$allow_legacy $allow_ipv4     $allow_gateway_ip4 $command_iptables_legacy -t nat \
-A PREROUTING -j ACCEPT \
-m comment --comment "ip gateway" &>/dev/null
####
####
$allow_nft $allow_ipv6 $allow_gateway_ip6 $command_ip6tables_nft -t nat \
-A PREROUTING -j ACCEPT \
-m comment --comment "ip gateway" &>/dev/null
$allow_legacy $allow_ipv6 $allow_gateway_ip6 $command_ip6tables_legacy -t nat \
-A PREROUTING -j ACCEPT \
-m comment --comment "ip gatway" &>/dev/null
####
####
####
####
#### english: do DMZ nat ip4 and ip6 ALLOW GATEWAY SERVER IN LAN
#### spanish: hace nat DMZ ip4 y ip6 PERMITIR GATEWAY SERVER IN LAN
####
####
$allow_nft    $allow_ipv4    $allow_dmz_ip4 $command_iptables_nft -t nat \
-A PREROUTING -j DNAT --to-destination $config_dmz_ip4 \
-m comment --comment "ip dmz" &>/dev/null
$allow_legacy $allow_ipv4    $allow_dmz_ip4 $command_iptables_legacy -t nat \
-A PREROUTING -j DNAT --to-destination $config_dmz_ip4 \
-m comment --comment "ip dmz" &>/dev/null
####
####
$allow_nft $allow_ipv6    $allow_dmz_ip6 $command_ip6tables_nft -t nat \
-A PREROUTING -j DNAT --to-destination $config_dmz_ip6 \
-m comment --comment "ip dmz" &>/dev/null
$allow_legacy $allow_ipv6 $allow_dmz_ip6 $command_ip6tables_legacy -t nat \
-A PERROUTING -j DNAT --to-destination $config_dmz_ip6 \
-m comment --comment "ip dmz" &>/dev/null
####
####
######################################## english: iptables ipv4 and ipv6 with forward rules ALLOW FORWARD
######################################## spanish: iptables ipv4 y ipv6 con reglas de reenvio PERMITIR FORWARD
####
####
#### english: deactive for default with forward or without forward
#### spanish: desactiva por defecto con reenvio o sin reenvio
####
####
$command_sysctl -w net.ipv4.conf.all.forwarding=0 &> /dev/null
$command_sysctl -w net.ipv6.conf.all.forwarding=0 &> /dev/null
####
####
####   Active when there is forward
$ipv4 $allow_forward $command_sysctl -w net.ipv4.conf.all.forwarding=1 &> /dev/null
$ipv6 $allow_forward $command_sysctl -w net.ipv6.conf.all.forwarding=1 &> /dev/null
####
####
####   ipv4 filter legacy rules forward
$allow_legacy $allow_forward_ip4 $command_iptables_legacy -A FORWARD -j ACCEPT &> /dev/null
####
####
####   ipv6 filter legacy rules forward
$allow_legacy $allow_forward_ip6 $command_ip6tables_legacy -A FORWARD -j ACCEPT &> /dev/null
####
####
####   ipv4 filter nft rules forward
$allow_nft $allow_forward_ip4 $command_iptables_nft -A FORWARD -j ACCEPT &> /dev/null
####
####
####   ipv6 filter nft rules forward
$allow_nft $allow_forward_ip6 $command_ip6tables_nft -A FORWARD -j ACCEPT &> /dev/null
####
####
#######################################       iptables ipv4 and ipv6 closed with drop input, and drop forward, and drop output rules
#######################################       iptables ipv4 y ipv6 cierran la entrada, reemvio y salida con reglas de dropeo
####
####
#### ipv4 drop rules iptables-legacy
$allow_legacy $command_iptables_legacy -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy $command_iptables_legacy -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy $command_iptables_legacy -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
####
####
#### ipv6 drop rules iptables-legacy
$allow_legacy $command_ip6tables_legacy -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy $command_ip6tables_legacy -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_legacy $command_ip6tables_legacy -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
####
####
#### ipv4 drop rules iptables-nft
$allow_nft $command_iptables_nft -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft $command_iptables_nft -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft $command_iptables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
####
#### ipv6 drop rules iptables-nft
$allow_nft $command_ip6tables_nft -A INPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft $command_ip6tables_nft -A OUTPUT -j DROP \
-m comment --comment "close" &> /dev/null
$allow_nft $command_ip6tables_nft -A FORWARD -j DROP \
-m comment --comment "close" &> /dev/null
####
####
########################################       english: iptables ipv4 and ipv6 with variable input_all
########################################       english: iptables ipv4 y ipv6 con variable input_all
####
####
#### english: nft INPUT deleted
#### spanish: nft INPUT borradas
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $command_iptables_nft -t filter -F INPUT  &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $command_ip6tables_nft -t filter -F INPUT  &> /dev/null
####
####
#### english: legacy INPUT deleted
#### spanish: legacy INPUT borradas
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $command_iptables_legacy -t filter -F INPUT  &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $command_ip6tables_legacy -t filter -F INPUT  &> /dev/null
####
####
#### english: nft INPUT 127.0.0.1 accept
#### spanish: nft INPUT ::1 acepta
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $command_iptables_nft -t filter -A INPUT \
-s 127.0.0.1 -d 127.0.0.1 -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $command_ip6tables_nft -t filter -A INPUT \
-s ::1 -d ::1 -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### english: legacy INPUT 127.0.0.1 accept
#### spanish: legacy INPUT ::1 acepta
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $command_iptables_legacy -t filter -A INPUT \
-s 127.0.0.1 -d 127.0.0.1 -j ACCEPT \
-m comment --comment "close" &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $command_ip6tables_legacy -t filter -A INPUT \
-s ::1 -d ::1 -j ACCEPT \
-m comment --comment "close" &> /dev/null
####
####
#### english: legacy4 INPUT  limit bandwidth
#### spanish: legacy6 INPUT limita ancho de banda
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $allow_input_bandwidth iptables-legacy -A  INPUT \
-m hashlimit --hashlimit-above "$config_input_bandwidth"kb/sec --hashlimit-name maxinput  -j DROP \
-m comment --comment "input-bandwidth kb/s" &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $allow_input_bandwidth ip6tables-legacy -A  INPUT \
-m hashlimit --hashlimit-above "$config_input_bandwidth"kb/sec --hashlimit-name maxinput  -j DROP \
-m comment --comment "input-bandwidth kb/s" &> /dev/null
####
####
#### english: nft4 INPUT limit bandwidth
#### spanish: nft6 INPUT limita ancho de banda
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $allow_input_bandwidth iptables-nft -A  INPUT \
-m hashlimit --hashlimit-above "$config_input_bandwidth"kb/sec --hashlimit-name maxinput  -j DROP \
-m comment --comment "input-bandwidth kb/s" &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $allow_input_bandwidth ip6tables-nft -A  INPUT \
-m hashlimit --hashlimit-above "$config_input_bandwidth"kb/sec --hashlimit-name maxinput  -j DROP \
-m comment --comment "input-bandwidth kb/s" &> /dev/null
####
####
#### english: ipv4  limit conections numbers
#### spanish: ipv4  limita numero de conexiones
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $allow_input_maxconnect  $command_iptables_legacy -A INPUT \
-m connlimit --connlimit-above $config_input_maxconnect  -j DROP \
-m comment --comment "input maxconnect"  &> /dev/null
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $allow_input_maxconnect $command_iptables_nft   -A INPUT \
-m connlimit --connlimit-above $config_input_maxconnect       -j DROP \
-m comment --comment "input maxconnect"  &> /dev/null
####
####
#### english: ipv6 limit conections numbers
#### spanish: ipv6 limita numero de conexiones
####
####
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $allow_input_maxconnect  $command_ip6tables_legacy -A INPUT \
-m connlimit --connlimit-above $config_input_maxconnect  -j DROP \
-m comment --comment "input maxconnect"  &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $allow_input_maxconnect $command_ip6tables_nft   -A INPUT \
-m connlimit --connlimit-above $config_input_maxconnect       -j DROP \
-m comment --comment "input maxconnect"  &> /dev/null
####
####
#### english: nft INPUT ACCEPT all or input_state
#### spanish: nft INPUT acepta todo o estado de entrada
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $command_iptables_nft -t filter -A INPUT \
$config_input_state -j ACCEPT \
-m comment --comment "input state"  &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $command_ip6tables_nft -t filter -A INPUT \
$config_input_state -j ACCEPT \
-m comment --comment "input state"  &> /dev/null
####
####
#### english: legacy INPUT ACCEPT all or input_state
#### spanish: entrada acepta todo o estado de entrada
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $command_iptables_legacy -t filter -A INPUT \
$config_input_state -j ACCEPT \
-m comment --comment "input state"  &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $command_ip6tables_legacy -t filter -A INPUT \
$config_input_state -j ACCEPT \
-m comment --comment "input state"  &> /dev/null
####
####
#### english: nft INPUT DROP all
#### spanish: nft INPUT deniega todo
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $allow_ipv4 $command_iptables_nft -t filter -A INPUT \
-j DROP \
-m comment --comment "close" &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $command_ip6tables_nft -t filter -A INPUT \
-j DROP \
-m comment --comment "close" &> /dev/null
####
####
#### english: legacy INPUT DROP all
#### spanish: legacy INPUT deniega todo
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $command_iptables_legacy -t filter -A INPUT \
-j DROP \
-m comment --comment "close" &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $command_ip6tables_legacy -t filter -A INPUT \
-j DROP \
-m comment --comment "close" &> /dev/null
####
####
####
####
########################################       english: iptables ipv4 and ipv6 with variable output_all
########################################       english: iptables ipv4 y ipv6 con variable output_all
####
####
#### english: nft OUTPUT deleted
#### spanish: nft OUTPUT borradas
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $command_iptables_nft -t filter -F OUTPUT  &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $command_ip6tables_nft -t filter -F OUTPUT  &> /dev/null
####
####
#### english: legacy OUTPUT deleted
#### spanish: legacy OUTPUT borradas
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $command_iptables_legacy -t filter -F OUTPUT  &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $command_ip6tables_legacy -t filter -F OUTPUT  &> /dev/null
####
####
#### english: nft OUTPUT 127.0.0.1 accept
#### spanish: nft OUTPUT ::1 acepta
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $command_iptables_nft -t filter -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1 -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $command_ip6tables_nft -t filter -A OUTPUT \
-s ::1 -d ::1 -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### english: legacy OUTPUT 127.0.0.1 accept
#### spanish: legacy OUTPUT ::1 acepta
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $command_iptables_legacy -t filter -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1 -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $command_ip6tables_legacy -t filter -A OUTPUT \
-s ::1 -d ::1 -j ACCEPT \
-m comment --comment "localhost" &> /dev/null
####
####
#### english: legacy4 OUTPUT  limit bandwidth
#### spanish: legacy6 OUTPUT limita ancho de banda
####
#### 
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $allow_output_bandwidth iptables-legacy -A OUTPUT \
-m hashlimit --hashlimit-above "$config_output_bandwidth"kb/sec --hashlimit-name maxoutput  -j DROP \
-m comment --comment "output-bandwidth kb/s" &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $allow_output_bandwidth ip6tables-legacy -A  OUTPUT \
-m hashlimit --hashlimit-above "$config_output_bandwidth"kb/sec --hashlimit-name maxoutput  -j DROP \
-m comment --comment "output-bandwidth kb/s" &> /dev/null
####
####
#### english: nft4 OUTPUT limit bandwidth
#### spanish: nft6 OUTPUT limita ancho de banda
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $allow_output_bandwidth iptables-nft -A OUTPUT \
-m hashlimit --hashlimit-above "$config_output_bandwidth"kb/sec --hashlimit-name maxoutput  -j DROP \
-m comment --comment "output-bandwidth kb/s" &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $allow_output_bandwidth ip6tables-nft -A OUTPUT \
-m hashlimit --hashlimit-above "$config_output_bandwidth"kb/sec --hashlimit-name maxoutput  -j DROP \
-m comment --comment "output-bandwidth kb/s" &> /dev/null
####
####
#### english: ipv4  limit conections numbers
#### spanish: ipv4  limita numero de conexiones
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $allow_output_maxconnect  $command_iptables_legacy -A OUTPUT \
-m connlimit --connlimit-above $config_output_maxconnect  -j DROP \
-m comment --comment "output maxconnect" &> /dev/null
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $allow_output_maxconnect $command_iptables_nft   -A OUTPUT \
-m connlimit --connlimit-above $config_output_maxconnect  -j DROP \
-m comment --comment "output maxconnect" &> /dev/null
####
####
#### english: ipv6 limit conections numbers
#### spanish: ipv6 limita numero de conexiones
####
####
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $allow_output_maxconnect  $command_ip6tables_legacy -A OUTPUT \
-m connlimit --connlimit-above $config_output_maxconnect  -j DROP \
-m comment --comment "output maxconnect" &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $allow_output_maxconnect $command_ip6tables_nft   -A OUTPUT \
-m connlimit --connlimit-above $config_output_maxconnect  -j DROP \
-m comment --comment "output maxconnect" &> /dev/null
####
####
#### english: nft OUTPUT ACCEPT all or input_state
#### spanish: nft OUTPUT acepta todo o estado de entrada
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $command_iptables_nft -t filter -A OUTPUT \
$input_state -j ACCEPT \
-m comment --comment "input state" &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $command_ip6tables_nft -t filter -A OUTPUT \
$input_state -j ACCEPT \
-m comment --comment "input state" &> /dev/null
####
####
#### english: legacy INPUT ACCEPT all or input_state
#### spanish: entrada acepta todo o estado de entrada
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $command_iptables_legacy -t filter  -A OUTPUT \
$input_state -j ACCEPT \
-m comment --comment "input state" &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $command_ip6tables_legacy -t filter -A OUTPUT \
$input_state -j ACCEPT \
-m comment --comment "input state" &> /dev/null
####
####
#### english: nft INPUT DROP all
#### spanish: nft INPUT deniega todo
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $command_iptables_nft -t filter -A OUTPUT  -j DROP \
-m comment --comment "close" &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $command_ip6tables_nft -t filter -A OUTPUT  -j DROP \
-m comment --comment "close" &> /dev/null
####
####
#### english: legacy INPUT DROP all
#### spanish: legacy INPUT deniega todo
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $command_iptables_legacy  -t filter -A OUTPUT  -j DROP \
-m comment --comment "close" &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $command_ip6tables_legacy -t filter -A OUTPUT  -j DROP \
-m comment --comment "close" &> /dev/null
####
####
########################################       english: show text when active custom rules
########################################       spanish: muestra texto cuando activas las custom reglas
####
####  
####
if [ -f "$directory_config/$second_option" ]; then $nada
echo "  [  ok  ] [ Launched: firewall ] [ Type: $type_firewall ] [ Name: $name_firewall ]"
exit ; else $nada ; fi
####
####
#### :rutina-final-code-wizard:
#######################
####     left script
#######################
####
####
#######################         english: End of script
#######################         spanish: Fin del script
####    
####
####    ### Git mini tutorial: with fwiptables.
####
####
####    # Download repository: tree methods with clone/pull/fetch https:// or ssh://
####
####    First time, download repository to folder user            :  git clone https://git.code.sf.net/p/f-iptables/code
####    Download updates from repository to folder user           :  git pull  https://f-iptables@git.code.sf.net/p/f-iptables/code
####    Recover repository from server repository to folder user  :  git fetch https://f-iptables@git.code.sf.net/p/f-iptables/code
####
####    # upload repository: update commit and push
####
####    Update files from local repository                        :  git commit -a 
####    Upload files to repository from local repository          :  git push ssh://f-iptables@git.code.sf.net/p/f-iptables/code
####
####
####    # Create repository local: with folder /var/git/repository.localhost
####
####    mkdir /var/git/repository.localhost
####    cd /var/git/repository.localhost
####    git init --bare
####    chmod user /var/git/repository.localhost -R
####    service ssh start or systemctl restart ssh
####
####
#######################
#######################
####
####
exit
