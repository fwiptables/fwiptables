#!/bin/bash
# this program is copyleft
#
# the comments are in english language and spanish language
# english: System variables, iptables path:
# spanish: Variables del sistema, ruta de iptables:
export ruta="/usr/sbin"; export yes="" no="echo off" ;
export fprogram="Fran iptables" ; export fver="1.23" ;
export web="https://sourceforge.net/projects/f-iptables/files/latest/download" ;
export tenue="tput dim" brillo="tput bold" normal="tput sgr0" ;
###################### english: user variables to modify with $yes or $no
###################### spanish: variables de usuario para modificar con $yes o $no
export hayvpn="$no"
# english: hayvpn: $yes to allow exceptional host and $no to drop exceptional host
# spanish: hayvpn: $yes para permitir hosts excepcionales y $no para evitar permitirlos
export hayping="$no"
# english: hayping: $yes to allow pings to others and $no to drop pings to others
# spanish: hayping: $yes para permitir hacer ping a otros y $no para evitar permitirlo
export haylogserver="$no"
# english: haylogserver: $yes to tcp log and $no to do not log tcp
# spanish: haylogserver: $yes para logear tcp y $no para no logear tcp
######################	english: User variables to modify add with "," and join ranges with ":"
######################  spanish: Variables de usuario para aÃ±adir con "," y poner rangos con ":"
export vpn="baldras.wesnoth.org,wesnoth.org"
# english: excepciones: to allow a host excepcitonal without firewall
# spanish: excecciones: host excepcionales que saltan el firewall
export logserver=ssh
# english: logserver:  the tcp ports to log
# spanish: logserver: los puertos tcp para logear
export redserver=0/0
# english: redserver: the net to server
# spanish: redserver: la red cual servidor
export redcliente=0/0
# english: redcliente: the net to client
# spanish: redcliente  la red cual cliente
export servidortcp=discard
# english: servidortcp: tcp ports to server
# spanish: servidortcp: puertos tcp para servir
export servidorudp=discard
# english: servidorudp: udp ports to server
# spanish: servidorudp: puertos udp para servir
export clienteudp=domain,domain-s,ntp,bootpc,bootps
# english: clienteudp: udp ports to client
# spanish: clienteudp: puertos udp para ser cliente
export clientetcp=domain,domain-s,http,https
# english: clientetcp: tcp ports to client
# spanish: clientetcp: puertos tcp para ser cliente
##############################		english: End from user variables file, overwriter initial values       |||||
##############################          spanish: Fin de archivo de variables, sobre escribe valores iniciales  !!!!!
##
##
##
##
##
##
##
##
##############################       english: are you root (uid 0) ?
##############################       spanish: eres admnistrador (identificador 0) ?
if [ "$(id -u)" = "0" ]; then echo -n;
else  echo "  ####################### f-iptables need to be root to work" ; echo ;
echo "  the $fprogram $fver "
echo "  ##########################################"
echo
echo "  ####################### The iptables help: "
echo ""
echo "  The First Option  (To configure iptables):  reconfig or offline or client or server or allpermisive or eraserules"
echo "  The First Option        (To show sockets):  list or iproute or sockets"
echo "  The Second option              (Optional):  configs in folder /etc/f-iptables/ : " $(ls /etc/f-iptables/)
echo "  For Example"
echo "                              (Example 1):  lauch:   $0 list                 /for list iptables rules"
echo "                              (Example 2):  launch:  $0 client web1.cfg      /for config iptables like client web"
echo ""
echo "Notes: $fprogram version $fver Wich only works with the ports selected in ipv4 in the config file choosed, blocking ipv6"
echo; echo; exit ; fi
##############################       english: create the default.cfg file when it do not exists
##############################       spanish: crea el archivo default.cfg cuando no existe
if [ -d /etc/f-iptables ]; then echo -n ;
else rm /etc/f-iptables; mkdir /etc/f-iptables ;fi
if [ -f /etc/f-iptables/default.cfg ]; then echo -n ;
else cat $0 | head -50 > /etc/f-iptables/default.cfg; fi
if [ -f /etc/f-iptables/web1.cfg ]; then echo -n ;
else echo export clienteudp=domain,domain-s,ntp,bootpc,bootps clientetcp=domain,domain-s,http,https > /etc/f-iptables/web1.cfg; fi
if [ -f /etc/f-iptables/games1.cfg ]; then echo -n ;
else echo export clienteudp=domain,domain-s,ntp,bootpc,bootps,14000:44000 clientetcp=domain,domain-s,http,https,14998:15002  > /etc/f-iptables/games1.cfg; fi
if [ -f /etc/f-iptables/server1.cfg ]; then echo -n ;
else echo export clienteudp=domain,domain-s,ntp,bootpc,bootps clientetcp=domain,domain-s,http,https haylogserver= logserver=ssh servidortcp=ssh,http,https > /etc/f-iptables/server1.cfg; fi
if [ -f /etc/f-iptables/vpn1.cfg ]; then echo -n ;
else echo export clienteudp=domain,domain-s,ntp,bootpc,bootps clientetcp=domain,domain-s,http,https  hayvpn= vpn=baldras.wesnoth.org,wesnoth.org > /etc/f-iptables/vpn1.cfg ; fi
###############################       english: overwrite system varibles for files variables configured
###############################       spanish: sobreescribe las variables por la de los archivos de configuracion
export firewall=$1 variable=$2
if [ -f /etc/f-iptables/$variable ]; then source /etc/f-iptables/$variable;
else source /etc/f-iptables/default.cfg; fi
#############################        english: system script, the first options
#############################        spanish: script the sistema, primeras opciones
if [ "$firewall" = "offline" ]; then echo FIREWALL OFFLINE;
export activarservidor="$no" activarcliente="$no" mojado="$no";
elif [ "$firewall" = "client" ];then echo FIREWALL CLIENT;
export activarservidor="$no" activarcliente="" mojado="$no";
elif [ "$firewall" = "server" ]; then echo FIREWALL CLIENT AND SERVER;
export activarservidor=""  activarcliente="" mojado="$no";
elif [ "$firewall" = "allpermisive" ]; then echo FIREWALL ALLPERMISIVE;
export activarservidor="$no" activarcliente="$no" mojado="";
elif [ "$firewall" = "iproute" ]; then $brillo ; echo ;
echo; ip route ls; echo; echo "Notes: route socket in  Fran iptables version $fver "; echo; exit
elif [ "$firewall" = "sockets" ]; then $brillo;  echo;
echo; $brillo; echo "     SOCKETS LIST : THE $fprogram $fver FIREWALL configure IPV4 AND blocking TO IPV6"; $normal ;
echo "  ################################################################################"
echo; echo "     THE IPV6 SOCKETS:" ; ss -a6 ; echo ;  echo "     THE IPV4 SOCKETS:" ; ss -a4 ;
echo; echo "Notes: socket list in $program version $fver "; exit
elif [ "$firewall" = "reconfig" ]; then clear;
rm /etc/f-iptables/default.cfg /etc/f-iptables/*1.cfg; $0;
echo; echo "   Updating default configurations /etc/f-iptables/files1.cfg in $fprogram version $fver "; echo; echo; exit
elif [ "$firewall" = "eraserules" ]; then echo -n;
$ruta/iptables-nft -t filter -F ; $ruta/ip6tables-nft -t filter  -F ; $ruta/iptables-legacy -t filter -F ; $ruta/ip6tables-legacy -t filter -F ;
echo; echo; echo " Deleting all rules from ipv4 and ipv6 from iptables"; echo; echo; exit
############################       english: system script, the list option
############################       spanish: script de sistema, la opcion lista
elif [ "$firewall" = "list" ]; then echo -n
$brillo ; echo "Fran iptables for legacy/netfilter firewall Linux TO ipv4 and BLOCKING ipv6"
$normal
$comprueba echo "  ####################### The iptables-legacy:"
$comprueba $ruta/iptables-legacy -v -L INPUT
$comprueba $ruta/iptables-legacy -v -L OUTPUT
$comprueba echo "  ########################## The iptables-nft:"
$comprueba $ruta/iptables-nft -v -L INPUT
$comprueba $ruta/iptables-nft -v -L OUTPUT
exit
############################       english: the longhelp option
############################       spanish: la opcion de larga ayuda
elif [ "$firewall" = "longhelp" ]; then echo; echo; $normal
echo "  the $fprogram version $fver"
echo "  #############################################"
echo
echo "  ######################    The iptables help: "
echo ""
echo "  The First Option  (To configure iptables):  reconfig or offline or client or server or allpermisive or eraserules"
echo "  The First Option        (To show sockets):  list or iproute or sockets or longhelp"
echo "  The Second option              (Optional):  configs in folder /etc/f-iptables/ : " $(ls /etc/f-iptables/)
echo "  For Example"
echo "                              (Example 1):  lauch:   $0 list                 /for list iptables rules"
echo "                              (Example 2):  launch:  $0 client web1.cfg      /for config iptables like client web"
echo ""
echo "Notes: $program version $fver  Wich only works with the ports selected in ipv4 in the config file choosed, blocking ipv6"
echo; echo;
echo "  ######################    The first option:"
echo ""
echo "     reconfig: to rewrite the default configs, default.cfg and files1.cfg"
echo "      offline: firewall to disconected for all servers and clients"
echo "       client: configure the firewall to be a internet client"
echo "       server: configure the firewall to be a internet client and internet server"
echo " allpermisive: firewall very very permisive"
echo "   eraserules: delete the iptables rules in ipv4 and ipv6"
echo "         list: list iptables rules"
echo "      iproute: show ip route tables"
echo "      sockets: show netsockets"
echo "     longhelp: this help"
echo ""
echo "  #####################     The second option: (optional):"
echo ""
echo "    when you launch $0 with client or server, it takes for default  /etc/f-iptables/default.cfg"
echo "    default.cfg has all variables para configure that you need to launch the client or the server"
echo "    with somes variables can be sufficent to create a new file cfg to client or to server"
echo ""
echo "  #####################     The examples:"
echo ""
echo " $0 client games1.cfg  :  firewall to allow connecto to web and games"
echo " $0 server server1.cfg :  firewall to server somes services"
echo " $0 list               :  list iptables rules"
echo " $0 longhelp           :  show this help"
echo ""
echo " ######################     Examples of variables to the configs files:"
echo "" ; cat $0 | head -50 | grep -iv ^# | tail -11 | sed 's/export/  export/g'
echo ""
echo "  #####################     license:"
echo ""
echo " Download the latest version $fprogram from sourceforge: $web"
echo " This script is with copyleft licence gpl, it is free, with no warranty"
echo ""
exit
############################       english: The default option, the help option
############################	   spanish: La opcion por defecto, la opcion de ayuda
else echo; $brillo
echo "  the $fprogram script $fver"
echo "  ###########################################"
echo
echo "  ####################### The iptables help: "
echo ""
echo "  The First Option  (To configure iptables):  reconfig or offline or client or server or allpermisive or eraserules"
echo "  The First Option        (To show sockets):  list or iproute or sockets or longhelp"
echo "  The Second option              (Optional):  configs in folder /etc/f-iptables/ : " $(ls /etc/f-iptables/)
echo "  For Example"
echo "                              (Example 1):  lauch:   $0 list                 /for list iptables rules"
echo "                              (Example 2):  launch:  $0 client web1.cfg      /for config iptables like client web"
echo ""
echo "Notes: $fprogram version $fver  Wich only works with the ports selected in ipv4 in the config file choosed, blocking ipv6"
echo; $normal; exit 0; fi
###########################        english: script information to when actived
###########################        spanish: informacion del script cuando se activa
echo
echo configuring iptables variables
echo variables actives
echo
############################       english: iptables rules
############################       spanish: reglas de iptables
echo Config iptables-legacy
 $ruta/iptables-legacy -t filter -F
 $ruta/iptables-legacy -t nat -F
 $ruta/iptables-legacy -t mangle -F
 $ruta/ip6tables-legacy -t filter -F
 $ruta/ip6tables-legacy -t nat -F
 $ruta/ip6tables-legacy -t mangle -F
 $ruta/ip6tables-legacy -A INPUT -j DROP
 $ruta/ip6tables-legacy -A OUTPUT -j DROP
 $ruta/ip6tables-legacy -A FORWARD -j DROP
 $ruta/iptables-legacy -A INPUT  -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT > /dev/null
$haylogserver  $ruta/iptables-legacy -A INPUT -p tcp -m multiport --dports $logserver -j LOG > /dev/null
$hayvpn  $ruta/iptables-legacy -A INPUT -s $vpn -j ACCEPT > /dev/null
$activarservidor  $ruta/iptables-legacy -A INPUT -p udp -m multiport --dports $servidorudp -s $redserver -d $redserver -j ACCEPT > /dev/null
$activarservidor  $ruta/iptables-legacy -A INPUT -p tcp -m multiport --dports $servidortcp -s $redserver -d $redserver -j ACCEPT > /dev/null
$activarcliente  $ruta/iptables-legacy -A INPUT -p udp -m multiport --sports $clienteudp -m state --state established -s $redcliente -d $redcliente -j ACCEPT > /dev/null
$activarcliente  $ruta/iptables-legacy -A INPUT -p tcp -m multiport --sports $clientetcp -m state --state established -s $redcliente -d $redcliente -j ACCEPT > /dev/null
$hayping  $ruta/iptables-legacy -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT > /dev/null
 $ruta/iptables-legacy -A INPUT -j DROP > /dev/null
 $ruta/iptables-legacy -A OUTPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT > /dev/null
$hayvpn  $ruta/iptables-legacy -A OUTPUT -d $vpn -j ACCEPT > /dev/null
$activarservidor  $ruta/iptables-legacy -A OUTPUT -p udp -m multiport --sports $servidorudp -s $redserver -d $redserver -j ACCEPT > /dev/null
$activarservidor  $ruta/iptables-legacy -A OUTPUT -p tcp -m multiport --sports $servidortcp -s $redserver -d $redserver -j ACCEPT > /dev/null
$activarcliente   $ruta/iptables-legacy -A OUTPUT -p udp -m multiport --dports $clienteudp -s $redcliente -d $redcliente -j ACCEPT > /dev/null
$activarcliente  $ruta/iptables-legacy -A OUTPUT -p tcp -m multiport --dports $clientetcp -s $redcliente -d $redcliente -j ACCEPT > /dev/null
$hayping  $ruta/iptables-legacy -A OUTPUT -p icmp --icmp-type echo-request -j ACCEPT > /dev/null
 $ruta/iptables-legacy -A OUTPUT -j DROP
 $ruta/iptables-legacy -A FORWARD  -j DROP
echo iptables-legacy active
echo
echo Config iptables-nft
 $ruta/iptables-nft -t filter -F
 $ruta/iptables-nft -t nat -F
 $ruta/iptables-nft -t mangle -F
 $ruta/ip6tables-nft -t filter -F
 $ruta/ip6tables-nft -t nat -F
 $ruta/ip6tables-nft -t mangle -F
 $ruta/ip6tables-nft -A INPUT -j DROP
 $ruta/ip6tables-nft -A OUTPUT -j DROP
 $ruta/ip6tables-nft -A FORWARD -j DROP
 $ruta/iptables-nft -A INPUT -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT > /dev/null
$haylogserver  $ruta/iptables-nft -A INPUT -p tcp -m multiport --dports $logserver -j LOG > /dev/null
$hayvpn  $ruta/iptables-nft -A INPUT -s $vpn -j ACCEPT > /dev/null
$activarservidor  $ruta/iptables-nft -A INPUT -p udp -m multiport --dports $servidorudp -s $redserver -d $redserver -j ACCEPT > /dev/null
$activarservidor  $ruta/iptables-nft -A INPUT -p tcp -m multiport --dports $servidortcp -s $redserver -d $redserver -j ACCEPT > /dev/null
$activarcliente  $ruta/iptables-nft -A INPUT -p udp -m multiport --sports $clienteudp -m state --state established -s $redcliente -d $redcliente -j ACCEPT > /dev/null
$activarcliente  $ruta/iptables-nft -A INPUT -p tcp -m multiport --sports $clientetcp -m state --state established -s $redcliente -d $redcliente -j ACCEPT > /dev/null
$hayping  $ruta/iptables-nft -A INPUT -p icmp --icmp-type echo-reply  -j ACCEPT > /dev/null
 $ruta/iptables-nft -A INPUT -j DROP > /dev/null
 $ruta/iptables-nft -A OUTPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT > /dev/null
$hayvpn  $ruta/iptables-nft -A OUTPUT -d $vpn -j ACCEPT > /dev/null
$activarservidor  $ruta/iptables-nft -A OUTPUT -p udp -m multiport --sports $servidorudp -s $redserver -d $redserver -j ACCEPT > /dev/null
$activarservidor  $ruta/iptables-nft -A OUTPUT -p tcp -m multiport --sports $servidortcp -s $redserver -d $redserver -j ACCEPT > /dev/null
$activarcliente  $ruta/iptables-nft -A OUTPUT -p udp -m multiport --dports $clienteudp -s $redcliente -d $redcliente -j ACCEPT > /dev/null
$activarcliente  $ruta/iptables-nft -A OUTPUT -p tcp -m multiport --dports $clientetcp -s $redcliente -d $redcliente -j ACCEPT > /dev/null
$hayping  $ruta/iptables-nft -A OUTPUT -p icmp --icmp-type echo-request  -j ACCEPT > /dev/null
 $ruta/iptables-nft -A OUTPUT -j DROP
 $ruta/iptables-nft -A FORWARD -j DROP
echo iptables-nft active
echo
$mojado  $ruta/iptables-legacy -F > /dev/null
$mojado  $ruta/iptables-legacy -A INPUT  -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT > /dev/null
$mojado  $ruta/iptables-legacy -A INPUT -m state --state established -j ACCEPT > /dev/null
$mojado  $ruta/iptables-legacy -A INPUT -j DROP > /dev/null
$mojado  $ruta/iptables-legacy -A OUTPUT -j ACCEPT > /dev/null
$mojado  $ruta/iptables-legacy -A FORWARD  -j DROP > /dev/null
$mojado  $ruta/iptables-nft -F > /dev/null
$mojado  $ruta/iptables-nft -A INPUT -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT > /dev/null
$mojado  $ruta/iptables-nft -A INPUT -m state --state established -j ACCEPT > /dev/null
$mojado  $ruta/iptables-nft -A INPUT -j DROP > /dev/null
$mojado  $ruta/iptables-nft -A OUTPUT -j ACCEPT > /dev/null
$mojado  $ruta/iptables-nft -A FORWARD -j DROP > /dev/null
#########################       english: when active rules
#########################       spanish: cuando activas las reglas
echo launched $0 $1
if [ -f /etc/f-iptables/$2 ]; then echo with the configuration: $2;
else echo with the configuration: default.cfg; fi
echo $fprogram version $fver
echo
$normal
# left script
#######################         english: End of script
#######################         spanish: fin del script
exit 0
