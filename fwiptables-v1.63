#!/bin/bash
####
####
####   #### english: necesary to find several PATH and auth xhost to root
####   #### spanish: necesario para encontrar varios PATH y autorizar xhost para root
####
####
####     #### english: whereis path     #### spanish: donde esta el path
directory_fiptables="/usr/bin" ;
####
####
####     #### english: program name     #### spanish: nombre de el programa
fiptables="fwiptables" ;
####
####
####     #### english: launch profile         #### spanish: lanza profile
if [ -f /etc/profile ] ; then . /etc/profile ; fi
####     #### english: launch completion      #### spanish: lanza autocompletar
if [ -f /etc/bash_completion.d/$fiptables ] ; then . /etc/bash_completion.d/$fiptables ; fi
####
####
####     #### english: add auth xhost for root    #### spanish: añade autorización xhost para root
####  #### code for add xhost to root
#### if [ "$(id -u)" = "0" ]; then
sudo -u "$(logname)" xhost +SI:localuser:root &> /dev/null
sudo -u "$(logname)" xhost +root@127.0.0.1 &> /dev/null
#### fi
####  ####
####
####
################################################   english: begin the script
################################################   spanish: empieza el script
####
####
####   license
####   english: This program has gpl license GPL v2, this program is copyleft, it is free.
####   spanish: Este programa tiene licencia GPL v2, este programa es copyleft, esto es libre.
####
####   comments
####   english: The comments are in english language and spanish language
####   spanish: Los comentarios estan en idioma ingles y en idioma español
####
####
################################################   english: basic system variables
################################################   spanish: las variables basicas del sistema
####
####
####        #### english: [the variables names and the path] #### spanish: [nombres de variables y rutas]
#### #### english: option for default    #### spanish: opcion por defecto
default_option="options"                 #### over fwiptables-for-default    #### default: full-options
#### #### english: option for default    #### spanish: opcion por defecto
allow_header="" ;                        #### over fwiptables-for-default    #### void or no
#### #### english: option for default    #### spanish: opcion por defecto
allow_question="" ;                      #### over fwiptables-for-default    #### void or no
#### #### english: void to autosave fwrecover or no #spanish: autoguardar fwrecover o no
autosave_fwrecover="" ;                  #### over fwiptables-for-default    #### choose: void or no
#### #### english: option for default    #### spanish: opcion por defecto
zero_dir="$(pwd)" ; zero_option="$0" ;                              
#### #### english: variables to launch   #### spanish: variables a lanzar
first_option="$(echo $1 | sed s/\\///g -)"  ;                       
#### #### english: variable without "/"  #### spanish: variable sin "/"
second_option="$(echo $2 | sed s/\\///g -)" ;                       
#### #### english: variable without "/"  #### spanish: variable sin "/"
third_option="$(echo $3 | sed s/\\///g -)"  ; 
#### #### english: variable without "/"  #### spanish: variable sin "/"
quarter_option="$(echo $4 | sed s/\\///g -)"  ; 
#### #### english: variable without "/"  #### spanish: variable sin "/"
genfiles="$0 regeneration-default"
#### #### english: whereis path          #### spanish: donde esta el path
directory_fiptables="/usr/bin" ;                                    
#### #### english: whereis path          #### spanish: donde esta el path
fdescription="One Script in bash for iptables firewall"             
#### #### english: program description   #### spanish: descripcion del programa
fprogram="Fran FireWall FWiptables Generator" ;                     
#### #### english: program name          #### spanish: nombre del porgrama
fversion="1.63" ;                                                   
#### #### english: program version       #### spanish: Version del programa
directory_config="/etc/fwiptables" ;                                
#### #### english: path to config files  #### spanish: archivos de configuracion
defaultcfg="$directory_config/default-full-english.cfg"             
#### #### english: path to config files  #### spanish: archivos de configuracion
defaultfullcfg_eng="$directory_config/default-full-english.cfg"     
#### #### english: path to config files  #### spanish: archivos de configuracion
defaultfullcfg_spa="$directory_config/default-full-spanish.cfg"     
#### #### english: path to config files  #### spanish: archivos de configuracion
defaultminicfg_eng="$directory_config/default-mini-english.cfg"     
#### #### english: path to config files  #### spanish: archivos de configuracion
defaultminicfg_spa="$directory_config/default-mini-spanish.cfg"     
#### #### english: path to config files  #### spanish: archivos de configuracion
directory_fwrecover="/etc/fwrecover" ;                              
#### #### english: path to save firewall #### spanish: ruta de firewall guardado
#### #### english: void to autosave fwrecover or no #spanish: autoguardar fwrecover o no
autosave_fwrecover="" ;                #### over fwiptables-for-default    #### choose: void or no
#### #### english: look  #### spanish: apariencia
cinco="#####" ; tab="    " ;  tabz="# _ _ _ _ _ _ _ "  ; rallica="_____"
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
cincuenta="##################################################" ;    
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
ralla="______________________"                                      
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
prehead_principal=" $cinco [ $fiptables ] [ $fversion ] [ $(date) ] $cinco"
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
head_principal="$prehead_principal [ $first_option ] $cinco" ;                
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
head_normal="$cinco [ Usage in $fiptables ] [ Use: $fiptables options ]"
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
header_lineal="$ralla   $ralla   $ralla"                           
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
footer_lineal="$ralla   $ralla   $ralla"                            
#### #### english: [characters to show] #### spanish: [caracteres a mostrar]
give_cover="$fiptables header $first_option $second_option $third_option"
forget_cover="$fiptables $second_option $third_option $quarter_option"
#### #### english: echo void            #### spanish: impresion vacia
nada="$(echo -n)" ; 
#### english: command default route ip  #### spanish: comando de ruta por defecto ip
which_ip="$(which ip | cut -d " " -f 1)"                                                
#### english: default route ipv4        #### english: routa por defecto ipv4
case "$which_ip" in "$NULL")default_route_cuatro="$cinco [ Route ip.v4 ] [ No ip command ]" ;;
*)default_route_cuatro="$cinco [ default route ip.v4 ] [ $("$which_ip" -4 route show | grep -i default | head -1) ]" ;; esac
#### english: default route ipv6 #### english: routa por defecto ipv6
case "$which_ip" in "$NULL")default_route_seis="$cinco [ Route ip.v4 ] [ No ip command ]" ;;
*)default_route_seis="$cinco [ default route ip.v6 ]   [ $("$which_ip" -6 route show | grep -i default | head -1) ]" ;; esac
####       #### english: zenity dimensions    #### spanish: dimensiones de zenity
####       #### english: zenity graphic redimension    
####       #### spanish: redimensiones graficas de zenity
graphic_dimension="--width=950 --height=650"   #### over fwiptables-for-default    #### default: "--width=950 --height=650"
####       #### english: close from graphicall with timeout in seconds #####
####       #### spanish: cierre desde graficos con retardo en segundos #####
close_timeout="1"
####       #### english: message to close graphicall with timeout in seconds #####
####       #### spanish: mensage de cierre para graficos con retardo en segundos #####
mensage_timeout="Closing gui menu in $close_timeout seconds"
####       #### english: zenity graphic automatic redimension    
####       #### spanish: redimensiones graficas automaticas de zenity
#### pantallatotal="$(xrandr | grep -- \* | tail -1 \
#### sed 's/x/\ /g' | awk '{print "--width="$1-150 " --height="$2-150}')"
#### case $($which xrandr) in "$NULL") ;; *) graphic_dimension=$pantallatotal ;; esac
####       #### english: autovariables        #### spanish: autovariables
config_option="no" ;     #  autoconfigure with second option is a valid file
launch_iptables="no" ;   #  autoconfigure with launch iptables rules
launch_offline="no" ;    #  autoconfigure with offline rules
launch_permisive="no" ;  #  autoconfigure with permisive rules
launch_easyrules="no" ;  #  autoconfigure with easyrules
launch_custom="no";      #  autoconfigure with custom rules
####       #### english: [download web link]  #### spanish: [descarga del enlace web]
fweb_main="https://sourceforge.net/projects/f-iptables/"
fweb_latest="https://sourceforge.net/projects/f-iptables/files/latest/download" ;
fweb_development="https://sourceforge.net/p/f-iptables/code/ci/master/tree/dev-fwiptables?format=raw" ;
fweb_newfiles="https://sourceforge.net/projects/f-iptables/files" ;
fweb_tree="https://sourceforge.net/p/f-iptables/code/ci/master/tree/" ;
fweb_git="https://git.code.sf.net/p/f-iptables/code f-iptables-code" ;
####       #### english: [Program license] #### spanish: [Licencia del programa]
flicense="Copyleft, without warranty, gnu license GPL v2."
license_gpl="https://sourceforge.net/p/f-iptables/code/ci/master/tree/LICENSE.txt?format=raw"
####
####
##############################       english: Update variables             ################################### 
##############################       spanish: Actualiza variables          ###################################
####
####
####     #### english: launch /etc/default/fwiptables for update variables
####     #### spanish: lanza /etc/default/fwiptables para actualizar variables
####
####
if [ -f /etc/default/fwiptables ] ; then . /etc/default/fwiptables ; fi
####
####
##############################     english: header_actual: update         ###################################
##############################     spanish: header_actual: actualizado    ###################################
####
####
####     #### english update option for default in header
####     #### spanish actualiza la opcion por defecto en la cabecera
####
####
head_default="$cinco [ Option for default: $default_option ] [ See: $fiptables default ]"
####
####
##############################       english: Notice Installer            ###################################
##############################       spanish: noticia de Instalador       ###################################
####
####
if [ "$first_option" != "install" ] && [ "$first_option" != "upgrade" ]; then
case "$zero_option" in
"$directory_fiptables/$fiptables") ;; "./$fiptables") ;; "$fiptables") ;;
*) echo "$cinco [to install / TYPE:] $zero_option install" ;;
esac; fi
####
####
##############################       alias for fwiptables       ##############################
##############################       apodos de fwiptables      ##############################
####
####
##############################       english: $NULL: fwiptables launch .. for default
##############################       spanish: $NULL: fwiptables lanza .. por defecto
####
####
############################       english: default: without other valid options
############################	   spanish: default: sin otra valida opcion
####
####
if [ "$first_option" = "$NULL" ] ; then  first_option="$default_option" ;  fi
####
####
############################## english -text: Manage in console
############################## spanish -text: Manage in console
####
####
if [ "$first_option" = "-text" ] ; then 
first_option=$second_option ; second_option=$third_option ; exit ; fi
####
####
############################## english text: Manage in console
############################## spanish text: Manage in console
####
####
if [ "$first_option" = "text" ] ; then 
first_option=$second_option ; second_option=$third_option ; exit ; fi
####
####
##############################    english: gui: alias to -gui  
##############################    spanish: gui: apodo a -gui 
####
####
if [ "$first_option" = "gui" ] ; then first_option="-gui" ; fi
####
####
##############################    english log: Send to log
##############################    spanish log: Send to log
####
####
if [ "$first_option" = "log" ] ; then $nada
case "fwiptables" in
"$second_option") echo "Do not recursive" ;;
"$third_option") echo "Do not recursive";;
*) $fiptables $second_option $third_option &>> /var/log/fwiptables
echo "$cinco Output $fiptables $second_option $third_option sended to /var/log/fwiptables" ;;
esac
exit; fi
####
####
##############################     english -log: Send to log
##############################     spanish -log: Send to log
####
####
if [ "$first_option" = "-log" ] ; then $nada
case "fwiptables" in
"$second_option") echo "Do not recursive" ;;
"$third_option") echo "Do not recursive";;
*) $fiptables $second_option $third_option &>> /var/log/fwiptables
echo "$cinco Output $fiptables $second_option $third_option sended to /var/log/fwiptables" ;;
esac
exit; fi
####
####
##############################     english: cfg: list: some config, alias to list-config
##############################     spanish: cfg: lista alguna config, apodo a list-config
####
####
if [ "$first_option" = "cfg" ]; then first_option="list-config" ; fi
####
####
##############################     english: cli: Manage list rules with one text menu
##############################     spanish: cli: Maneja lista de reglas con un menu de texto
####
####
if [ "$first_option" = "cli" ]; then $nada ; first_option="cli-menu" ; fi
####
####
#############################     english: list: alias list to filter ip4
#############################     spanish: list6: apodo list6 a filtros de ip4
####
####
if [ "$first_option" = "list" ];  then first_option="filter-ip4" ; fi
####
####
#############################     english: list: alias list to filter ip6
#############################     spanish: list6: apodo list6 a filtros de ip6
####
####
if [ "$first_option" = "list6" ]; then first_option="filter-ip6" ; fi
####
####
#############################     english: alias for cfg-custom to custom  
#############################     spanish: apodo de cfg-custom para custom
####
####
if [ "$first_option" = "cfg-custom" ]; then first_option="custom" ; fi
####
####
############################       english: list-fw: alias to names
############################       spanish: list-fw: apodo a names
####
####
if [ "$first_option" = "list-fw" ]; then first_option="names"; fi
####
####
############################       english: options: alias options to full-options
############################       spanish: options: apodo options a full-options
####
####
if [ "$first_option" = "options" ]; then first_option="full-options"; fi
####
####
##############################     english: header_actual headers       ###################################
##############################     spanish: header_actual cabeceras  ###################################
####
####
#### clear
if [ "$first_option" = "header" ] ; then
if [ "$allow_header" = "no" ]   ; then 
echo "$head_normal" ; else
echo $head_principal 
echo $head_default 
echo $head_normal 
echo $default_route_cuatro 
echo $default_route_seis ; fi ; for_option="" ; exit ; fi
####
####
############################## english: are you root: uid 0 ?                ############################## 
############################## spanish: eres admnistrador: identificador 0 ? ##############################
####
####
if [ "$(id -u)" = "0" ]; then $nada
else
echo $head_principal
echo $header_lineal
echo "$cincuenta need to be root to work"
echo "$ralla"
echo "$cincuenta  Be root to work $fiptables"
echo $footer_lineal
exit ; fi
####
####
############################## english: variables: variables to declare     ##############################
############################## spanish: variables: variables para declarar  ##############################
####
####
allow_legacy="" ; allow_nft="" ; allow_ipv4="" ; allow_ipv6="" ;
client_tcp="ssh,http,https" ; client_udp="domain,bootpc,ntp,https" ;
server_tcp="ssh" ; server_udp="" ; 
logserver_tcp="ssh" ; logserver_udp="" ;
logserver_prefix_input="fwlog-input::" ; 
logserver_prefix_output="fwlog-output::" ;
allow_gateway_ip4="no" ; allow_gateway_ip6="no" ;
allow_forward_ip4="no" ; allow_forward_ip6="no" ; 
allow_input_all="no" ; allow_output_all="no" ; 
allow_input_state="no" ; allow_output_state="no" ;
allow_input_bandwidth="no" ; allow_output_bandwidth="no" ;
allow_input_maxconnect="no" ; allow_output_maxconnect="no" ;
allow_input_ping="no" ; allow_output_ping="no" ;
allow_vpn="no" ; allow_blacklist="no" ;
allow_output_uid="no" ; allow_output_gid="no" ;
allow_others_protocols="no" ;
input_state="new,related,stablished" ;
output_state="new,related,stablished" ;
bandwidth_input="12512" ; bandwidth_output="512" ;
maxconnect_input="72" ; maxconnect_output="72" ;
vpn="wesnoth.org" ; blacklist="yandex.com" ;
output_uid="root" ; output_gid="root" ;
others_protocols="icmp,igmp" ;
net_ipv4_client="0/0" ; net_ipv4_server="0/0" ;
net_ipv6_client="::/0" ; net_ipv6_server="::/0" ;
####
####
##################################### english: regeneration-default: regen files       #####################################
##################################### spanish: regeneration-default: regenera archivos #####################################
####
####
if [ "$1" = "regeneration-default" ]; then
####
####
####  english: variables to prepare to gen files
####  spanish: variables para preparar para generar archivos
####
####
#### english: basic options in configuration file cfg
#### spanish: opciones basicas en configuracion de archivo cfg
####
####
var1=$(echo "$cinco BEGIN NECESARY #" )
eng1=$(echo "$cinco  .......... BEGIN Necesary options .......... .......... #")
spa1=$(echo "$cinco INICIO .......... Opciones Necesarias .......... .......... #")
var2=$(echo "$cinco NETFILTER #" )
eng2=$(echo "$cinco the iptables firewall netfilter, choose one or two")
spa2=$(echo "$cinco el iptables firewall netfilter, elige uno o dos")
var3=$(echo "allow_legacy=no" )
eng3=$(echo "$cinco launch xtables, void to yes or type no")
spa3=$(echo "$cinco lanza xtables, vacio para si, o escribe no")
var4=$(echo "allow_nft=" ) 
eng4=$(echo "$cinco launch nftables, void to yes or type no")
spa4=$(echo "$cinco lanza nftables, vacio para si, o escribe no")
var5=$(echo "$cinco PROTOCOL IP #" )
eng5=$(echo "$cinco ip protocol, modify with void or no")
spa5=$(echo "$cinco procolo ip, modificar con vacio o no")
var6=$(echo "allow_ipv4=" )
eng6=$(echo "$cinco void to config firewall with ipv4 or no to dont configure ipv4")
spa6=$(echo "$cinco varcio para ejecutar el firewall con ipv4 o no para no")
var7=$(echo "allow_ipv6=no" )
eng7=$(echo "$cinco void to config firewall with ipv6 or no to dont configure ipv6")
spa7=$(echo "$cinco varcio para ejecutar el firewall con ipv6 o no para no")
var8=$(echo "$cinco CLIENT PORTS #")
eng8=$(echo "$cinco Client ports, add with ',' and join ranges with ':'")
spa8=$(echo "$cinco puertos Cliente, añadir con ',' y poner rangos con ':' ")
var9=$(echo "client_tcp=http,https,ssh")
eng9=$(echo "$cinco tcp ports for client")
spa9=$(echo "$cinco puertos tcp para ser cliente")
var10=$(echo "client_udp=domain,bootpc,bootps,ntp,https")
eng10=$(echo "$cinco udp ports for client")
spa10=$(echo "$cinco puertos udp para ser cliente")
var11=$(echo "$cinco SERVER PORTS #" )
eng11=$(echo "$cinco Server ports, add with ',' and join ranges with ':'")
spa11=$(echo "$cinco Puertos Servidor, añadir con ',' y poner rangos con ':'")
var12=$(echo "server_tcp=ssh" )
eng12=$(echo "$cinco tcp ports for server")
spa12=$(echo "$cinco puertos tcp para servidor")
var13=$(echo "server_udp= ")
eng13=$(echo "$cinco udp ports for server")
spa13=$(echo "$cinco puertos udp para servidor")
var14=$(echo "$cinco LOG TO SERVER PORTS #" )
eng14=$(echo "$cinco Log to server ports, add with ',' and join ranges with ':'")
spa14=$(echo "$cinco logear para puertos de Servidor, añadir con ',' y poner rangos con ':'")
var15=$(echo "logserver_tcp= ")
eng15=$(echo "$cinco the tcp ports to log server")
spa15=$(echo "$cinco puertos tcp para logear servidor")
var16=$(echo "logserver_udp= ")
eng16=$(echo "$cinco the udp ports to log server")
spa16=$(echo "$cinco puertos udp para logear servidor")
var17=$(echo "$cinco LOG PREFIX TO SERVER #" )
eng17=$(echo "$cinco Log to server ports with prefix")
spa17=$(echo "$cinco logear para puertos de servidor con prefijo")
var18=$(echo "logserver_prefix_input=fwlog-input::")
eng18=$(echo "$cinco type input prefix for logserver")
spa18=$(echo "$cinco especifica prefijo de entrada para logserver")
var19=$(echo "logserver_prefix_output=fwlog-output::")
eng19=$(echo "$cinco type output prefix for logserver")
spa19=$(echo "$cinco especifica prefijo de salida para logserver")
var20=$(echo "$cinco FORWARD IP #" )
eng20=$(echo "$cinco void to yes, or no to no")
spa20=$(echo "$cinco vacio para si, o no para no")
var21=$(echo "allow_forward_ip4=no" )
eng21=$(echo "$cinco void to yes to forward ip4, or no to no")
spa21=$(echo "$cinco vacio para reenvios ip4, o no para no")
var22=$(echo "allow_forward_ip6=no" )
eng22=$(echo "$cinco void to allow ip forward ip6 or no")
spa22=$(echo "$cinco vacio para permitir reenvio ip6, o no")
var23=$(echo "$cinco GATEWAY IP #" )
eng23=$(echo "$cinco void to yes, or no to no")
spa23=$(echo "$cinco vacio para si, o no para no")
var24=$(echo "allow_gateway_ip4=no" )
eng24=$(echo "$cinco void to allow gateway ip4 to others nets or no")
spa24=$(echo "$cinco vacio para permitir gateway ip4  a otras redes, o no")
var25=$(echo "allow_gateway_ip6=no" )
eng25=$(echo "$cinco void to allow gateway ip6 to other nets or no")
spa25=$(echo "$cinco vacio para hacer gateway ip6 a otras redes o no")
var26=$(echo "$cinco END NECESARY #" )
eng26=$(echo "$cinco .......... END Necesary options .......... .......... #")
spa26=$(echo "$cinco FINAL .......... Opciones Necesarias .......... .......... #")
####
####
#### english: advance options in configurations file cfg
#### spanish: avanzadas opciones in configuracion de archivo cfg
####
####
var31=$(echo "$cinco BEGIN OPTIONAL #" )
eng31=$(echo "$cinco .......... BEGIN Optional options .......... .......... #")
spa31=$(echo "$cinco INICIO .......... Opciones opcionales .......... .......... #")
var32=$(echo "$cinco choose void or no #" )
eng32=$(echo "$cinco Allow Other Options,  modify with void, or no")
spa32=$(echo "$cinco Permitir Otras Opciones, modificar con vacio o no")
var33=$(echo "allow_input_all=no ")
eng33=$(echo "$cinco void when the rules are to allow input to all or no")
spa33=$(echo "$cinco vacio, reglas para permitir toda entrada o no")
var34=$(echo "allow_output_all=no ")
eng34=$(echo "$cinco void when the rules are to allow output to all or no")
spa34=$(echo "$cinco vacio, reglas para permitir toda salida o no")
var35=$(echo "allow_input_state=no ")
eng35=$(echo "$cinco Selective Input state with void or no")
spa35=$(echo "$cinco Estado de entrada selectivo con vacio o no")
var36=$(echo "allow_output_state=no ")
eng36=$(echo "$cinco Selective Output state with void or no")
spa36=$(echo "$cinco Estado de salida selectivo con vacio o no")
var37=$(echo "allow_input_bandwidth=no ")
eng37=$(echo "$cinco void to limit bandwidth input in kbits/sec for all sources or no")
spa37=$(echo "$cinco vacio para limitar ancho de banda de entrada para todas las fuentes en kbits/sec o no")
var38=$(echo "allow_output_bandwidth=no" )
eng38=$(echo "$cinco void to limit bandwidth output in kbits/sec for each destination or no")
spa38=$(echo "$cinco vacio limitar ancho de banda de salida en kbits/sec por cada destino o no")
var39=$(echo "allow_input_maxconnect=no" )
eng39=$(echo "$cinco void to limit max number for input simultaneous connections or no" )
spa39=$(echo "$cinco vacio para limitar numero de conexiones simultaneas de entrada o no" )
var40=$(echo "allow_output_maxconnect=no" )
eng40=$(echo "$cinco void to limit max number for output simultaneous connections or no" )
spa40=$(echo "$cinco vacio para limitar numero de conexiones simultaneas de salida o no" )
var41=$(echo "allow_input_ping=no" )
eng41=$(echo "$cinco void to allow recive pings or no" )
spa41=$(echo "$cinco vacio para permitir recivir ping o no")
var42=$(echo "allow_output_ping=no" )
eng42=$(echo "$cinco void to allow send pings or no" )
spa42=$(echo "$cinco vacio para permitir enviar ping o no" )
var43=$(echo "allow_vpn=no" )
eng43=$(echo "$cinco void to allow some exceptional host or no")
spa43=$(echo "$cinco vacio para permitir hosts excepcionales o no")
var44=$(echo "allow_blacklist=no")
eng44=$(echo "$cinco void to drop some excepcional host or no")
spa44=$(echo "$cinco vacio para denegar hosts excepcionales o no")
var45=$(echo "allow_output_uid=no" )
eng45=$(echo "$cinco void to allow excepcional user or no" )
spa45=$(echo "$cinco vacio permite salida de paquetes de un usuario excepcional o no" )
var46=$(echo "allow_output_gid=no" )
eng46=$(echo "$cinco void to allow excepcional group or no" )
spa46=$(echo "$cinco vacio permite salida de paquetes de un grupo excepcional o no" )
var47=$(echo "allow_others_protocols=no" )
eng47=$(echo "$cinco void to allow other protocol ip excepcional or no" )
spa47=$(echo "$cinco vacio para permitir otro protocolo ip excepcional o no" )
####
####
#### english: advance options in configurations file cfg
#### spanish: avanzadas opciones in configuracion de archivo cfg
####
####
var48=$(echo "$cinco Begin Variables #" )
eng48=$(echo "$cinco Fill Variables#" )
spa48=$(echo "$cinco Rellena Variables #" )
var49=$(echo "$cinco Options" )
eng49=$(echo "$cinco Other Options, add with , and join ranges with :" )
spa49=$(echo "$cinco Otras Opciones, añadir con , y poner rangos con :" )
var50=$(echo "input_state=new,related,established")
eng50=$(echo "$cinco void for all or new,related,established,untracked,invalid")
spa50=$(echo "$cinco modificar con vacio o new,related,established,untracked,invalid")
var51=$(echo "output_state=new,related,established")
eng51=$(echo "$cinco void for all or new,related,established,untracked,invalid")
spa51=$(echo "$cinco modificar con vacio o new,related,established,untracked,invalid")
var52=$(echo "bandwidth_input=12512" )
eng52=$(echo "$cinco max input bandwidth in kbits/sec for all" )
spa52=$(echo "$cinco maximo entrada de ancho de banda en kbit/sec para todos" )
var53=$(echo "bandwidth_output=512" )
eng53=$(echo "$cinco max output bandwidth in kbits/sec for each ip" )
spa53=$(echo "$cinco maximo salida de ancho de banda en kbits/sec para cada ip" )
var54=$(echo "maxconnect_input=72" )
eng54=$(echo "$cinco max number for input simultaneous connections" )
spa54=$(echo "$cinco maximo numero de conexiones simultaneas de entrada" )
var55=$(echo "maxconnect_output=72" )
eng55=$(echo "$cinco max number for output simultaneous connections" )
spa55=$(echo "$cinco maximo numero de conexiones simultaneas de salida" )
var56=$(echo "vpn=wesnoth.org,sf.net" )
eng56=$(echo "$cinco allow this excepcitonal host" )
spa56=$(echo "$cinco permitir estos host excepcionales" )
var57=$(echo "blacklist=facebook.com,www.facebook.com" )
eng57=$(echo "$cinco drop this excepcional host" )
spa57=$(echo "$cinco deniega estos host excepcionales" )
var58=$(echo "output_uid=root" )
eng58=$(echo "$cinco allow out packages excepcional from this user excepcional" )
spa58=$(echo "$cinco permite salida de paquetes de este usuario excepcional" )
var59=$(echo "output_gid=root" )
eng59=$(echo "$cinco allow out packages excepcional from this group excepcional" )
spa59=$(echo "$cinco permite salida de paquetes de este grupo excepcional" )
var60=$(echo "others_protocols=icmp,igmp" )
eng60=$(echo "$cinco allow others protocols from /etc/protocolos" )
spa60=$(echo "$cinco permitir otros protocolos desde /etc/protocols" )
var61=$(echo "$cinco NET TO CLIENT AND SERVER #" )
eng61=$(echo "$cinco Net to connect like client or server" )
spa61=$(echo "$cinco Red para conectar como cliente o server" )
var62=$(echo "net_ipv4_client=0/0" )
eng62=$(echo "$cinco the net to client ipv4, all is 0/0" )
spa62=$(echo "$cinco la red cual cliente ipv4, todos es 0/0" )
var63=$(echo "net_ipv4_server=0/0" )
eng63=$(echo "$cinco the net to server ipv4, all is 0/0" )
spa63=$(echo "$cinco la red cual servidor ipv4, todos es 0/0" )
var64=$(echo "net_ipv6_client=::/0" )
eng64=$(echo "$cinco the net to client ipv6, all is ::/0" )
spa64=$(echo "$cinco la red cual cliente ipv6, todos es ::/0" )
var65=$(echo "net_ipv6_server=::/0" )
eng65=$(echo "$cinco the net to server ipv6, all is ::/0" )
spa65=$(echo "$cinco la red cual servidor ipv6, todos es ::/0" )
var66=$(echo "$cinco #" )
eng66=$(echo "$cinco .......... END Optional options .......... .......... #")
spa66=$(echo "$cinco FINAL .......... Opciones opcionales .......... .......... #")
####
####
##############################   english: continue with autogen defaults configs cfg
##############################   spanish: continua con auto genera configs cfg por defecto
####
####
#### english: where save default files #### spanish: donde se guardan los archivos
####
####
me="$defaultminicfg_eng"
ms="$defaultminicfg_spa"
fe="$defaultfullcfg_eng"
fs="$defaultfullcfg_spa"
####
####
#### wizard mini-english
####
####
echo "$cinco $fprogram from $fiptables config file with version $fversion" &> $me
echo $var1  $tabz $eng1  &>> $me
echo $var2  $tabz $eng2  &>> $me
echo $var3  $tabz $eng3  &>> $me
echo $var4  $tabz $eng4  &>> $me
echo $var5  $tabz $eng5  &>> $me
echo $var6  $tabz $eng6  &>> $me
echo $var7  $tabz $eng7  &>> $me
echo $var8  $tabz $eng8  &>> $me
echo $var9  $tabz $eng9  &>> $me
echo $var10 $tabz $eng10 &>> $me
echo $var11 $tabz $eng11 &>> $me
echo $var12 $tabz $eng12 &>> $me
echo $var13 $tabz $eng13 &>> $me
echo $var14 $tabz $eng14 &>> $me
echo $var15 $tabz $eng15 &>> $me
echo $var16 $tabz $eng16 &>> $me
echo $var17 $tabz $eng17 &>> $me
echo $var18 $tabz $eng18 &>> $me
echo $var19 $tabz $eng19 &>> $me
echo $var20 $tabz $eng20 &>> $me
echo $var21 $tabz $eng21 &>> $me
echo $var22 $tabz $eng22 &>> $me
echo $var23 $tabz $eng23 &>> $me
echo $var24 $tabz $eng24 &>> $me
echo $var25 $tabz $eng25 &>> $me
echo $var26 $tabz $eng26 &>> $me
####
####
#### wizard mini-spanish
####
####
echo "$cinco $fprogram from $fiptables config file with version $fversion" &> $ms
echo $var1  $tabz $spa1  &>> $ms
echo $var2  $tabz $spa2  &>> $ms
echo $var3  $tabz $spa3  &>> $ms
echo $var4  $tabz $spa4  &>> $ms
echo $var5  $tabz $spa5  &>> $ms
echo $var6  $tabz $spa6  &>> $ms
echo $var7  $tabz $spa7  &>> $ms
echo $var8  $tabz $spa8  &>> $ms
echo $var9  $tabz $spa9  &>> $ms
echo $var10 $tabz $spa10 &>> $ms
echo $var11 $tabz $spa11 &>> $ms
echo $var12 $tabz $spa12 &>> $ms
echo $var13 $tabz $spa13 &>> $ms
echo $var14 $tabz $spa14 &>> $ms
echo $var15 $tabz $spa15 &>> $ms
echo $var16 $tabz $spa16 &>> $ms
echo $var17 $tabz $spa17 &>> $ms
echo $var18 $tabz $spa18 &>> $ms
echo $var19 $tabz $spa19 &>> $ms
echo $var20 $tabz $spa20 &>> $ms
echo $var21 $tabz $spa21 &>> $ms
echo $var22 $tabz $spa22 &>> $ms
echo $var23 $tabz $spa23 &>> $ms
echo $var24 $tabz $spa24 &>> $ms
echo $var25 $tabz $spa25 &>> $ms
echo $var26 $tabz $spa26 &>> $ms
####
####
#### wizard full-english
####
####
echo "$cinco $fprogram from $fiptables config file with version $fversion" &> $fe
echo $var1  $tabz $eng1  &>> $fe
echo $var2  $tabz $eng2  &>> $fe
echo $var3  $tabz $eng3  &>> $fe
echo $var4  $tabz $eng4  &>> $fe
echo $var5  $tabz $eng5  &>> $fe
echo $var6  $tabz $eng6  &>> $fe
echo $var7  $tabz $eng7  &>> $fe
echo $var8  $tabz $eng8  &>> $fe
echo $var9  $tabz $eng9  &>> $fe
echo $var10 $tabz $eng10 &>> $fe
echo $var11 $tabz $eng11 &>> $fe
echo $var12 $tabz $eng12 &>> $fe
echo $var13 $tabz $eng13 &>> $fe
echo $var14 $tabz $eng14 &>> $fe
echo $var15 $tabz $eng15 &>> $fe
echo $var16 $tabz $eng16 &>> $fe
echo $var17 $tabz $eng17 &>> $fe
echo $var18 $tabz $eng18 &>> $fe
echo $var19 $tabz $eng19 &>> $fe
echo $var20 $tabz $eng20 &>> $fe
echo $var21 $tabz $eng21 &>> $fe
echo $var22 $tabz $eng22 &>> $fe
echo $var23 $tabz $eng23 &>> $fe
echo $var24 $tabz $eng24 &>> $fe
echo $var25 $tabz $eng25 &>> $fe
echo $var26 $tabz $eng26 &>> $fe
##### english: advance variables
##### spanish: avanzadas variables
echo $var31 $tabz $eng31 &>> $fe
echo $var32 $tabz $eng32 &>> $fe
echo $var33 $tabz $eng33 &>> $fe
echo $var34 $tabz $eng34 &>> $fe
echo $var35 $tabz $eng35 &>> $fe
echo $var36 $tabz $eng36 &>> $fe
echo $var37 $tabz $eng37 &>> $fe
echo $var38 $tabz $eng38 &>> $fe
echo $var39 $tabz $eng39 &>> $fe
echo $var40 $tabz $eng40 &>> $fe
echo $var41 $tabz $eng41 &>> $fe
echo $var42 $tabz $eng42 &>> $fe
echo $var43 $tabz $eng43 &>> $fe
echo $var44 $tabz $eng44 &>> $fe
echo $var45 $tabz $eng45 &>> $fe
echo $var46 $tabz $eng46 &>> $fe
echo $var47 $tabz $eng47 &>> $fe
echo $var48 $tabz $eng48 &>> $fe
echo $var49 $tabz $eng49 &>> $fe
echo $var50 $tabz $eng50 &>> $fe
echo $var51 $tabz $eng51 &>> $fe
echo $var52 $tabz $eng52 &>> $fe
echo $var53 $tabz $eng53 &>> $fe
echo $var54 $tabz $eng54 &>> $fe
echo $var55 $tabz $eng55 &>> $fe
echo $var56 $tabz $eng56 &>> $fe
echo $var57 $tabz $eng57 &>> $fe
echo $var58 $tabz $eng58 &>> $fe
echo $var59 $tabz $eng59 &>> $fe
echo $var60 $tabz $eng60 &>> $fe
echo $var61 $tabz $eng61 &>> $fe
echo $var62 $tabz $eng62 &>> $fe
echo $var63 $tabz $eng63 &>> $fe
echo $var64 $tabz $eng64 &>> $fe
echo $var65 $tabz $eng65 &>> $fe
echo $var66 $tabz $eng66 &>> $fe
####
####
#### wizard full-spanish
####
####
echo "$cinco $fprogram from $fiptables config file with version $fversion" &> $fs
echo $var1  $tabz $spa1 &>> $fs
echo $var2  $tabz $spa2 &>> $fs
echo $var3  $tabz $spa3 &>> $fs
echo $var4  $tabz $spa4 &>> $fs
echo $var5  $tabz $spa5 &>> $fs
echo $var6  $tabz $spa6 &>> $fs
echo $var7  $tabz $spa7 &>> $fs
echo $var8  $tabz $spa8 &>> $fs
echo $var9  $tabz $spa9 &>> $fs
echo $var10 $tabz $spa10 &>> $fs
echo $var11 $tabz $spa11 &>> $fs
echo $var12 $tabz $spa12 &>> $fs
echo $var13 $tabz $spa13 &>> $fs
echo $var14 $tabz $spa14 &>> $fs
echo $var15 $tabz $spa15 &>> $fs
echo $var16 $tabz $spa16 &>> $fs
echo $var17 $tabz $spa17 &>> $fs
echo $var18 $tabz $spa18 &>> $fs
echo $var19 $tabz $spa19 &>> $fs
echo $var20 $tabz $spa20 &>> $fs
echo $var21 $tabz $spa21 &>> $fs
echo $var22 $tabz $spa22 &>> $fs
echo $var23 $tabz $spa23 &>> $fs
echo $var24 $tabz $spa24 &>> $fs
echo $var25 $tabz $spa25 &>> $fs
echo $var26 $tabz $spa26 &>> $fs
##### english: advance variables
##### spanish: avanzadas variables
echo $var31 $tabz $spa31 &>> $fs
echo $var32 $tabz $spa32 &>> $fs
echo $var33 $tabz $spa33 &>> $fs
echo $var34 $tabz $spa34 &>> $fs
echo $var35 $tabz $spa35 &>> $fs
echo $var36 $tabz $spa36 &>> $fs
echo $var37 $tabz $spa37 &>> $fs
echo $var38 $tabz $spa38 &>> $fs
echo $var39 $tabz $spa39 &>> $fs
echo $var40 $tabz $spa40 &>> $fs
echo $var41 $tabz $spa41 &>> $fs
echo $var42 $tabz $spa42 &>> $fs
echo $var43 $tabz $spa43 &>> $fs
echo $var44 $tabz $spa44 &>> $fs
echo $var45 $tabz $spa45 &>> $fs
echo $var46 $tabz $spa46 &>> $fs
echo $var47 $tabz $spa47 &>> $fs
echo $var48 $tabz $spa48 &>> $fs
echo $var49 $tabz $spa49 &>> $fs
echo $var50 $tabz $spa50 &>> $fs
echo $var51 $tabz $spa51 &>> $fs
echo $var52 $tabz $spa52 &>> $fs
echo $var53 $tabz $spa53 &>> $fs
echo $var54 $tabz $spa54 &>> $fs
echo $var55 $tabz $spa55 &>> $fs
echo $var56 $tabz $spa56 &>> $fs
echo $var57 $tabz $spa57 &>> $fs
echo $var58 $tabz $eng58 &>> $fs
echo $var59 $tabz $eng59 &>> $fs
echo $var60 $tabz $eng60 &>> $fs
echo $var61 $tabz $eng61 &>> $fs
echo $var62 $tabz $eng62 &>> $fs
echo $var63 $tabz $eng63 &>> $fs
echo $var64 $tabz $eng64 &>> $fs
echo $var65 $tabz $eng65 &>> $fs
echo $var66 $tabz $eng66 &>> $fs
exit; fi
####
####
#### english:  sane variables: for work sane            ############################## 
#### spanish:  sana variables: para funcionamiento sano ##############################
####
####
case "$NULL" in
"$allow_question");;
*)allow_question="no";;
"$allow_header");;
*)allow_header="no";;
"$allow_legacy");; 
*)allow_legacy="no";;
"$allow_nft");; 
*)allow_nft="no";;
"$allow_ipv4");; 
*)allow_ipv4="no";;
"$allow_ipv6");; 
*)allow_ipv6="no";;
"$allow_forward_ip4");; 
*)allow_forward_ip4="no";;
"$allow_forward_ip6");; 
*)allow_forward_ip6="no";;
"$allow_gateway_ip4");; 
*)allow_gateway="no";;
"$allow_gateway_ip6");; 
*)allow_gateway="no";;
"$allow_only_output");; 
*)allow_only_output="no";;
"$allow_input_all");; 
*)allow_input_all="no";;
"$allow_output_all");; 
*)allow_output_all="no";;
"$allow_input_state");; 
*)allow_input_state="no";;
"$allow_output_state");; 
*)allow_output_state="no";;
"$allow_input_bandwidth");;
*)allow_input_bandwidth="no";;
"$allow_output_bandwidth");; 
*)allow_output_bandwidth="no";;
"$allow_input_maxconnect");; 
*)allow_input_maxconnect="no";;
"$allow_output_maxconnect");; 
*)allow_output_maxconnect="no";;
"$allow_input_ping");; 
*)allow_input_ping="no";;
"$allow_output_ping");; 
*)allow_output_ping="no";;
"$allow_vpn");; 
*)allow_vpn="no";;
"$allow_blacklist");; 
*)allow_blacklist="no";;
"$allow_output_uid");; 
*)allow_output_uid="no";;
"$allow_output_gid");; 
*)allow_output_gid="no";;
"$allow_other_protocols");; 
*)allow_other_protocols="no";;
"$autosave_fwrecover");;
*)autosave_fwrecover="no";;
esac
####
####
##############################       english: if sane config dir                       #############################
##############################       spanish: comprobar sanos directorios              #############################
####
####
if [ -d "$directory_config" ]; then $nada ; else rm "$directory_config" &> /dev/null ; mkdir "$directory_config" &> /dev/null ; fi
if [ -d "$directory_fwrecover" ]; then $nada ; else rm "$directory_fwrecover" &> /dev/null ; mkdir "$directory_fwrecover" &> /dev/null ; fi
if [ -f "$directory_fwrecover/last-nft-ipv4" ]; then $nada ; else touch $directory_fwrecover/last-nft-ipv4 &> /dev/null ; fi
if [ -f "$directory_fwrecover/last-legacy-ipv4" ]; then $nada ; else touch $directory_fwrecover/last-legacy-ipv4 &> /dev/null ; fi
if [ -f "$directory_fwrecover/last-nft-ipv6" ]; then $nada ; else touch $directory_fwrecover/last-nft-ipv6 &> /dev/null ; fi
if [ -f "$directory_fwrecover/last-legacy-ipv6" ]; then $nada ; else touch $directory_fwrecover/last-legacy-ipv6 &> /dev/null ; fi
####
####
########################################       english: autosave of firewall to restore standard rules
########################################       english: autoguardado de firewall para recuperador de reglas estandar
####
####
#### english: iptables saved
#### spanish: iptables guardado
####
####
#### english: autosave with name autosave
#### spanish: autoguardado con nombre autosave
####
####
if [ "$autosave_fwrecover" = "$NULL" ] ; then $nada ;
$$which_iptables_nft-save &> $directory_fwrecover/autosave-nft-ipv4
$which_iptables_legacy-save &> $directory_fwrecover/autosave-legacy-ipv4
$which_ip6tables_nft-save &> $directory_fwrecover/autosave-nft-ipv6
$which_ip6tables_legacy-save &> $directory_fwrecover/autosave-legacy-ipv6
fi
####
####
##############################      english: search programs: programs path           #####################
##############################      spanish: busca los programas: ruta de programas   #####################
####
####
which_bash="$(which bash | cut -d " " -f 1)"
which_iptables_legacy="$(which iptables-legacy | cut -d " " -f 1)"
which_iptables_nft="$(which iptables-nft | cut -d " " -f 1)"
which_ip6tables_legacy="$(which ip6tables-legacy | cut -d " " -f 1)"
which_ip6tables_nft="$(which ip6tables-nft | cut -d " " -f 1)"
which_arptables="$(which arptables|cut -d " " -f 1)"
which_ebtables="$(which ebtables| cut -d " " -f 1)"
which_fmt="$(which fmt | cut -d " " -f 1)"
which_uname="$(which uname | cut -d " " -f 1)"
which_sed="$(which sed | cut -d " " -f 1)"
which_xrandr="$(which xrandr | cut -d " " -f 1)"
which_ip="$(which ip | cut -d " " -f 1)"
which_host="$(which host | cut -d " " -f 1)"
which_resolveip="$(which resolveip | cut -d " " -f 1)"
which_geoiplookup="$(which geoiplookup | cut -d " " -f 1)"
which_route="$(which route | cut -d " " -f 1)"
which_ss="$(which ss| cut -d " " -f 1)"
which_netstat="$(which netstat | cut -d " " -f 1)"
which_netstat_nat="$(which netstat-nat | cut -d " " -f 1)"
which_lsof="$(which lsof | cut -d " " -f 1)"
which_sysctl="$(which sysctl | cut -d " " -f 1)"
which_tcpdump="$(which tcpdump | cut -d " " -f 1)"
which_arp="$(which arp | cut -d " " -f 1)"
which_ping="$(which ping | cut -d " " -f 1)"
which_traceroute="$(which traceroute | cut -d " " -f 1)"
which_dialog="$(which dialog | cut -d " " -f 1)"
which_zenity="$(which zenity | cut -d " " -f 1)"
which_lynx="$(which lynx | cut -d " " -f 1)"
which_links="$(which links | cut -d " " -f 1)"
which_links2="$(which links2 | cut -d " " -f 1)"
which_elinks="$(which elinks | cut -d " " -f 1)"
which_shc="$(which shc | cut -d " " -f 1)"
which_nmap="$(which nmap | cut -d " " -f 1)"
which_ntpdate="$(which ntpdate | cut -d " " -f 1)"
which_sntp="$(which sntp | cut -d "" -f 1)"
which_rdate="$(which rdate | cut -d "" -f 1)"
which_wget="$(which wget | cut -d " " -f 1)"
which_iperf="$(which iperf | cut -d " " -f 1)"
which_tee="$(which tee | cut -d " " -f 1)"
which_dd="$(which dd | cut -d " " -f 1)"
which_glxgears="$(which glxgears | cut -d " " -f 1)"
####
####
##############################      english: search favorite browser: favorite browser     #####################
##############################      spanish: busca preferido navegador: favorite browser   #####################
####
####
favorite_text_browser=""
if [ "$which_elinks" = "$NULL" ]    ; then $nada ; else favorite_text_browser="$which_elinks"    ; fi
if [ "$which_lynx" = "$NULL"   ]    ; then $nada ; else favorite_text_browser="$which_lynx"      ; fi
if [ "$which_links" = "$NULL"  ]    ; then $nada ; else favorite_text_browser="$which_links"     ; fi
if [ "$which_links2" = "$NULL" ]    ; then $nada ; else favorite_text_browser="$which_links2"    ; fi
####
####
##############################      english: search favorite date: favorite date command        #####################
##############################      spanish: busca preferida fecha: favorita comando de fecha   #####################
####
####
favorite_date_command=""
if [ "$which_ntpdate" = "$NULL" ]    ; then $nada ; else favorite_date_command="$which_ntpdate"         ; fi
if [ "$which_sntp" = "$NULL"  ]    ; then $nada ; else favorite_date_command="$which_sntp"              ; fi
if [ "$which_rdate" = "$NULL"   ]    ; then $nada ; else favorite_date_command="$which_rdate -4 -a -n"  ; fi
####
####
##############################       english: Install:    $fiptables           ###########################################
##############################       spanish: Instalador: $fiptables           ###########################################
####
####
if [ "$first_option" = "install" ] ; then $nada
$give_cover
echo "$cinco [ Install $fiptables in $directory_fiptables ]"
#### 
#### 
####  english: accept the license 
####  spanish: acepta la licencia
#### 
#### 
case "$allow_question" in "no");; *)
read -t 15 -p "$rallica ¿ Do you want ACCEPT the license GNU GPL v2 ?. Type YES to ACCEPT  # " decision
if [ "$decision" = "yes" ] || [ "$decision" = "YES" ]
then echo "$cinco [ OK. ACCEPTED LICENSE ] [ Continue install ]"
else echo "$cinco [ OK. DECLINED LICENSE ] [ Stop install ]"; exit; fi ;; esac
#### 
#### 
####  english: copy the file
####  spanish: copia el archivo
#### 
#### 
echo "$cinco [ Runing.. ] [ $zero_option ]"
cp $zero_option $directory_fiptables/$fiptables ;
#### 
#### 
####  english: probe sane dir /etc/bash_completion.d
####  spanish: comprueba directorio sano /etc/bash_completion.d
#### 
#### 
if [ -d "/etc/bash_completion.d" ]; then $nada ; else mkdir /etc/bash_completion.d/ &> /dev/null ; fi 
echo "$cinco [ $fiptables $fversion / SCRIPT INSTALLED IN: ] [ $directory_fiptables/$fiptables ]" 
#### 
#### 
####  english: create /etc/bash_completion.d/$fiptables and /etc/default/fwiptables
####  spanish: crea  /etc/bash_completion.d/$fiptables y   /etc/default/fwiptables
#### 
#### 
echo "alias $fiptables='sudo $directory_fiptables/$fiptables'"       &>  /etc/bash_completion.d/$fiptables
echo "complete -W 'list list6 filter-ip4 filter-ip6 nat-ip4 nat-ip6 full-options long-help cli-menu gui-menu gui-shell \
info-net stop continue reset names save load ss lsof wizard-mini wizard-full \
eraserules offline allpermisive custom actual sudo-list alias-list' $fiptables" &>>  /etc/bash_completion.d/$fiptables
echo "$(head -160 $0 | grep fwiptables-for-default)" &> /etc/default/fwiptables
#### 
#### 
####  english: modes of file 
####  spanish: modos de archivo
#### 
#### 
chmod ugo+rx /etc/bash_completion.d/$fiptables &> /dev/null
chmod ugo+rx $directory_fiptables/$fiptables &> /dev/null
#### 
#### 
####  english: show info 
####  spanish: muestra informacion
#### 
#### 
echo "$cinco [ Launch $fiptables to run / TYPE :] [ $fiptables ]" 
echo "$cinco [ OK FIREWALL INSTALLED ] [ $directory_fiptables/$fiptables ]"
echo $footer_lineal
exit; fi
####
####
##############################       english: upgrade: upgrade in the file /usr/bin/fwiptables
##############################       spanish: upgrade: actualiza en el archivo /usr/bin/fwiptables
####
####
if [ "$first_option" = "upgrade" ]; then $nada
$give_cover
echo "$cinco [ Upgrade $fiptables in $directory_fiptables ]"
echo "$cincuenta [ Web upgrade ] $cinco"
case "$favorite_text_browser" in
"$NULL")echo " [ Install a text web browser for upgrade fwiptables ]"; exit ;; esac
echo "$cinco [ Upgrade The $fiptables in file $directory_fiptables/$fiptables with $favorite_text_browser command ]"
echo "$cinco [ Downloading $fiptables with the comand $favorite_text_browser browser ]"
rm /tmp/$fiptables &> /dev/null
####
####
#### download fwiptables
####
####
echo "$cinco [ Waiting several seconds .. ]"
$favorite_text_browser -dump $fweb_newfiles  | grep -i fwiptables \
 | grep -i download | egrep -iv "deb" | head -1
echo "$cinco [ Waiting several seconds .. ]"
$favorite_text_browser -source "$fweb_latest" &> "/tmp/$fiptables"
if [ -f /tmp/$fiptables ]; then
chmod ugo+rx /tmp/$fiptables &> /dev/null
####
####
#### launch install
####
####
/tmp/$fiptables install
echo "$cinco [ $fprogram ] [ Version $fversion ] [ Upgraded: OK ]"
echo "$cinco [ OK FIREWALL UPGRADED ] [ $directory_fiptables/$fiptables ]"
else echo "$cinco [ FAIL: ] [ FIREWALL NOT UPGRADED ]"; fi
echo $footer_lineal
exit ; fi
####
####
##############################      english: launch-rules: The first options: offline, custom or allpermisive     #####################
##############################      spanish: launch-rules: Primeras opciones: offline, custom or allpermisive     #####################
####
####
####   #### english: The first option: offline, allpermisive, onlyweb or custom           ----  semi silent
####   #### spanish: El primero:       desconectado, todopermisivo, soloweb o modificado  ----  semi silencioso
####
####
if [ "$first_option" = "offline" ]; then      echo "$cinco  FIREWALL OFFLINE" ; 
launch_iptables="si"; launch_permisive="no";
launch_onlyweb="no" ; launch_offline=""   ;  launch_custom="no" ;  fi
if [ "$first_option" = "allpermisive" ]; then echo "$cinco  FIREWALL ALLPERMISIVE" ; 
launch_iptables="si";  launch_permisive=""  ;
launch_onlyweb="no" ; launch_offline="no" ;  launch_custom="no" ;  fi
if [ "$first_option" = "onlyweb" ]; then echo "$cinco  FIREWALL ONLYWEB" ;
launch_iptables="si"; launch_permisive="no"  ;
launch_onlyweb=""   ; launch_offline="no" ;  launch_custom="no" ;  fi
if [ "$first_option" = "custom" ]; then       echo "$cinco  FIREWALL CUSTOM" ;
launch_iptables="si"; launch_permisive="no" ;
launch_onlyweb="no" ; launch_offline="no" ; launch_custom="" ; fi
####
####
##############################   english: custom without valid config cfg
##############################   spanish: custom sin valido configuracion cfg
####
####
if [ "$first_option" = "custom" ]; then
if [ -f $directory_config/$second_option ]; then $nada
else  $fiptables cfg ;
echo "$cinco Usage: $fiptables custom existent-file-cfg"
echo "$cinco See:   $fiptables tool-cfg"; fi ; fi
####
####
##############################       english: basic-options: wellcome with semi help
##############################       spanish: basic-options: bienvenida con semi ayuda
####
####
if [ "$first_option" = "basic-options" ]; then
$give_cover
echo "$cinco [ $first_option ] [ List basic options ]"
echo "$tab" "$tab" "______________________                | Principal options |                   "
echo "$tab" "$tab"  "    control-guide      info-net info-system wizard-full wizard-mini          "
echo "$tab" "$tab"  "    control-rules      stop continue reset names actual show save load       "
echo "$tab" "$tab"  "    list-rules         list listnum filter-ip4 filter-ip6 nat-ip4  ..        "
echo "$tab" "$tab"  "    interface          cli-menu gui-menu gui-shell -text -log -gui           "
echo
echo "$tab" "$tab"  "______________________               | Other options |                       "
echo "$tab" "$tab"  "    tool-sockets       route ss lsof netstat netstat-nat tcpdump             "
echo "$tab" "$tab"  "    tool-tcp           host geoip ntpdate trace-ip4 trace-ip6                "
echo "$tab" "$tab"  "    tool-icmp          ping-ip4 ping-ip6 speed-ip4 speed-ip6                 "
echo "$tab" "$tab"  "    tool-sudo          sudo-auth sudo-remove sudo-list alias-list            "
echo "$tab" "$tab"  "    show-about         about version depends examples  ..                    "
echo "$tab" "$tab"  "    show-help          full-options long-help help ayuda notes  ..           "
echo "$tab" "$tab"  "$ralla $ralla $ralla"
echo "$tab" "$tab"  "    some-example       | -text for default output, or -log or -gui |         "
echo 
echo "$tab" "$tab"  "  Generate new iptables rules :#            $fiptables wizard-mini           "
echo "$tab" "$tab"  "  Save iptables rules with one name :#      $fiptables save name             "
echo "$tab" "$tab"  "  List names from all firewall saved :#     $fiptables names                 "
echo "$tab" "$tab"  "  List iptables rules :#                    $fiptables list                  "
echo "$tab" "$tab"  "  Load iptables rules to output log :#      $fiptables -log load name        "
echo "$tab" "$tab"  "  Load iptables rules to output gui :#      $fiptables -gui load name        "
echo "$tab" "$tab"  "  For more options:#                        $fiptables full-options          "
echo $footer_lineal
exit ; fi
####
####
##############################       english: full-options: wellcome with semi help
##############################       spanish: full-options: bienvenida con semi ayuda
####
####
if [ "$first_option" = "full-options" ]; then
$give_cover
echo "$cinco [ $first_option ] [ List full options ]"
echo "$tab" "$tab"  "______________________                | Principal options |                  "
echo "$tab" "$tab"  "    control-guide      info-net info-system wizard-full wizard-mini          "
echo "$tab" "$tab"  "    control-rules      stop continue reset names actual show save load       "
echo "$tab" "$tab"  "    list-rules         list listnum filter-ip4 filter-ip6 nat-ip4 nat-ip6    "
echo "$tab" "$tab"  "                       forward forwardnum forward6 fowardnum6                "
echo "$tab" "$tab"  "                       raw-ip4 raw-ip6 mangle-ip4 mangle-ip6                 "
echo "$tab" "$tab"  "                       security-ip4 security-ip6 ebtables arptables          "
echo "$tab" "$tab"  "    interface          cli-menu gui-menu gui-shell -text -log -gui           "
echo "$tab" "$tab"  "$ralla $ralla $ralla"
echo "$tab" "$tab"  "______________________                | Secondary options |                  " 
echo "$tab" "$tab"  "    launch-rules       eraserules offline allpermisive onlyweb custom        "
echo "$tab" "$tab"  "    tool-cfg           new-full-config nueva-completa-config                 "
echo "$tab" "$tab"  "                       new-mini-config nueva-mini-config                     "
echo "$tab" "$tab"  "                       list-config show-config modify-config del-config      "
echo "$tab" "$tab"  "______________________                | Third options |                      " 
echo "$tab" "$tab"  "    tool-sockets       route ss lsof netstat netstat-nat tcpdump             "
echo "$tab" "$tab"  "    tool-forward       ipforward-list ipforward-on ipforward-off             "
echo "$tab" "$tab"  "    tool-tcp           host geoip ntpdate trace-ip4 trace-ip6                "
echo "$tab" "$tab"  "    tool-icmp          ping-ip4 ping-ip6 speed-ip4 speed-ip6                 "
echo "$tab" "$tab"  "    tool-nmap          scan-tcp scan-syn scan-fin scan-udp scan-ping         "
echo "$tab" "$tab"  "    tool-sudo          sudo-auth sudo-remove sudo-list alias-list            "
echo "$tab" "$tab"  "    tool-install       install upgrade new-versions howto-upgrade            "
echo "$tab" "$tab"  "    tool-system        ram-free ram-speed disc-speed glx-speed               "
echo "$tab" "$tab"  "    show-etc           hosts protocols services hosts.allow hosts.deny       "
echo "$tab" "$tab"  "                       resolv.conf default                               "
echo "$tab" "$tab"  "    show-log           log-search log-sudo log-sshd log-fwiptables           "
echo "$tab" "$tab"  "    show-about         about version depends examples                        "
echo "$tab" "$tab"  "                       config-eng config-spa license                         "
echo "$tab" "$tab"  "    show-help          long-help help ayuda notes options                    "
echo "$tab" "$tab"  "                       basic-options full-options                            "
echo "$tab" "$tab"  "$ralla $ralla $ralla"
echo "$tab" "$tab"  "    some-example       | -text for default output, or -log or -gui |         "
echo 
echo "$tab" "$tab"  "  Generate new iptables rules :#            $fiptables wizard-mini           "
echo "$tab" "$tab"  "  Save iptables rules with one name :#      $fiptables save name             "
echo "$tab" "$tab"  "  List names from all firewall saved :#     $fiptables names                 "
echo "$tab" "$tab"  "  List iptables rules :#                    $fiptables list                  "
echo "$tab" "$tab"  "  Load iptables rules to output log :#      $fiptables -log load name        "
echo "$tab" "$tab"  "  Load iptables rules to output gui :#      $fiptables -gui load name        "
echo "$tab" "$tab"  "  For less options:#                        $fiptables basic-options         "
echo $footer_lineal
exit ; fi
####
####
##############################       english: long-help: long help        ##############################
##############################       spanish: larga-opcion: larga ayuda   ##############################
####
####
if [ "$first_option" = "long-help" ]; then $genfiles
$give_cover
echo "$cinco         [Long-help]"
echo "$cinco         [Larga-ayuda]"
echo
echo "--------------------------------------------------------------------------"
echo "  FRAN INTRO "
echo 
echo "  Fran Firewall use to configure both iptables netfilter. "
echo "  With xtables and/or nftables. with ipv4 and/or ipv6.    "
echo "  Create one firewall with a wizard and save it.          "
echo "  Configure one firewall with your own config files.      "
echo "  Manage the firewall with the standard iptables files.   "
echo "  Too, use this firewall with some utilities for ip.      "
echo
echo "  See web page project in $fweb_main"
echo "--------------------------------------------------------------------------"
echo
echo 
echo
$fiptables full-options
echo
$fiptables option
echo
echo "$cinco [ Principal options ] $cinco"
echo
$fiptables control-guide
echo
$fiptables control-rules
echo
$fiptables list-rules
echo
$fiptables interface
echo
echo "$cinco [ Secondary options ] $cinco"
echo 
$fiptables launch-rules
echo
$fiptables tool-cfg
echo
$fiptables tool-sockets
echo
$fiptables tool-forward
echo
$fiptables tool-tcp
echo
$fiptables tool-icmp
echo
$fiptables tool-nmap
echo
$fiptables tool-sudo
echo
$fiptables tool-install
echo
$fiptables tool-system
echo
$fiptables show-etc
echo
$fiptables show-log
echo
$fiptables show-about
echo
$fiptables show-help
echo
$fiptables notes
echo
echo "$cinco [Config cfg example]"
echo "$cinco [Configuracion cfg ejemplo]"
echo
cat $defaultcfg
echo
$fiptables version
echo
echo $footer_lineal
exit; fi
####
####
##############################       english: list-config: list some config
##############################       spanish: list-config: lista alguna config
####
####
if [ "$first_option" = "list-config" ]; then $give_cover
echo "$cinco [ $first_option ] [ List configs cfg ]"
echo "$cinco $tab [English:] [list configs files in cfg format]"
echo "$cinco $tab [Spanish:] [Lista de archivos de configuraciones en cfg formato]"
ls -1 $directory_config/
echo "$cinco [OK CFG FILES NAMES]"
echo $footer_lineal
exit; fi
####
####
##############################       english: some-example: some example
##############################       spanish: some-example: algun ejemplo
####
####
if [ "$first_option" = "some-example" ]; then $give_cover
echo "$cinco         [list examples]"
echo "$cinco         [Lista ejemplos]"
echo "$tab" "$tab"  "$ralla $ralla $ralla"
echo "$tab" "$tab"  "$tab example           | -text for default output, or -log or -gui |       "
echo "$tab" "$tab"  "  Generate new iptables rules :#            $fiptables wizard-mini         "
echo "$tab" "$tab"  "  Save iptables rules in name :#            $fiptables save name           "
echo "$tab" "$tab"  "  Load iptables rules :#                    $fiptables load name           "
echo "$tab" "$tab"  "  Load iptables rules to output log :#      $fiptables -log load name      "
echo "$tab" "$tab"  "  Load iptables rules to output gui :#      $fiptables -gui load name      "
echo $footer_lineal
exit; fi
####
####
##############################       english: option: some option
##############################       spanish: option: alguna opcion
####
####
if [ "$first_option" = "option" ]; then $give_cover
echo "$cinco         [List option]"
echo "$cinco         [Lista opcion]"
echo
echo "                  [ Principal options ]"
echo
echo " control-guide:  Guide to beginners"
echo "              :  Guia para empezar"
echo " control-rules:  Control the iptables firewall rules"
echo "              :  Controla las reglas de iptables"
echo "    list-rules:  List the iptables firewall rules"
echo "              :  Lista las reglas de iptables"
echo "     Interface:  Manage the interface with text or log or gui"
echo "              :  Manage el interfaz con text o log o gui"
echo
echo "                  [ Secondary options ]"
echo
echo "  launch-rules:  Launch the iptables firewall rules"
echo "              :  Lanza las reglas de iptables"
echo "      tool-cfg:  Create, modify and show configurations"
echo "              :  Crea, modifica y muestra configuraciones"
echo "  tool-sockets:  List net sockets ip in system"
echo "              :  Lista sockets de red ip en el sistema"
echo "     tool-icmp:  Tool icmp to ping at other hosts"
echo "              :  Herramienta icmp para hacer ping a otros"
echo "      tool-tcp:  Several tools tcp"
echo "              :  Varias herramientas tcp"
echo "     tool-nmap:  Port scan"
echo "              :  Escaneo de puertos"
echo "     tool-sudo:  Tool to auth sudo a users for $fiptables"
echo "              :  Herramienta de autorizacion a usuarios para $fiptables"
echo "  tool-install:  Tool to install and upgrade $fiptables"
echo "              :  Herramienta para instalar y actualizar $fiptables"
echo "      show-etc:  Show net files in /etc/"
echo "              :  Muestra archivos de red de /etc/"
echo "      show-log:  Show logs systems"
echo "              :  Muestra logs del sistema"
echo "    show-about:  About $fiptables"
echo "              :  Acerca de $fiptables"
echo "     show-help:  Help for $fiptables"
echo "              :  Ayuda de $fiptables"
echo $footer_lineal
exit; fi
####
####
##############################       english: launch-rules: options
##############################       spanish: launch-rules: opciones
####
####
if [ "$first_option" = "launch-rules" ]; then $give_cover
echo "$cinco         [Launch iptables rules]"
echo "$cinco         [Lanza reglas de iptables]"
echo
echo "   eraserules: Remove the iptables rules in ipv4 and ipv6"
echo "             : Borra las reglas de iptables en ipv4 y ipv6"
echo "      offline: Firewall disconected for all servers and clients except localhost"
echo "             : Firewall desconectado para todo servidores y clientes excepto localhost"
echo " allpermisive: Configure a firewall very permisive"
echo "             : Configura un firewall muy permisivo"
echo "     only-web: Configure a firewall like cliente web"
echo "             : Configura un firewall cliente web"
echo "   cfg-custom: Alias a custom"
echo "             : Apodo a custom"
echo "       custom: Configure one custom firewall with one file cfg"
echo "             : Configura un modificado firewall con un archivo cfg"
echo $footer_lineal
exit; fi
####
####
##############################       english: control-rules: options
##############################       spanish: control-rules: opciones
####
####
if [ "$first_option" = "control-rules" ]; then $give_cover
echo "$cinco         [Control iptables rules]"
echo "$cinco         [Controla reglas de iptables]"
echo
echo "          stop: Save and stop the rules"
echo "              : Guarda y para las reglas"
echo "      continue: continue with old rules"
echo "              : Continua con las viejas reglas"
echo "         reset: Reset the rules"
echo "              : Resetea las reglas"
echo "       list-fw: Alias to names"
echo "              : Apodo a names"
echo "         names: Show the files of firewall standard"
echo "              : Muestra los archivos de firewall estandard guardados"
echo "          show: Show the files in firewall standard"
echo "              : Muestra los archivos de firewall estandard"
echo "          save: Save the files in firewall standard"
echo "              : Guarda los archivos de firewall estandard"
echo "          load: Restore files from firewall standard"
echo "              : Recupera los archivos de firewall estandard"
echo "        actual: Show the actual iptables standard"
echo "              : Muestra el actual firewall estandard"
echo $footer_lineal
exit; fi
####
####
##############################       english: list-rules: options
##############################       spanish: list-rules: opciones
####
####
if [ "$first_option" = "list-rules" ]; then $give_cover
echo "$cinco         [List filter iptables rules]"
echo "$cinco         [Lista reglas de iptables filtros]"
echo
echo "               [The filter table with names]"
echo "               [Lista tabla filtros con nombres]"
echo
echo "         list: List iptables filter rules from ipv4"
echo "             : Lista reglas de tabla filtros desde ipv4"
echo "        list6: List iptables filter rules from ipv6"
echo "             : Lista reglas de tabla filtros desde ipv6"
echo "      forward: List iptables filter rules foward"
echo "             : Lista tabla de iptables de reenvio ipv4"
echo "     forward6: List iptables filter rules forward ipv6"
echo "             : Lista tabla de iptables de reenvio ipv6"
echo
echo "               [List filter table with numbers]"
echo "               [Lista tabla filtros con numeros]"
echo
echo "      listnum: List iptables filter rules from ipv4 in numbers"
echo "             : Lista la tabla de reglas de filtros desde ipv4 in numeros"
echo "     listnum6: List iptables filter rules from ipv6 in numbers"
echo "             : Lista la tabla de reglas de filtros desde ipv6 in numeros"
echo "   forwardnum: List iptables filter rules foward in numbers"
echo "             : Lista la tabla de reglas de filtros de reenvio ipv4 in numeros"
echo "  forwardnum6: List iptables filter rules forward ipv6 in numbers"
echo "             : Lista la tabla de reglas de filtros de reenvio ipv6 in numeros"
echo
echo "$cinco         [The others tables]"
echo "$cinco         [Las otras tablas]"
echo
echo "   filter-ip4: List iptables filter rules from ipv4"
echo "             : Lista iptables reglas de filtros desde ipv4"
echo "   filter-ip6: List iptables filter rules from ipv6"
echo "             : Lista iptables reglas de filtros desde ipv6"
echo "      nat-ip4: List iptables nat rules from ipv4"
echo "             : Lista iptables nat reglas de ipv4"
echo "      nat-ip6: List iptables nat rules from ipv6"
echo "             : Lista iptables nat reglas de ipv6"
echo "   mangle-ip4: List iptables mangle rules from ipv4"
echo "             : Lista reglas de manipulacion ipv4"
echo "   mangle-ip6: List iptables mangle rules from ipv6"
echo "             : Lista reglas de manipulacion ipv6"
echo "      raw-ip4: List iptables raw rules from ipv4"
echo "             : Lista reglas directas de ipv4"
echo "      raw-ip6: List iptables raw rules from ipv6"
echo "             : Lista reglas directas de ipv6"
echo " security-ip4: List iptables security rules from ipv4"
echo "             : lista reglas de seguridad de ipv4"
echo " security-ip6: List iptables security rules from ipv6"
echo "             : lista reglas de seguridad de ipv6"
echo "     ebtables: List rules ebtables nft ethernet"
echo "             : Lista reglas de iptables de ethernet"
echo "    arptables: List rules arptables arp"
echo "             : Lista reglas de tabla de arpanet"
echo $footer_lineal
exit; fi
####
####
##############################       english: list-numrules: options
##############################       spanish: list-numrules: opciones
####
####
if [ "$first_option" = "list-numrules" ]; then $give_cover
echo "$cinco         [List iptables numerical rules]"
echo "$cinco         [Lista reglas numericas de iptables]"
echo
echo "      listnum: List iptables filter rules input and output ipv4 in numbers"
echo "             : Lista la tabla de reglas de filtros de entrada y salida ipv4 in numeros"
echo "   forwardnum: List iptables filter rules foward in numbers"
echo "             : Lista la tabla de reglas de filtros de reenvio ipv4 in numeros"
echo "     listnum6: List iptables filter rules input and output ipv6 in numbers"
echo "             : Lista la tabla de reglas de filtros de entrada y salida ipv6 in numeros"
echo "  forwardnum6: List iptables filter rules forward ipv6 in numbers"
echo "             : Lista la tabla de reglas de filtros de reenvio ipv6 in numeros"
echo
echo $footer_lineal
exit; fi
####
####
##############################       english: tool-cfg: options
##############################       spanish: tool-cfg: opciones
####
####
if [ "$first_option" = "tool-cfg" ]; then $give_cover
echo "$cinco         [Tool configs]"
echo "$cinco         [Herramienta de configuraciones]"
echo
echo "       new-full-config: Create a new advance configfile.cfg in english"
echo "                      : Crea una nueva avanzada configfile.cfg en ingles"
echo " nueva-completa-config: Create a new advance configfile.cfg in spanish"
echo "                      : Crea una nueva avanzada configfile.cfg en español"
echo "       new-mini-config: Create a new basic configfile.cfg in english"
echo "                      : Crea una nueva basica configfile.cfg en ingles"
echo "     nueva-mini-config: Create a new basic configfile.cfg in spanish"
echo "                      : Crea una nueva basica configfile.cfg en español"
echo "           list-config: List config files cfg"
echo "                      : Lista las configuraciones de archivo cfg"
echo "         modify-config: Edit one configfile.cfg"
echo "                      : Edita una configuracion.cfg"
echo "           show-config: Show one configfile.cfg"
echo "                      : Muestra una configuracion.cfg"
echo "            del-config: Delete one configuration file"
echo "                      : Borra una configuracion.cfg"
echo $footer_lineal
exit; fi
####
####
##############################       english: control-guide: options
##############################       spanish: control-guide: opciones
####
####
if [ "$first_option" = "control-guide" ]; then $give_cover
echo "$cinco         [Control guide]" 
echo "$cinco         [Control guia]"
echo
echo "  info-system: Show info system"
echo "             : Muestra informacion del sistema"
echo "     info-net: Show net info"
echo "             : Muestra informacion del sistema"
echo "  wizard-full: Asistant y launch complete firewall"
echo "             : Asiste y lanza un completo firewall"
echo "  wizard-mini: Asistant y Launch simple firewall"
echo "             : Asiste y lanza un simple firewall"
echo $footer_lineal
exit; fi
####
####
##############################       english: tool-interface: options
##############################       spanish: tool-intarface: opciones
####
####
if [ "$first_option" = "interface" ]; then $give_cover
echo "$cinco         [control interface]" 
echo "$cinco         [control de interfaz]"
echo
echo "     cli-menu: Text cli interface from menus"
echo "             : Interfaz de menus desde texto"
echo "     gui-menu: Gui interface from menu"
echo "             : Interfaz grafica desde menu"
echo "    gui-shell: Gui with comand line interface"
echo "             : Gui con interfaz desde linea de comandos"
echo "        -text: Text output interface, for default"
echo "             : Interfaz de texto, por defecto"
echo "         -log: Save the output to /var/log/fwiptables"
echo "             : Guarda la salida a /var/log/fwiptables"
echo "         -gui: Graphicall output interface"
echo "             : Interfaz grafico de salida"
echo "         text: alias a -text"
echo "             : apodo a -text"
echo "          log: alias a -log"
echo "             : apodo a -log"
echo "          gui: alias a -gui"
echo "             : apodo a -gui"
echo $footer_lineal
exit; fi
####
####
##############################       english: tool-sockets: options
##############################       spanish: tool-sockets: opciones
####
####
if [ "$first_option" = "tool-sockets" ]; then $give_cover
echo "$cinco         [Tool sockets]"
echo "$cinco         [Herramienta de sockets]"
echo
echo "             route: Show net devices and ip route tables"
echo "                  : Muestra los dispositivos de red y la tabla de rutas"
echo "                ss: Show net sockets with command ss"
echo "                  : Muestra las conexiones de red con ss"
echo "              lsof: Show net sockets with command lsof"
echo "                  : Muestra las conexiones con lsof"
echo "           netstat: Show net sockets with command netstat"
echo "                  : Muestra las conexiones con netstat"
echo "       netstat-nat: Show net sockets wiht command netstat-nat"
echo "                  : Muestra las conexiones con netstat-nat"
echo "           tcpdump: Listen the connections"
echo "                  : Escucha las conexiones"
echo "               arp: List the last conentions arp"
echo "                  : Lista las ultimas conexiones arp"
echo $footer_lineal
exit; fi
####
####
##############################       english: tool-sockets: options
##############################       spanish: tool-sockets: opciones
####
####
if [ "$first_option" = "tool-forward" ]; then $give_cover
echo "$cinco         [Tool forward]"
echo "$cinco         [Herramienta de ipforwading]"
echo
echo "  ipforward-list: Show kernel config about forward"
echo "                  : Muestra configuracion del kernel sobre reenvios"
echo "    ipforward-on: Active the kernel config about forward"
echo "                  : Activa la configuracion del kernel sobre reenvios"
echo "   ipforward-off: Deactive kernel config about forward"
echo "                  : Desactiva la configuracion del kernel sobre reenvios"
echo $footer_lineal
exit; fi
####
####
##############################       english: tool-icmp: options
##############################       spanish: tool-cimp: opciones
####
####
if [ "$first_option" = "tool-icmp" ]; then $give_cover
echo "$cinco         [Tool icmp]"
echo "$cinco         [Herramienta icmp]"
echo
echo "     ping-ip4: Do a one ping with to one host with ipv4 icmp"
echo "             : Hace un ping con una direccion con ipv4 icmp"
echo "     ping-ip6: Do a one ping with to one host with ipv6 icmp"
echo "             : Hace un ping con una direccion con ipv6 icmp"
echo "    speed-ip4: test bandwith with ipv4"
echo "             : Testea la velocidad de conexion con ipv4"
echo "    speed-ip6: Test net bandwith with ipv6"
echo "             : Testea la velocidad de conexion con ipv6"
echo
echo $footer_lineal
exit; fi
####
####
##############################       english: tool-tcp: options
##############################       spanish: tool-tcp: opciones
####
####
if [ "$first_option" = "tool-tcp" ]; then $give_cover
echo "$cinco         [Tool tcp]"
echo "$cinco         [Herramienta tcp]"
echo
echo "    trace-ip4: Trace route a one host with ipv4 tcp"
echo "             : Traza la routa a una direccion con ipv4 tcp"
echo "    trace-ip6: Trace route a one host with ipv6 tcp"
echo "             : Traza la routa a una direccion con ipv6 tcp"
echo "         host: Resolve one host"
echo "             : Resuelve una direccion a ip"
echo "    resolveip: Resolve one host and viceversa"
echo "             : Resuelve una direccion a ip y a host"
echo "        geoip: Locate a one host or ip"
echo "             : Localiza una direccion o ip"
echo "      ntpdate: Update the system date from ntp server"
echo "             : Actualiza la fecha del sistema desde un servidor de fecha"
echo $footer_lineal
exit; fi
####
####
##############################       english: tool-nmap: options
##############################       spanish: tool-nmap: opciones
####
####
if [ "$first_option" = "tool-nmap" ]; then $give_cover
echo "$cinco         [Tool nmap]"
echo "$cinco         [Herramienta nmap]"
echo
echo "     scan-tcp: Scan a host/mask per tcp protocol"
echo "             : Escanea una host/mascara por tcp protocolo"
echo "     scan-syn: Scan a host/mask per syn socket"
echo "             : Escanea una host/mascara por syn socket"
echo "     scan-fin: Scan a host/mask per fin socket"
echo "             : Escanea una host/mascara por fin socket"
echo "     scan-udp: Scan a host/mask per udp protocol"
echo "             : Escanea una host/mascara por udp protocolo"
echo "    scan-ping: Scan a host/mask per ping udp"
echo "             : Escanea una host/mascara por ping protocolo"
echo $footer_lineal
exit; fi
####
####
##############################       english: tool-sudo: options
##############################       spanish: tool-sudo: opciones
####
####
if [ "$first_option" = "tool-sudo" ]; then $give_cover
echo "$cinco         [Tool sudo]"
echo "$cinco         [Herramienta sudo]"
echo
echo "    sudo-auth: Allow sudo $fiptables to other choosed users"
echo "             : Permite sudo $fiptables a otros elegidos usuarios"
echo "  sudo-remove: Remove sudo $fiptables to other choosed users"
echo "             : Borra sudo $fiptables a otros elegidos usuarios"
echo "    sudo-list: List sudo $fiptables to other choosed users"
echo "             : Lista sudo $fiptables a otros elegidos usuarios"
echo $footer_lineal
exit; fi
####
####
##############################       english: tool-install: options
##############################       spanish: tool-install: opciones
####
####
if [ "$first_option" = "tool-install" ]; then $give_cover
echo "$cinco         [Tool install]"
echo "$cinco         [Herramienta instalar]"
echo
echo "       install: Install this version actual"
echo "              : Instala esta version actual"
echo " howto-upgrade: Show howto upgrade at the latest version"
echo "              : Muestra como actualizar a la ultima version"
echo "       upgrade: Upgrade at the latest version"
echo "              : Actualiza a la ultima version"
echo "  new-versions: Show the list of the last versions"
echo "              : Muestra el listado de las ultivas versiones"
echo $footer_lineal
exit; fi
####
####
##############################       english: tool-system: options
##############################       spanish: tool-system: opciones
####
####
if [ "$first_option" = "tool-system" ]; then $give_cover
echo "$cinco         [Tool system]"
echo "$cinco         [Herramienta systema]"
echo
echo "      ram-free: Clean for innecesary memory"
echo "              : Libera la memoria innecesaria"
echo "     ram-speed: Show the speed of ram"
echo "              : Muestra la velocidad de la ram"
echo "    disc-speed: Show the speed of disc"
echo "              : Muestra la velocidad de el disco"
echo "     glx-speed: Show frammes for seconds with mesa graphicall"
echo "              : Muestra fotogramas por segundo con graficos mesa"
echo $footer_lineal
exit; fi
####
####
##############################       english: show-etc: options
##############################       spanish: show-ver: opciones
####
####
if [ "$first_option" = "show-etc" ]; then $give_cover
echo "$cinco         [Show etc]"
echo "$cinco         [Mostrar etc]"
echo
echo "        hosts: Show /etc/hosts, hosts local and statics host"
echo "             : Muestra /etc/hosts, hosts locales y hosts estaticos"
echo "   protocolos: Show /etc/protocols, protocols names"
echo "             : Muestra /etc/protocols, nombres de protocolos"
echo "     services: Show /etc/services, ports names"
echo "             : Muestra /etc/services, nombres de los puertos"
echo "  hosts.allow: Show /etc/hosts.allow, hosts allowed in some own server"
echo "             : Muestra /etc/hosts.allow, hosts permitidas en algunos propios servidores"
echo "   hosts.deny: Show /etc/hosts.deny, hosts drops in some own server"
echo "             : Muestra /etc/hosts.deny, hosts denegadas en algunos propios servidores"
echo "  resolv.conf: Show /etc/resolv.conf, it are the dns configured"
echo "             : Muestra /etc/resolv.conf, este es el dns configurado"
echo "      default: Show /etc/default/fwiptables, overwrite variables for fwiptables"
echo "               Muestra /etc/default/fwiptables, overwrite variables for fwiptables"
echo $footer_lineal
exit; fi
####
####
##############################       english: show-log: options
##############################       spanish: show-log: opciones
####
####
if [ "$first_option" = "show-log" ]; then $give_cover
echo "$cinco         [Show log]"
echo "$cinco         [Mostrar log]"
echo
echo " log-fwiptables: Show /var/log/fwiptables"
echo "               : Muestra /var/log/fwiptables"
echo "       log-sudo: Search logs with sudo in /var/log"
echo "               : Busca logs con sudo en /var/log"
echo "       log-sshd: Search logs for sshd in /var/log"
echo "               : Busca logs con sshd en /var/log"
echo "     log-search: Search logs whith a prefix in /var/log"
echo "               : Busca logs con patron en /var/log"
echo $footer_lineal
exit; fi
####
####
####
####
##############################       english: show-about: options
##############################       spanish: show-about: opciones
####
####
if [ "$first_option" = "show-about" ]; then $give_cover
echo "$cinco         [Show about]"
echo "$cinco         [Mostrar acerca de]"
echo
echo "          about: About"
echo "               : Acerca"
echo "        version: Info version"
echo "               : Informacion de version"
echo "        depends: Show depends"
echo "               : Muestra dependencias"
echo "       examples: Show examples"
echo "               : Muestra ejemplos"
echo "     config-eng: Config example with comments in english"
echo "               : Ejemplo de configuracion con comentarios en ingles"
echo "     config-spa: Config example with comments in spanish"
echo "               : Ejemplo de configuracion con comentarios en español"
echo "        license: Show license gpl v2"
echo "               : Muestra la licencia gpl v2"
echo $footer_lineal
exit; fi
####
####
##############################       english: show-help: options
##############################       spanish: show-help: opciones
####
####
if [ "$first_option" = "show-help" ]; then $give_cover
echo "$cinco         [Show help]"
echo "$cinco         [Mostrar ayuda]"
echo
echo "     full-options: Show full options"
echo "                 : Muestra lista de opciones"
echo "        long-help: Show help in english and spanish"
echo "                 : Muestra la ayuda en ingles y en español"
echo "             help: Show help in english"
echo "                 : Muestra la ayuda en ingles"
echo "            ayuda: Show help in spanish"
echo "                 : Muestra la ayuda en español"
echo "            notes: Several notes"
echo "                 : Varias notas"
exit; fi
echo $footer_lineal
####
####
##############################       english: notes: notes to configure iptables
##############################       spanish: notes: notas para configurar iptables
####
####
if [ "$first_option" = "notes" ]; then $give_cover
echo "$cinco [ $first_option ] [ List notes about $fiptables ]"
echo
echo "$cinco [vpn] [virtual private network] [whitelist]"
echo "$cinco [vpn] [red privada virtual] [lista blanca]"
echo
echo "$tab Host [vpn] excepcionals hosts has conection allowed in firewall"
echo "$tab Host [vpn] excepcionales hosts tienen la conexion permitida en el firewall"
echo
echo "$cinco [blacklist] [deny host]"
echo "$cinco [blacklist] [Lista negra]"
echo
echo "$tab Host [blacklist] excepcionals hosts has conection dropped in firewall"
echo "$tab Host [blacklist] expcecionales hosts tienen la conexion denegada en firewall"
echo
echo "$cinco [allow_output_uid] [user and group]"
echo "$cinco [allow_output_uid] [usuario y grupo]"
echo
echo "$tab User and/or group excepcional have output conection allowed in firewall"
echo "$tab Usuario y/o grupo excepcional tienen la salida permitida en firewall"
echo
echo "$cinco [Notes] [Two iptables netfilter]"
echo "$cinco [Notas] [Dos iptables netfilter]"
echo
echo "$tab iptables-legacy   is    support for xtables "
echo "$tab iptables-nft      is    support for nftables "
echo
echo "$cinco [Notes] [necesary ports to connect with ipv4 and ipv6 in udp protocol]"
echo "$cinco [Notas] [puertos necesarios para conectar con ipv4 y ipv6 en udp protocolo]"
echo
echo " ntp   : Port necesary to update the time and date"
echo "       : Puerto necesario para actualizar la hora y fecha"
echo " bootpc: Port necesary to dhcp and get ip"
echo "       : Puerto necesario para actualizar y conseguir la ip"
echo " domain: This port is necesary to domain resolver"
echo "       : Puerto necesario para resolver dominios"
echo
echo "$cinco [Notes] [necesary protocols for ipv6]"
echo "$cinco [Notas] [protocolos necesarios para ipv6]"
echo
echo " ipv6-icmp     : Necesary protocol in ipv6"
echo "               : Protocolo necesario en ipv6"
echo " ipv4 protocols: ipv6 works too with old ipv4 procotols"
echo "               : ipv6 funciona tambien con viejos ipv4 protocolos"
echo
echo "$cincuenta  [License]"
echo ""
echo "  Download the latest version $fprogram from sourceforge"
echo "  $fweb_latest"
echo "  $flicense"
echo
echo $footer_lineal
exit; fi
####
####
##############################       english: depends: depends for $fiptables
##############################       spanish: dependencias: dependencias para $fiptables
####
####
if [ "$first_option" = "depends" ]; then $give_cover
echo "$cinco [ $first_option ] [ List programs depends about $fiptables ]"
echo $ralla
echo "$cinco It are all the depends to full work in $fiptables $fversion"
echo $ralla
echo "$tab [Configuration directory]"
echo "list cfg:            $directory_config"
echo "names fw:            $directory_fwrecover"
echo $ralla
echo "$tab [Configuration file]"
echo "default variables:   /etc/default/fwiptables"
echo "shell completions:   /etc/completion.d/fwiptables"
echo "auth users:          /etc/sudoers.d/fwiptables"
echo $ralla
echo "$tab [output log]"
echo "destination log:     /var/log/fwiptables"
echo $ralla
echo "$tab [$fiptables util]"
echo "sed:       $which_sed"
echo "fmt:       $which_fmt"
#### echo "shc:       $which_shc"
echo $ralla
echo "$tab [$fiptables cli]"
echo "dialog:    $which_dialog"
echo $ralla
echo "$tab [$fiptables gui]"
echo "zenity:      $which_zenity"
echo $ralla
echo "$tab [$fiptables text browser]"
echo "one: elinks or lynx or links or links2 "
echo $ralla
echo "$tab [$fiptables auto text browser]"
echo "auto text browser: $favorite_text_browser"
echo $ralla
echo "$tab [$fiptables date command]"
echo "one: ntp or rdate or sntp"
echo $ralla
echo "$tab [$fiptables auto date command]"
echo "auto text browser: $favorite_date_command"
echo $ralla
echo "$tab [the iptables]"
echo "iptables legacy:   $which_iptables_legacy"
echo "iptables nft:      $which_iptables_nft"
echo "ip6tables legacy:  $which_ip6tables_legacy"
echo "ip6tables nft:     $which_ip6tables_nft"
echo "arptables:         $which_arptables"
echo "ebtables:          $which_ebtables"
echo $ralla
echo "$tab [$fiptables tool]"
echo "uname:      $which_uname"
echo "ip:         $which_ip"
echo "route:      $which_route"
echo "ss:         $which_ss"
echo "netstat:    $which_netstat"
echo "netstat-nat:$which_netstat_nat"
echo "lsof:       $which_lsof"
echo "sysctl:     $which_sysctl"
echo "tcpdump:    $which_tcpdump"
echo "arp:        $which_arp"
echo "ping:       $which_ping"
echo "ntpdate:    $which_ntpdate"
echo "rdate:      $which_rdate"
echo "sntp:       $which_sntp"
echo "traceroute: $which_traceroute"
echo "host:       $which_host"
echo "resolveip:  $which_resolveip"
echo "geoip:      $which_geoiplookup"
echo "nmap:       $which_nmap"
echo "wget:       $which_wget"
echo "iperf:      $which_iperf"
echo "dd:         $which_dd"
echo "tee:        $which_tee"
echo "glxgears:   $which_glxgears"
echo $ralla
echo $footer_lineal
exit; fi
####
####
############################## english: -gui: Manage gui con three options  ##############################
############################## spanish: -gui: Maneja gui con tres opciones  ##############################
####
####
#### english: with third option
#### spanish: con tercera opcion
####
####
if [ "$first_option" = "-gui" ] && [ "$third_option" != "$NULL" ] ; then $genfiles ;
echo "Graphics: Wait several seconds.." ;
case "$which_zenity" in "$NULL") echo " Install zenity to work" ; exit ;; else) ;; esac
case $second_option in
#### 
#### 
"new-mini-config")
cp "$defaultminicfg_eng" "/tmp/fiptables-$third_option"
if [ -f "$directory_config/$third_option" ]; then $nada ;
zenity --forms $graphic_dimension --text="file $third_option exists" ; exit 
else zenity --text-info $graphic_dimension --filename="/tmp/fiptables-$third_option" \
--editable --title="MODIFY FILE" &> "$directory_config/$third_option" ; fi
if [ -s "$directory_config/$third_option" ]; then $nada ;
zenity --forms $graphic_dimension --text="OK new file: $third_option" ; exit
else rm "$directory_config/$third_option" ; 
zenity --forms $graphic_dimension --text="Canceled new file: $third_option" ; exit; fi
;;
#### 
#### 
"new-full-config")
cp "$defaultfullcfg_eng" "/tmp/fiptables-$third_option"
if [ -f "$directory_config/$third_option" ]; then $nada ;
zenity --forms $graphic_dimension --text="file $third_option exists" ; exit 
else zenity --text-info $graphic_dimension --filename="/tmp/fiptables-$third_option" \
--editable --title="MODIFY FILE" &> "$directory_config/$third_option" ; fi
if [ -s "$directory_config/$third_option" ]; then $nada ;
zenity --forms $graphic_dimension --text="OK new file: $third_option" ; exit
else rm "$directory_config/$third_option" ; 
zenity --forms $graphic_dimension --text="Canceled new file: $third_option" ; exit; fi
;;
#### 
#### 
"nueva-mini-config")
cp "$defaultminicfg_spa" "/tmp/fiptables-$third_option"
if [ -f "$directory_config/$third_option" ]; then $nada ;
zenity --forms $graphic_dimension --text="file $third_option exists" ; exit 
else zenity --text-info $graphic_dimension --filename="/tmp/fiptables-$third_option" \
--editable --title="MODIFY FILE" &> "$directory_config/$third_option" ; fi
if [ -s "$directory_config/$third_option" ]; then $nada ;
zenity --forms $graphic_dimension --text="OK new file: $third_option" ; exit
else rm "$directory_config/$third_option" ; 
zenity --forms $graphic_dimension --text="Canceled new file: $third_option" ; exit; fi
;;
#### 
#### 
"nueva-completa-config")
cp "$defaultfullcfg_spa" "/tmp/fiptables-$third_option"
if [ -f "$directory_config/$third_option" ]; then $nada ;
zenity --forms $graphic_dimension --text="file $third_option exists" ; exit 
else zenity --text-info $graphic_dimension --filename="/tmp/fiptables-$third_option" \
--editable --title="MODIFY FILE" &> "$directory_config/$third_option" ; fi
if [ -s "$directory_config/$third_option" ]; then $nada ;
zenity --forms $graphic_dimension --text="OK new file: $third_option" ; exit
else rm "$directory_config/$third_option" ; 
zenity --forms $graphic_dimension --text="Canceled new file: $third_option" ; exit; fi
;;
#### 
#### 
"modify-config")
if [ -f "$directory_config/$third_option" ] ; then $nada
else zenity --forms $graphic_dimension --text="file do not exist: $third_option" ; exit ; fi 
cp "$directory_config/$third_option" "/tmp/fiptables-$third_option"
zenity --text-info $graphic_dimension --filename="/tmp/fiptables-$third_option" \
--editable --title="MODIFY FILE" &> "$directory_config/$third_option"
if [ -s "$directory_config/$third_option" ]; then $nada ; 
zenity --forms $graphic_dimension --text="OK. file: $third_option"
else cp "/tmp/fiptables-$third_option" "$directory_config/$third_option"
zenity --forms $graphic_dimension --text="Canceled. file: $third_option"; fi
;;
#### 
#### 
*)
fecha_temporal=$(date | sed s/\ //g) ; $fiptables $second_option $third_option &> /tmp/fwiptables-$fecha_temporal
zenity --text-info $graphic_dimension --title "[$fiptables gui] [$second_option]" --filename=/tmp/fwiptables-$fecha_temporal --auto-scroll
rm /tmp/fwiptables-$fecha_temporal
;;
#### 
#### 
esac
#### 
#### 
exit; fi
####
####
############################## english: -gui: with second option ##############################
############################## spanish: -gui: con segunda opcion ##############################
####
####
if [ "$first_option" = "-gui" ] && [ "$second_option" != "$NULL" ] ; then $genfiles
echo "Graphics: Wait several seconds.." ;
case "$which_zenity" in "$NULL") echo " Install zenity to work" ; exit ;; else) ;; esac
case $second_option in
#### 
#### 
wizard-mini)
archivo=wizard-mini
cp "$defaultminicfg_eng" "/tmp/fiptables-$archivo"
zenity --text-info $graphic_dimension --filename="/tmp/fiptables-$archivo" \
--editable --title="MODIFY FILE" &> "$directory_config/$second_option"
if [  -s "$directory_config/$archivo" ]; then $nada ; 
$fiptables -gui custom $second_option ; $fiptables -gui list ;
else rm "$directory_config/$second_option" ;
zenity --info $graphic_dimension --text "Ok. $archivo canceled"; fi
;;
#### 
#### 
wizard-full)
archivo=wizard-full
cp "$defaultfullcfg_eng" "/tmp/fiptables-$archivo"
zenity --text-info $graphic_dimension --filename="/tmp/fiptables-$archivo" \
--editable --title="MODIFY FILE" &> "$directory_config/$second_option"
if [  -s "$directory_config/$archivo" ]; then $nada ; 
$fiptables -gui custom $second_option ; $fiptables -gui list ;
else rm "$directory_config/$second_option" ;
zenity --info $graphic_dimension --text "OK. $archivo canceled"; fi
;;
#### 
#### 
*)
fecha_temporal=$(date | sed s/\ //g)
$fiptables $second_option &> /tmp/fwiptables-$fecha_temporal
zenity --text-info $graphic_dimension --title "[$fiptables gui] [$second_option]" --filename=/tmp/fwiptables-$fecha_temporal --auto-scroll
rm /tmp/fwiptables-$fecha_temporal
;;
#### 
#### 
esac
#### 
#### 
exit; fi
####
####
############################## english: -gui: wihtout more options ##############################
############################## spanish: -gui: sin mas opcion       ##############################
####
####
if [ "$first_option" = "-gui" ] && [ "$second_option" = "$NULL" ] ; then echo "Graphics: Wait several seconds.." ;
case "$which_zenity" in "$NULL") echo " Install zenity to work" ; exit ;; else) ;; esac
zenity --forms $graphic_dimension --title="Type of Interface" --text="$($fiptables interface)"
exit; fi
####
####
############################## english: gui-menu: gui menu general: gui con menu  ##############################
############################## spanish: gui-menu: gui menu general: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu" ] ; then $genfiles 
echo "Graphics: Wait several seconds.." ;
case "$which_zenity" in "$NULL") echo " Install zenity to work"; exit ;; else) ;; esac
selection=$(zenity $graphic_dimension  \
 --list "01 Control guide" "02 Control rules" "03 List rules" "04 Launch rules" "05 Tool config" \
"06 Tool sockets" "07 Tool icmp" "08 Tool tcp"  "09 Tool sudo" "10 Tool install" "11 Show etc" \
"12 Show log" "13 Show about" "14 Show help" \
--column="Option list $fiptables" --text="Select one option" --title="[Gui Menu]  [$fiptables]")
#### 
#### 
case "$selection" in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"01 Control guide")$fiptables gui-menu-control-guide;;
"02 Control rules")$fiptables gui-menu-control-rules;;
"03 List rules")$fiptables gui-menu-list-rules;;
"04 Launch rules")$fiptables gui-menu-launch-rules;;
"05 Tool config")$fiptables gui-menu-tool-config;;
"06 Tool sockets")$fiptables gui-menu-tool-sockets;;
"07 Tool icmp")$fiptables gui-menu-tool-icmp;;
"08 Tool tcp")$fiptables gui-menu-tool-tcp;;
"09 Tool sudo")$fiptables gui-menu-tool-sudo;;
"10 Tool install")$fiptables gui-menu-tool-install;;
"11 Show etc")$fiptables gui-menu-show-etc;;
"12 Show log")$fiptables gui-menu-show-log;;
"13 Show about")$fiptables gui-menu-show-about;;
"14 Show help")$fiptables gui-menu-show-help;;
#### 
#### 
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit ;;
esac
exit; fi
####
####
############################## english: gui-menu-control-guide: gui with menu ##############################
############################## spanish: gui-menu-control-guide: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-control-guide" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "info-net" "info-system" "wizard-full" "wizard-mini" \
--column="Option list $fiptables" --text="Select one option" --title="[Control Guide] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"info-net") $fiptables -gui info-net ;;
"info-system")$fiptables -gui info-system ;;
"wizard-full")$fiptables -gui wizard-full ;;
"wizard-mini")$fiptables -gui wizard-mini ;;
#### 
#### 
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-launch-rules: gui with menu ##############################
############################## spanish: gui-menu-launch-rules: gui con menu  ##############################
#### 
####  
if [ "$first_option" = "gui-menu-launch-rules" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "eraserules" "offline" "allpermisive" "custom_cfg" \
--column="Option list $fiptables" --text="Select one option" --title="[Launch Rules] [$fiptables]")
#### 
#### 
case "$selection" in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"eraserules") $fiptables -gui eraserules ; $fiptables gui list ;;
"offline") $fiptables -gui offline ; $fiptables gui list ;;
"allpermisive") $fiptables -gui allpermisive ; $fiptables gui list ;;
"custom_cfg")archivo="$(zenity --entry $graphic_dimension --title "[Launch Custom]" --text="$(ls -1 $directory_config)")" ; 
$fiptables -gui custom $archivo ; $fiptables gui list ;;
#### 
#### 
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-control-rules: gui with menu ##############################
############################## spanish: gui-menu-control-rules: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-control-rules" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "stop" "continue" "reset" "names" "show" "save" "load" "actual" \
--column="Option list $fiptables" --text="Select one option" --title="[Control Rules] [$fiptables]")
#### 
#### 
case "$selection" in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"stop") $fiptables -gui stop ; $fiptables -gui list ;;
"continue") $fiptables -gui continue ; $fiptables -gui list ;;
"reset") $fiptables -gui reset ; $fiptables -gui list ;;
"names") $fiptables -gui list-fw ;;
"show")archivo="$(zenity --entry $graphic_dimension --title "[Save Firewall]" --text="$($fiptables list-fw)")" ; 
$fiptables -gui show $archivo ;;
"save")archivo="$(zenity --entry $graphic_dimension --title "[Save Firewall]" --text="$($fiptables list-fw)")" ; 
$fiptables -gui save $archivo ;;
"load")archivo="$(zenity --entry $graphic_dimension --title "[Load Firewall]" --text="$($fiptables list-fw)")" ;
$fiptables -gui load $archivo ; $fiptables -gui list ;;
"actual") $fiptables -gui actual ;;
#### 
#### 
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-list-rules: gui with menu ##############################
############################## spanish: gui-menu-list-rules: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-list-rules" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "list" "list6" "filter-ip4" "filter-ip6" "forward" "forward6" \
"listnum" "forwardnum" "listnum6" "forwardnum6" "nat-ip4" "nat-ip6" \
"mangle-ip4" "mangle-ip6" "raw-ip4" "raw-ip6" "security-ip4" \
"security-ip6" "ebtables" "arptables" \
--column="Option list $fiptables" --text="Select one option" --title="[List Rules] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"list") $fiptables -gui list ;;
"list6") $fiptables -gui list6 ;;
"filter-ip4") $fiptables -gui filter-ip4 ;;
"filter-ip6") $fiptables -gui filter-ip6 ;;
"forward") $fiptables -gui forward ;;
"forward6") $fiptables -gui forward6 ;;
"listnum") $fiptables -gui listnum ;;
"forwardnum") $fiptables -gui forwardnum ;;
"listnum6") $fiptables -gui listnum6 ;;
"forwardnum6") $fiptables -gui forwardnum6 ;;
"nat-ip4") $fiptables -gui nat-ip4 ;;
"nat-ip6") $fiptables -gui nat-ip6 ;;
"mangle-ip4") $fiptables -gui mangle-ip4 ;;
"mangle-ip6") $fiptables -gui mangle-ip6 ;;
"raw-ip4") $fiptables -gui raw-ip4 ;;
"raw-ip6") $fiptables -gui raw-ip6 ;;
"security-ip4") $fiptables -gui security-ip4 ;;
"security-ip6") $fiptables -gui security-ip6 ;;
"ebtables") $fiptables -gui ebtables ;;
"arptables") $fiptables -gui arptables ;;
*)
#### 
#### 
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-tool-config: gui with menu ##############################
############################## spanish: gui-menu-tool-config: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-tool-config" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "new-full-config" "nueva-completa-config" "new-mini-config" "nueva-mini-config" \
"list-config" "show-config" "modify-config" "del-config" \
--column="Option list $fiptables" --text="Select one option" --title="[Tool Config] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"new-full-config")
archivo="$(zenity $graphic_dimension --entry --title "[new-full-config]" --text="Input file name to new full configuration")" ;
$fiptables -gui new-full-config $archivo ;;
"nueva-completa-config")
archivo="$(zenity $graphic_dimension --entry --title "[nueva-completa-config]" --text="Introduce el nombre del nuevo archivo cfg")" ;
$fiptables -gui nueva-completa-config $archivo ;;
"new-mini-config")
archivo="$(zenity $graphic_dimension --entry --title "[new-mini-config]" --text="Input file name to new mini configuration")" ;
$fiptables -gui new-mini-config $archivo ;;
"nueva-mini-config")
archivo="$(zenity $graphic_dimension --entry --title "[nueva-mini-config]" --text="Introduce el nombre del nuevo archivo cfg")" ;
$fiptables -gui nueva-mini-config $archivo ;;
"list-config")
$fiptables -gui list-config ;;
"show-config")
archivo="$(zenity $graphic_dimension --entry --title "[show-config]" --text="$($fiptables cfg)")" ;
$fiptables -gui show-config $archivo ;;
"modify-config")
archivo="$(zenity $graphic_dimension --entry --title "[modify-config]" --text="$($fiptables cfg)")" ;
$fiptables -gui modify-config $archivo ;;
"del-config")
archivo="$(zenity $graphic_dimension --entry --title "[del-config]" --text="$($fiptables cfg)")" ;
$fiptables -gui del-config $archivo;;
*)
#### 
#### 
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
#### 
#### 
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-tool-sockets: gui with menu ##############################
############################## spanish: gui-menu-tool-sockets: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-tool-sockets" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "route" "ss" "lsof" "netstat" "netstat-nat" "tcpdump" \
"ipforward-list" "ipforward-on" "ipforward-off" \
--column="Option list $fiptables" --text="Select one option" --title="[Tool Sockets] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu") $fiptables gui-menu ;;
"route") $fiptables -gui route ;;
"ss") $fiptables -gui ss ;;
"lsof") $fiptables -gui lsof ;;
"netstat") $fiptables -gui netstat ;;
"netstat-nat") $fiptables -gui netstat-nat ;;
"tcpdump") $fiptables -gui tcpdump ;;
"ipforward-list") $fiptables -gui ipforward-list ;;
"ipforward-on") $fiptables -gui ipforward-on ;;
"ipforward-off") $fiptables -gui ipforward-off ;;
#### 
#### 
*)
zenity --progress -$graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
#### 
#### 
$fiptables gui-menu 
exit; fi
####
####
############################## english: gui-menu-tool-icmp: gui with menu ##############################
############################## spanish: gui-menu-tool-icmp: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-tool-icmp" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "ping-ip4" "ping-ip6" "speed-ip4" "speed-ip6" \
--column="Option list $fiptables" --text="Select one option" --title="[Tool Icmp] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"ping-ip4")archivo="$(zenity $graphic_dimension --entry --text="[ type the ipv4 or host to ping with ipv4 ]")" ;
$fiptables -gui ping-ip4 $archivo ;;
"ping-ip6")archivo="$(zenity $graphic_dimension --entry --text="[ type the ipv6 or host to ping with ipv6 ]")" ; 
$fiptables -gui ping-ip6 $archivo ;;
"speed-ip4") $fiptables -gui speed-ip4 ;;
"speed-ip6") $fiptables -gui speed-ip6 ;;
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
#### 
#### 
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-tool-tcp: gui with menu ##############################
############################## spanish: gui-menu-tool-tcp: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-tool-tcp" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "trace-ip4" "trace-ip6" "host" "resolveip" "geoip" "ntpdate" \
--column="Option list $fiptables" --text="Select one option" --title="[Tool tcp] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"trace-ip4")archivo="$(zenity $graphic_dimension --entry --text="[ type the ipv4 or host to trace with ipv4 ]")" ;
$fiptables -gui trace-ip4 $archivo ;;
"trace-ip6")archivo="$(zenity $graphic_dimension --entry --text="[ type the ipv6 or host to trace with ipv6 ]")" ; 
$fiptables -gui trace-ip6 $archivo ;;
"host")archivo="$(zenity $graphic_dimension --entry --text="[ type the ipv4 or host to resolve with ipv4 ]")" ;
$fiptables -gui host $archivo ;;
"resolveip")archivo="$(zenity $graphic_dimension --entry --text="[ type the ipv6 or host to resolve with ipv6 ]")" ; 
$fiptables -gui resolveip $archivo ;;
"geoip")archivo="$(zenity $graphic_dimension --entry --text="[ type the ipv4 or host to resolve with ipv4 ]")" ;
$fiptables -gui geoip $archivo ;;
"ntpdate")$fiptables -gui ntpdate ;;
#### 
#### 
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
#### 
#### 
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-tool-sudo: gui with menu ##############################
############################## spanish: gui-menu-tool-sudo: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-tool-sudo" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "sudo-auth" "sudo-remove" "sudo-list" "alias-list" \
--column="Option list $fiptables" --text="Select one option" --title="[Tool Sudo] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"sudo-auth")archivo="$(zenity $graphic_dimension --entry --text="[ type username to allow sudo, username1,username2 ]")" ;
$fiptables -gui sudo-auth $archivo ;;
"sudo-remove")$fiptables -gui sudo-remove ;;
"sudo-list")$fiptables -gui sudo-list ;;
"alias-list")$fiptables -gui alias-list ;;
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
#### 
#### 
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-tool-install: gui with menu ##############################
############################## spanish: gui-menu-tool-install: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-tool-install" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "install" "howto-upgrade" "upgrade" "new-versions" \
--column="Option list $fiptables" --text="Select one option" --title="[Tool Install] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"install")$fiptables -gui install ;;
"howto-upgrade")$fiptables -gui howto-upgrade ;;
"upgrade")$fiptables -gui upgrade ;;
"new-versions")$fiptables -gui new-versions ;;
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
#### 
#### 
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-show-etc: gui with menu ##############################
############################## spanish: gui-menu-show-etc: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-show-etc" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "hosts" "protocols" "services" "hosts.allow" "hosts.deny" "default" \
--column="Option list $fiptables" --text="Select one option" --title="[Show etc] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"hosts") $fiptables -gui hosts ;;
"protocols") $fiptables -gui protocols ;;
"services") $fiptables -gui services ;;
"hosts.allow") $fiptables -gui hosts.allow ;;
"hosts.deny") $fiptables -gui hosts.deny ;;
"default") $fiptables -gui default ;;
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
#### 
#### 
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-show-log: gui with menu ##############################
############################## spanish: gui-menu-show-log: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-show-log" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "log-sudo" "log-sshd" "log-search" \
--column="Option list $fiptables" --text="Select one option" --title="[Show log] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"log-sudo")   $fiptables -gui log-sudo ;;
"log-sshd")   $fiptables -gui log-sshd ;;
"log-search")
pattern="$(zenity $graphic_dimension --entry --text="[ type a one PATTERN to search in log files ]")" ;
$fiptables -gui log-search $pattern;;
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
#### 
#### 
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-show-about: gui with menu ##############################
############################## spanish: gui-menu-show-about: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-show-about" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "about" "version" "depends" "examples" "config-eng" "config-spa" \
--column="Option list $fiptables" --text="Select one option" --title="[Show about] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"about")$fiptables -gui about ;;
"version")$fiptables -gui version ;;
"depends")$fiptables -gui depends ;;
"examples")$fiptables -gui examples ;;
"config-eng")$fiptables -gui config-eng ;;
"config-spa")$fiptables -gui config-spa ;;
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
#### 
#### 
$fiptables gui-menu
exit; fi
####
####
############################## english: gui-menu-show-help: gui with menu ##############################
############################## spanish: gui-menu-show-help: gui con menu  ##############################
####
####
if [ "$first_option" = "gui-menu-show-help" ] ; then $nada ;
selection=$(zenity $graphic_dimension \
--list "Gui Principal Menu" "full-options" "long-help" "help" "ayuda" "notes" \
--column="Option list $fiptables" --text="Select one option" --title="[Show help] [$fiptables]" )
#### 
#### 
case $selection in
1)zenity --info $graphic_dimension --text="$fiptables good bye"; exit ;;
"Gui Principal Menu")$fiptables gui-menu ;;
"full-options")$fiptables -gui full-options ;;
"long-help") $fiptables -gui long-help ;;
"help") $fiptables -gui help ;;
"ayuda") $fiptables -gui ayuda ;;
"notes") $fiptables -gui notes ;;
*)
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" --auto-close --auto-kill ; exit;;
esac
#### 
#### 
$fiptables gui-menu
exit; fi
####
####

############################## english: gui-shell: graphic enviroment          ##############################
############################## spanish: gui-shell: entorno de comandos grafico ##############################
####
####
if [ "$first_option" = "gui-shell" ] ; then $genfiles
echo "Graphics: Wait several seconds.."  ;
case "$which_zenity" in "$NULL") echo " Install zenity to work" ; exit ;; else) ;; esac
####
####
####  english: principal gui  #### spanish: principal gui
####
####
titulo="$fiptables gui-shell"
untexto="$fiptables gui-shell"
####
####
#### cd $directory_config
####
####
menugtk=$(zenity --forms $graphic_dimension --title="[gui shell]  [$fiptables]" \
--text="$($fiptables basic-options)" --add-entry="$fiptables " )
case $? in
1)
####
####
#### zenity --info $graphic_dimension --text="$fiptables good bye";
####
####
zenity --progress $graphic_dimension --timeout=$close_timeout --text="$mensage_timeout" \
--auto-close --auto-kill ; exit;;
esac
####
####
#### english: manage some configs    ####
#### spanish: maneja algunas configs ####
####
####
case $menugtk in
####
####
#### english: new-full-config and nueva-completa-config whithout parameters ####
#### spanish: new-full-config and nueva-completa-config sin parametros      ####
####
####
"new-full-config")
zenity --forms $graphic_dimension --text="$cinco Use: $fiptables new-full-config config.cfg"
;;
"new-mini-config")
zenity --forms $graphic_dimension --text="$cinco Use: $fiptables new-mini-config config.cfg"
;;
"nueva-completa-config")
zenity --forms $graphic_dimension --text="$cinco Use: $fiptables nueva-completa-config config.cfg"
;;
"new-mini-config")
zenity --forms $graphic_dimension --text="$cinco Use: $fiptables nueva-mini-config config.cfg"
;;
"modify-config")
zenity --forms $graphic_dimension --text="$cinco Use: $fiptables modify-config config.cfg"
;;
####
####
#### english: new-full-config and nueva-completa-config whithout parameters and with one space  ####
#### spanish: new-full-config and nueva-completa-config sin parametros y con un espacio         ####
####
####
"new-full-config ")
zenity --forms $graphic_dimension --text="$cinco Use: $fiptables new-full-config config.cfg"
;;
"new-mini-config ")
zenity --forms $graphic_dimension --text="$cinco Use: $fiptables new-mini-config config.cfg"
;;
"nueva-completa-config ")
zenity --forms $graphic_dimension --text="$cinco Use: $fiptables nueva-completa-config config.cfg"
;;
"new-mini-config ")
zenity --forms $graphic_dimension --text="$cinco Use: $fiptables nueva-mini-config config.cfg"
;;
"modify-config ")
zenity --forms $graphic_dimension --text="$cinco Use: $fiptables modify-config config.cfg"
;;
####
####
#### english: several options con parametros
#### spanish: varias opciones con parametros
####
####
new-full-config*)
unarchivo=$(echo $menugtk | sed 's/\///g' | cut -d " " -f 2)
$fiptables -gui new-full-config $unarchivo
;;
nueva-completa-config*)
unarchivo=$(echo $menugtk | sed 's/\///g' | cut -d " " -f 2)
$fiptables -gui nueva-completa-config $unarchivo
;;
new-mini-config*)
unarchivo=$(echo $menugtk | sed 's/\///g' | cut -d " " -f 2)
$fiptables -gui new-mini-config $unarchivo
;;
nueva-mini-config*)
unarchivo=$(echo $menugtk | sed 's/\///g' | cut -d " " -f 2)
$fiptables -gui nueva-mini-config $unarchivo
;;
modify-config*)
unarchivo=$(echo $menugtk | sed 's/\///g' | cut -d " " -f 2)
$fiptables -gui modify-config $unarchivo
;;
show-config*)
unarchivo=$(echo $menugtk | sed 's/\///g' | cut -d " " -f 2)
$fiptables -gui show-config $unarchivo
;;
wizard-full*) $fiptables gui wizard-full ;;
wizard-mini*) $fiptables gui wizard-mini ;;
####
####
#### english: all other otpions    ####
#### spanish: las demas opciones   ####
####
####
"$NULL")
zenity --info $graphic_dimension --text="$fiptables good bye";
zenity --progress $graphic_dimension --timeout=1 --text="Closing gui menu" --auto-close --auto-kill ; exit ;;
*) fecha_temporal=$(date | sed s/\ //g) ; $fiptables $menugtk &> /tmp/fwiptables-$fecha_temporal
zenity --text-info $graphic_dimension --title "[$fiptables gui-shell] [$menugtk]" --filename=/tmp/fwiptables-$fecha_temporal --auto-scroll
rm /tmp/fwiptables-$fecha_temporal
;;
esac
$fiptables gui-shell
exit ; fi
####
####
##############################       english: cli-menu: Manage list rules with one text menu
##############################       spanish: cli-menu: Maneja lista de reglas con un menu de texto
####
####
if [ "$first_option" = "cli-menu" ]; then $nada
case "$which_dialog" in "$NULL") echo " Install dialog to work" ; exit ;; else) ;; esac
#### cd "$directory_config"
menuprincipal="$(dialog --stdout --title "[$fprogram] [version $fversion]" --menu "Select:" 0 0 0\
  000 "$cinco $tab [$fiptables cli-menu] $tab $cinco" \
  010 "$cinco [Tool guide to begin] $cinco" \
  11  "info-system" \
  12  "info-net" \
  13  "wizard-mini" \
  14  "wizard-full" \
  020 "$cinco [Control rules with firewall standard] $cinco" \
  21  "stop" \
  22  "continue" \
  23  "reset" \
  24  "list-fw"  \
  25  "show" \
  26  "save"  \
  27  "load"  \
  28  "actual" \
  030 "$cinco [List rules alphabetical] $cinco" \
  31  "list" \
  32  "forward" \
  33  "nat-ip4" \
  34  "list6"  \
  35  "forward6" \
  36  "nat-ip6" \
  040 "$cinco [List rules numerical] $cinco" \
  41  "listnum" \
  42  "forwardnum" \
  43  "listnum6" \
  44  "forwardnum6" \
  050 "$cinco [List other tables] $cinco"  \
  51  "raw-ip4" \
  52  "raw-ip6" \
  53  "mangle-ip4" \
  54  "mangle-ip6" \
  55  "security-ip4" \
  56  "security-ip6" \
  57  "ebtables" \
  58  "arptables" \
  060 "$cinco [Launch rules iptables with one cfg] $cinco" \
  61  "eraserules" \
  62  "offline" \
  63  "allpermisive" \
  64  "custom cfg" \
  070 "$cinco [Tool configurations cfg] $cinco" \
  71  "new-full-config" \
  72  "nueva-completa-config" \
  73  "new-mini-config" \
  74  "nueva-mini-config" \
  75  "show-config" \
  76  "modify-config" \
  77  "del-config" \
  78  "list-config" \
  080 "$cinco [Tool net sockets and forward] $cinco" \
  81  "route" \
  82  "ss" \
  83  "netstat" \
  84  "lsof" \
  85  "tcpdump" \
  86  "arp" \
  87  "ipforward-list" \
  88  "ipforward-on" \
  89  "ipforward-off" \
  090 "$cinco [Tool icmp test] $cinco" \
  91   "ping-ip4" \
  92   "ping-ip6" \
  0100 "$cinco [Tool tcp test] $cinco"  \
  101  "trace-ip4" \
  102  "trace-ip6" \
  103  "host" \
  104  "resolveip" \
  106  "ntpdate" \
  105  "geoip" \
  0110 "$cinco [tool sudo operations] $cinco"  \
  111  "sudo-auth" \
  112  "sudo-remove" \
  113  "sudo-list" \
  0120 "$cinco [tool install program] $cinco" \
  121  "install" \
  122  "howto-upgrade" \
  123  "upgrade" \
  124  "new-versions" \
  125  "license" \
  0140 "$cinco [Show etc configurations] $cinco" \
  141  "hosts" \
  142  "protocols" \
  143  "services" \
  144  "hosts.allow" \
  145  "hosts.deny" \
  0150 "$cinco [Show log registry] $cinco" \
  151  "log-sudo" \
  152  "log-sshd" \
  153  "log-search" \
  0160 "$cinco [Show about global options] $cinco" \
  161  "about" \
  162  "depends" \
  163  "examples" \
  164  "config-eng" \
  165  "config-spa" \
  0170 "$cinco [Show help global options] $cinco" \
  171  "full-options" \
  172  "help" \
  173  "ayuda" \
  174  "long-help" \
 )"  
#### 
#### 
#### english: dialog choosed #### spanish: dialogo elegido
#### 
#### 
 case "$menuprincipal" in
 0*) reset ;  clear ; dialog --msgbox "Program Menu" 0 0 ; clear ; $fiptables cli-men ;;
 11) clear ; $fiptables "info-system" | less ;;
 12) clear ; $fiptables "info-net" | less ;;
 13) clear ; $fiptables "wizard-mini" ;;
 14) clear ; $fiptables "wizard-full" ;;
 21) clear ; $fiptables stop ;;
 22) clear ; $fiptables continue ;;
 23) clear ; $fiptables reset ;;
 24) clear ; $fiptables list-fw ;;
 25) clear ; $fiptables "list-fw" ; echo "$cincuenta"
 read -p "Type the firewall name to read   " nombrecillo
 nombrecillo=$(echo $nombrecillo | sed s/\\///g) ; $fiptables show $nombrecillo ;; 
 26)archivo="$(dialog --stdout --title "save the firewall format standar" --inputbox "New name" 0 0)"
 archivo=$(echo $archivo | sed s/\\///g)
 clear ;  echo "$cincuenta saved $archivo" ; $fiptables save $archivo ;;
 27) clear ; $fiptables "list-fw" ; echo "$cincuenta"
 read -p "Type the firewall name to restore   " nombrecillo
 nombrecillo=$(echo $nombrecillo | sed s/\\///g) ; $fiptables load $nombrecillo ;;
 28) clear ; $fiptables "actual" ;;
 31) clear ; $fiptables "list" | less ;;
 32) clear ; $fiptables "forward" | less ;;
 33) clear ; $fiptables "nat-ip4" | less ;;
 34) clear ; $fiptables "list6" | less ;;
 35) clear ; $fiptables "forward6" | less ;;
 36) clear ; $fiptables "nat-ip6" | less ;;
 41) clear ; $fiptables "listnum" | less ;;
 42) clear ; $fiptables "forwardnum" | less ;;
 43) clear ; $fiptables "listnum6" | less ;;
 44) clear ; $fiptables "forwardnum6" | less ;;
 51) clear ; $fiptables "raw-ip4" | less ;;
 52) clear ; $fiptables "raw-ip6" | less ;;
 53) clear ; $fiptables "mangle-ip4" | less ;; 
 54) clear ; $fiptables "mangle-ip6" | less ;;
 55) clear ; $fiptables "security-ip4" | less ;;
 56) clear ; $fiptables "security-ip6" | less ;;
 57) clear ; $fiptables "ebtables" | less ;;
 58) clear ; $fiptables "arptables" | less ;;
 61) clear ; $fiptables "eraserules" ;;
 62) clear ; $fiptables "offline";;
 63) clear ; $fiptables "allpermisive" ;;
 64) archivo="$(dialog --title "custom" --stdout --inputbox "$(ls $directory_config)" 0 0)"
 archivo=$(echo $archivo | sed s/\\///g)
 clear ; $fiptables custom $archivo ;;
 71) archivo="$(dialog --stdout --title "new-full-config example: file.cfg" --inputbox "$(ls $directory_config)" 0 0)"
 archivo=$(echo $archivo | sed s/\\///g)
 clear ; $fiptables new-full-config $archivo ;;
 72) archivo="$(dialog --stdout --title "nueva-completa-config example: archivo.cfg" --inputbox "$(ls $directory_config)" 0 0)"
 archivo=$(echo $archivo | sed s/\\///g)
 clear ; $fiptables nueva-completa-config $archivo ;;
 73) archivo="$(dialog --stdout --title "new-mini-config example: file.cfg" --inputbox "$(ls $directory_config)" 0 0)"
 archivo=$(echo $archivo | sed s/\\///g)
 clear ; $fiptables new-mini-config $archivo ;;
 74) archivo="$(dialog --stdout --title "nueva-mini-config example: archivo.cfg" --inputbox "$(ls $directory_config)" 0 0)"
 archivo=$(echo $archivo | sed s/\\///g)
 clear ; $fiptables nueva-mini-config $archivo ;;
 75) archivo="$(dialog --stdout --title "show-config example: file.cfg" --inputbox "$(ls $directory_config)" 0 0)"
 archivo=$(echo $archivo | sed s/\\///g)
 clear ; $fiptables show-config $archivo ; echo "$cinco Launch: $fiptables custom $archivo";;
 76) archivo="$(dialog --stdout --title "modify-config example: file.cfg" --inputbox "$(ls $directory_config)" 0 0)"
 archivo=$(echo $archivo | sed s/\\///g)
 clear ; $fiptables modify-config $archivo ;;
 77) archivo="$(dialog --stdout --title "del-config" --inputbox "$(ls $directory_config)" 0 0)"
 archivo=$(echo $archivo | sed s/\\///g)
 clear ; $fiptables del-config $archivo ; echo "deleted $archivo" ;;
 78) clear ; $fiptables list-config ;;
 81) clear ; $fiptables "route" | less ;;
 82) clear ; $fiptables "ss"  | less ;;
 83) clear ; $fiptables "netstat" | less ;;
 84) clear ; $fiptables "lsof" | less ;;
 85) clear ; $fiptables "tcpdump" | less ;;
 86) clear ; $fiptables arp -a | less ;;
 87) clear ; $fiptables "ipforward-list" | less ;;
 88) clear ; $fiptables "ipforward-on" | less ;;
 89) clear ; $fiptables "ipforward-off" | less ;;
 91) resolve="$(dialog --stdout --title "type host to ping" --inputbox "example: fast.com" 0 0)"
 clear ; $fiptables ping-ip4 $resolve ;;
 92) resolve="$(dialog --stdout --title "type host to ping ipv6" --inputbox "example: fast.com" 0 0)"
 clear ; $fiptables ping-ip6 $resolve ;;
 101) resolve="$(dialog --stdout --title "type host to traceroute" --inputbox "example: fast.com" 0 0)"
 clear ; $fiptables trace-ip4 $resolve ;;
 102) resolve="$(dialog --stdout --title "type host to traceroute ipv6" --inputbox "example: fast.com" 0 0)"
 clear ; $fiptables trace-ip6 $resolve;;
 103) resolve="$(dialog --stdout --title "type host to resolve" --inputbox "example: fast.com" 0 0)"
 clear ; $fiptables host $resolve ;;
 104) resolve="$(dialog --stdout --title "type host  or ip to resolve" --inputbox "example: fast.com" 0 0)"
 clear ; $fiptables resolveip $resolve ;;
 105) resolve="$(dialog --stdout --title "type host or ip to resolve" --inputbox "example: fast.com" 0 0)"
 clear ; $fiptables geoip $resolve ;;
 106) clear ; $fiptables "ntpdate" ;;
 111) resolve="$(dialog --stdout --title "type username to auth sudo" --inputbox "example: user1,user2,user3" 0 0)"
 clear ; $fiptables sudo-auth $resolve ;;
 112) clear ; $fiptables "sudo-remove" ;;
 113) clear ; $fiptables "sudo-list" ;;
 121) clear ; $zero_option "install";;
 122) clear ; $fiptables "howto-upgrade" | less ;;
 123) clear ; $fiptables "upgrade" ;;
 124) clear ; $fiptables "new-versions" | less ;;
 125) clear ; $fiptables "license" | less ;; 
 141) clear ; $fiptables "hosts" | less ;;
 142) clear ; $fiptables "protocols" | less ;;
 143) clear ; $fiptables "services" | less ;;
 144) clear ; $fiptables "hosts.allow" | less ;;
 145) clear ; $fiptables "hosts.deny" | less ;;
 151) clear ; $fiptables "log-sudo" | less ;;
 152) clear ; $fiptables "log-sshd" | less ;;
 153) pattern="$(dialog --stdout --title "type the pattern to search" --inputbox "example: sshd" 0 0)"
 clear ; $fiptables "log-search" "$pattern" | less ;;
 161) clear ; $fiptables "about" | less ;;
 162) clear ; $fiptables "depends" | less ;;
 163) clear ; $fiptables "examples" | less ;;
 164) clear ; $fiptables "config-eng" | less ;;
 165) clear ; $fiptables "config-spa" | less ;;
 171) clear ; $fiptables "full-options" | less ;;
 172) clear ; $fiptables "help" | less ;;
 173) clear ; $fiptables "ayuda" | less ;;
 174) clear ; $fiptables "long-help" | less ;;
 *) clear ; dialog --msgbox "fwiptables good bye" 0 0 ; clear ; exit ;;
 esac 
 echo "press [enter] to continue with the $fiptables cli-menu"
 read -s
 clear
 $fiptables cli-menu
 exit; fi
####
####
##############################       english: version: system script, the version option
##############################       spanish: version: script de sistema, la opcion mostrar version
####
####
 if [ "$first_option" = "version" ]; then $give_cover
 echo "$cinco [ $first_option ] [ Show version about $fiptables ]"
 echo $header_lineal
 echo
 echo "$tab [Name program]"
 echo "$fprogram"
 echo
 echo "$tab [Description program]"
 echo "$fdescription"
 echo
 echo "$tab [Exec program]"
 echo "$directory_fiptables/$fiptables"
 echo
 echo "$tab [File format]"
 file $directory_fiptables/$fiptables | cut -d "," -f 1-2
 echo
 echo "$tab [Config cfg directory]"
 echo "$directory_config"
 echo "$tab [Firewall standard directory]"
 echo "$directory_fwrecover"
 echo "$tab [Config files]"
 echo "variables:    /etc/default/fwiptables"
 echo "completion:   /etc/bash_completion.d/fwiptables"
 echo "auth users:   /etc/sudoers/fwiptables"
 echo "$tab [Output log]"
 echo "output log:   /var/log/fwiptables"
 echo
 echo "$tab [Version program]"
 echo "$fversion"
 echo $footer_lineal
 exit ; fi
####
####
##############################       english: examples: system script to show config files examples
##############################       spanish: examples: script de sistema para mostrar ejemplos de configuraciones
####
####
 if [ "$first_option" = "examples" ]; then $give_cover
 echo "$cinco [ $first_option ] [ Show examples for $fiptables ]"
 echo $header_lineal
####
####
#### config: web example ####
####
####
 echo
 echo "# config web example #" 
 echo "client_tcp=http,https ;"
 echo "client_udp=domain,ntp,bootpc,http ;"
####
####
#### config:  games example  ####
####
####
 echo
 echo "# config games example #"
 echo "client_udp=domain,bootpc,ntp,https,1025:65499; "
 echo "client_tcp=http,https"
####
####
#### config: wesnoth game example ####
####
####
 echo
 echo "# config web example #" 
 echo "client_tcp=http,https,14995:15000 ;"
 echo "client_udp=domain,ntp,bootpc,http ;"
####
####
#### config:  torrent-example1.cfg ####
####
####
 echo
 echo "# config torrent example #"
 echo "client_udp=domain,bootpc,ntp,https,1025:65499; "
 echo "client_tcp=http,https"
####
####
#### config: samba-example1.cfg ####
####
####
 echo
 echo "# config samba example #"
 echo "client_udp=domain,bootpc,ntp,https,137:139 ; "
 echo "client_tcp=http,https,ipp,microsoft-ds"
 echo "allow_output_ping= ; allow_input_ping= ; "
####
####
#### config: vpn-sample1.cfg ##
####
####
 echo
 echo "# config vpn example #"
 echo "allow_forward= ; "
 echo "allow_vpn= ; "
 echo "vpn=wesnoth.org,sourceforge.net"
####
####
#### config: email-example1.cfg ####
####
####
 echo
 echo "# config email example #"
 echo "client_tcp=http,https,rsync,ssh,pop3,pop3s,poppassd,smtp,imap2,imaps"
####
####
#### config: ssh-example1.cfg ####
####
####
 echo
 echo "# config ssh example #"
 echo "client_tcp=http,https,printer,ipp,ssh,rsync,git"
####
####
#### config: vnc-example1.cfg ####
####
####
 echo
 echo "# config vnc example #"
 echo "client_tcp=http,https,ssh,5900:5910"
####
####
#### config: ftp-example1.cfg ##
####
####
 echo
 echo "# config ftp example #"
 echo "client_tcp=http,https,ftp,ftp-data,ftps,ftps-data,gsiftp,zope-ftp"
 echo "client_udp=domain,bootpc,ntp,https,tftp"
####
####
#### config: printer-example1.cfg ####
####
####
 echo
 echo "# config printer example #"
 echo "client_tcp=http,https,ipp,printer"
####
####
#### config: irc-example1.cfg ####
####
####
 echo
 echo "# config irc example #"
 echo "client_tcp=http,https,ircd,ircs-u"
####
####
#### config: sql-example1.cfg ####
####
####
 echo
 echo "# config sql example #"
 echo "client_tcp=http,https,mysql,postgresql,mysql-proxy,ms-sql-s"
####
####
 echo $footer_lineal
 exit ; fi
####
####
##############################       english: license: license gpl v2
##############################       spanish: license: license gpl v2
####
####
 if [ "$first_option" = "license" ]; then $give_cover
 echo "$cinco [ $first_option ] [ Show license from git sourceforge for $fiptables ]"
 echo $header_lineal
 echo "license text for gpl v2 downloading .."
 echo "$ralla" "$ralla" "$ralla"
 $favorite_text_browser -dump "$license_gpl" | more
 echo $footer_lineal
 exit;  fi
####
####
##############################       english: howto-upgrade: upgrade in the file /usr/bin/fwiptables
##############################       spanish: howto-upgrade: actualiza en el archivo /usr/bin/fwiptables
####
####
 if [ "$first_option" = "howto-upgrade" ]; then $give_cover
 echo "$cinco [ $first_option ] [ Show howto upgrade $fiptables  ]"
 echo $header_lineal
 echo "The actually version is: $fiptables $fversion actual"
 echo "  The latest version is:"
 $favorite_text_browser -dump $fweb_newfiles  | grep -i fwiptables | grep -i download | head -1
 echo "$cinco"
 echo "Upgrade The fwiptables in file $directory_fiptables/$fiptables with $favorite_text_browser"
 echo "$cinco    OR download manually   || OR $fiptables upgrade || OR look down: "
 echo "$favorite_text_browser -source $fweb_latest &> /tmp/$fiptables"
 echo "chmod ugo+x /tmp/$fiptables"
 echo "/tmp/$fiptables install"
 echo "$cinco ok and it will be upgrade with the name $directory_fiptables/$fiptables"
 echo $footer_lineal
 exit;  fi
####
####
#############################       english: eraserules: system script, the erase rules option
#############################       spanish: eraserules: script de sistema, la opcion borra reglas
####
####
 if [ "$first_option" = "eraserules" ]; then $give_cover ;
 echo $head_principal
 echo $header_lineal
 $which_iptables_nft -t filter -F
 $which_ip6tables_nft -t filter  -F
 $which_iptables_legacy -t filter -F
 $which_ip6tables_legacy -t filter -F
 $which_iptables_nft -t nat -F
 $which_ip6tables_nft -t nat  -F
 $which_iptables_legacy -t nat -F
 $which_ip6tables_legacy -t nat -F
 echo "$cinco [OK FIREWALL ERASED]"
 echo $footer_lineal
 exit; fi
####
####
#############################       english: route: system script, the route option
#############################       spanish: route: script de sistema, la opcion route
####
####
#### comments: sed is necesary to full work in graphicall
####
####
 if [ "$first_option" = "route" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ Show route tables ]"
 echo $header_lineal
 case $which_ip in  $NULL) echo "$tab [ Install ip command ]" ; exit ;; esac
 echo "$rallica [ ip route ipv4 ] [ mode simplify ]"
 echo "$($which_ip -4 route)"
 echo $ralla
 echo "$rallica [ ip route ipv6 ] [ mode simplify ]"
 echo "$($which_ip -6 route)"
#### case $($which_route) in $NULL) echo "$tab [ Install route command ]" ; exit ;; esac
#### echo $ralla
#### echo "$rallica [ ip route ipv4 ] [ mode lineal ]"
#### echo "$($which_route -4)"
#### echo $ralla
#### echo "$rallica [ ip route ipv6 ] [ mode lineal]"
#### echo "$($which_route -6)"
 echo $footer_lineal
 exit ; fi
####
####
#############################       english: ss: system script, the sockets option
#############################       spanish: ss: script de sistema, la opcion sockets
####
####
 if [ "$first_option" = "ss" ]; then  $give_cover
 case $which_ss in "$NULL") echo "$tab [ Install ss command ]" ; exit ;; esac
 echo "$cinco [ $first_option ] [ Show sockets with ss ]"
 echo $header_lineal
 echo "$tab [ The ipv6 sockets ]"
 $which_ss -a6
 echo "$ralla"
 echo "$tab [ The ipv4 sockets ]"
 $which_ss -a4
 echo $footer_lineal
 exit; fi
####
####
#############################       english: lsof: system script, the lsof option
#############################       spanish: lsof: script de sistema, la lsof sockets
####
####
 if [ "$first_option" = "lsof" ]; then $give_cover
 case $which_lsof in "$NULL") echo "$tab [Install lsof]" ; exit ;; esac
 echo "$cinco [ $first_option ] [ Show sockets with lsof ]"
 echo $header_lineal
 echo "$tab [The sockets with lsof ipv4 ]"
 $which_lsof -i 4
 echo $footer_lineal
 exit; fi
####
####
#############################      english: netstat: system script, the netstat sockets
#############################      spanish: netstat: script de sistema, el netstat sockets
####
####
 if [ "$first_option" = "netstat" ]; then  $give_cover
 case $which_netstat in
 "$NULL") echo "$tab [Install netstat]" ; exit ;; esac
 echo "$cinco [ $first_option ] [ Show sockets with netstat ]"
 echo $header_lineal
 echo "$tab [The sockets list with netstat ]"
 $which_netstat -a -4 -6
 echo $footer_lineal
 exit; fi
####
####
#############################      english: netstat-nat: system script, the netstat sockets
#############################      spanish: netstat-nat: script de sistema, el netstat sockets
####
####
 if [ "$first_option" = "netstat-nat" ]; then  $give_cover
 case $which_netstat_nat in
 "$NULL") echo "$tab [Install netstat-nat]" ; exit ;; esac
 echo "$cinco [ $first_option ] [ Show sockets with netstat-nat ]"
 echo $header_lineal
 echo "$tab [The devices list with netstat]"
 $which_netstat_nat -x
 echo $footer_lineal
 exit; fi
####
####
#############################      english: ipforward-on: active ip forward
#############################      spanish: ipforward-on: activa ip forward
####
####
 if [ "$first_option" = "ipforward-on" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ Active ip forwading in kernel ]"
 echo $header_lineal
 for a in $($which_sysctl -a | grep -i forwarding | cut -d " " -f 1)
 do $which_sysctl -w $a=1 ; done
 echo $footer_lineal
 exit; fi
####
####
#############################      english: ipforward-off: active ip forward
#############################      spanish: ipforward-off: activa ip forward
####
####
 if [ "$first_option" = "ipforward-off" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ Deactive ip forwading in kernel ]"
 echo $header_lineal
 for a in $($which_sysctl -a | grep -i forwarding | cut -d " " -f 1)
 do $which_sysctl -w $a=0 ; done
 echo $footer_lineal
 exit; fi
####
####
#############################  english: filter-ip4: system script, the list option
#############################  spanish: filter-ip4: script de sistema, la opcion lista
####
####
 if [ "$first_option" = "filter-ip4" ]; then  $give_cover
 legacycuatro=$("$which_iptables_legacy" -t filter -L INPUT 1 && \
 "$which_iptables_legacy" -t filter -L OUTPUT 1 ) &> /dev/null
 nftcuatro=$("$which_iptables_nft" -t filter -L INPUT 1 && \
 "$which_iptables_nft" -t filter -L OUTPUT 1 ) &> /dev/null
 echo "$cinco [ $first_option ] [ List iptables filter ipv4 ]"
 echo $header_lineal
 echo $ralla
 case $legacycuatro in
 "$NULL") echo "$rallica [ Without rules xtables ] [ iptables-legacy ]" ;;
 *)
 echo "$rallica [ With rules nftables ] [ iptables-legacy ]"
 $which_iptables_legacy -t filter -v -L
 ;;
 esac
 echo "$ralla"
 case $nftcuatro in
 "$NULL") echo "$rallica [ Without rules nftables ] [ iptables-nft ]" ;;
 *)
 echo "$rallica [ With rules nftables ] [ iptables-nft ]" 
 $which_iptables_nft -t filter -v -L
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################  english: forward: list iptables filter forward rules
############################  spanish: forward: lista reglas de iptables filter forward
####
####
 if [ "$first_option" = "forward" ]; then  $give_cover
 legacycuatro=$("$which_iptables_legacy" -t filter -L FORWARD 1 ) &> /dev/null
 nftcuatro=$("$which_iptables_nft" -t filter -L FORWARD 1 ) &> /dev/null
 echo "$cinco [ $first_option ] [ List iptables filter forward ipv4 ]"
 echo $header_lineal
 echo $ralla
 echo $ralla
 case $legacycuatro in
 "$NULL") echo "$cinco [ Without rules xtables ] [ iptables-legacy ]" ;;
 *)
 echo "$rallica [ With rules xtables ] [ iptables-legacy ] [ FORWARD ] $ralla "
 $which_iptables_legacy -t filter -v -L FORWARD
 ;;
 esac
 echo $ralla
 case $nftcuatro in
 "$NULL") echo "$cinco [ Without rules nftables ] [ iptables-nft ]" ;;
 *)
 echo "$rallica [ With rules nftables ] [ iptables-nft ] [ FORWARD ] $ralla "
 $which_iptables_nft -t filter -v -L FORWARD
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################ english: filter-ip6: list ipv6 rules filter
############################ spanish: filter-ip6: lista reglas de filtros de ipv6
####
####
 if [ "$first_option" = "filter-ip6" ]; then  $give_cover
 legacyseis=$("$which_ip6tables_legacy" -t filter -L INPUT 1 && \
 "$which_ip6tables_legacy" -t filter -L OUTPUT 1 )
 nftseis=$("$which_ip6tables_nft" -t filter -L INPUT 1 && \
 "$which_ip6tables_nft" -t filter -L OUTPUT 1 )
 echo "$cinco [ $first_option ] [ List iptables filter ipv6 ]"
 echo $header_lineal
 echo $ralla
 case $legacyseis in
 "$NULL") echo "$rallica [ Without rules xtables ] [ iptables-legacy ]" ;;
 *)
 echo "$rallica [ With rules xtables ] [ iptables-legacy ]" 
 $which_ip6tables_legacy -v -L
 ;;
 esac
 echo $ralla
 case $nftseis in
 "$NULL") echo "$rallica [ Without rules nftables ] [ iptables-nft ]" ;;
 *)
 echo "$rallica [ With rules nftables ] [ iptables-nft ]" 
 $which_ip6tables_nft -v -L
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################  english: forward6: list iptables filter forward rules ipv6
############################  spanish: forward6: lista reglas de iptables filter forward ipv6
####
####
 if [ "$first_option" = "forward6" ]; then  $give_cover
 legacycuatro=$("$which_ip6tables_legacy" -t filter -L FORWARD 1 && \
 "$which_ip6tables_legacy" -t filter -L FORWARD 1 ) &> /dev/null
 nftcuatro=$("$which_ip6tables_nft" -t filter -L FORWARD 1 && \
 "$which_ip6tables_nft" -t filter -L FORWARD 1 ) &> /dev/null
 echo "$cinco [ $first_option ] [ List iptables filter forward ipv6 ]"
 echo $header_lineal
 echo $ralla
 echo $ralla
 case $legacycuatro in
 "$NULL") echo "$cinco [ Without rules xtables ] [ iptables-legacy ]" ;;
 *)
 echo "$rallica [ With rules xtables ] [ iptables-legacy ] [ FORWARD ] $ralla "
 $which_ip6tables_legacy -t filter -v -L FORWARD
 ;;
 esac
 echo $ralla
 case $nftcuatro in
 "$NULL") echo "$cinco [ Without rules nftables ] [ iptables-nft ]" ;;
 *)
 echo "$rallica [ With rules nftables ] [ iptables-nft ] [ FORWARD ] $ralla "
 $which_ip6tables_nft -t filter -v -L FORWARD
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################ english: nat-ip4: list NAT rules of ipv4
############################ spanish: nat-ip4: lista reglas de NAT de ipv4
####
####
 if [ "$first_option" = "nat-ip4" ]; then  $give_cover
 legacycuatro=$("$which_iptables_legacy" -t nat -L POSTROUTING 1)
 nftcuatro=$("$which_iptables_nft" -t nat -L POSTROUTING 1)
 echo "$cinco [ $first_option ] [ List iptables nat ipv4 ]"
 echo $header_lineal
 echo $ralla
 case $legacycuatro in
 "$NULL") echo "$rallica [ Without rules xtables ] [ iptables-legacy ]" ;;
 *)
 echo "$rallica [ With rules xtables ] [ iptables-legacy ] [ NAT ] $ralla  "
 $which_iptables_legacy -t nat -v -L
 ;;
 esac
 echo $ralla
 case $nftcuatro in 
 "$NULL") echo "$rallica [ Without rules nftables ] [ iptables-nft ]" ;;
 *)
 echo "$rallica [ With rules nftables ] [ iptables-nft ] [ NAT ] $ralla "
 $which_iptables_nft -t nat -v -L 
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################ english: nat-ip6: list NAT rules of ipv6
############################ spanish: nat-ip6: lista reglas de NAT de ipv6
####
####
 if [ "$first_option" = "nat-ip6" ]; then $give_cover
 legacyseis=$("$which_ip6tables_legacy" -t nat -L POSTROUTING 1)
 nftseis=$("$which_ip6tables_nft" -t nat -L POSTROUTING 1)
 echo "$cinco [ $first_option ] [ List iptables nat ipv6 ]"
 echo $header_lineal
 echo $ralla
 case $legacyseis in
 "$NULL") echo "$rallica [ Without rules xtables ] [ iptables-legacy ]" ;;
 *)
 echo "$rallica [ With rules xtables ] [ iptables-legacy ]  [ NAT ] $ralla "
 $which_ip6tables_legacy -t nat -v -L 
 ;;
 esac
 echo $ralla
 case $nftseis in
 "$NULL") echo "$rallica [ Without rules nftables ] [ iptables-nft ]" ;;
 *)
 echo "$rallica [ With rules nftables ] [ iptables-nft ]  [ NAT ] $ralla "
 $which_ip6tables_nft -t nat -v -L 
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################# english: listnum: list option numerical filter ipv4
############################# spanish: listnum: lista numeral filter ipv4
####
####
if [ "$first_option" = "listnum" ]; then  $give_cover
legacycuatro=$("$which_iptables_legacy" -t filter -L INPUT 1 && \
"$which_iptables_legacy" -t filter -L OUTPUT 1)
nftcuatro=$("$which_iptables_nft" -t filter -L INPUT 1 && \
"$which_iptables_nft" -t filter -L OUTPUT 1 )
 echo "$cinco [ $first_option ] [ List iptables filter ipv4 in numerical ]"
 echo $header_lineal
 echo $ralla
 case $legacycuatro in
 "$NULL") echo "$rallica [Without rules netfilter] [iptables-nft]" ;;
 *)
 echo "$rallica [With rules netfilter] [iptables-nft]"  
 $which_iptables_legacy -v -n -L 
 ;;
 esac
 echo $ralla
 case $nftcuatro in
 "$NULL") echo "$rallica [ Without rules nftables ] [ iptables-nft ]" ;;
 *)
 echo "$rallica [ With rules nftables ] [ iptables-nft ]"  
 $which_iptables_nft -v -n -L
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################  english: forwardnum: list iptables filter forward rules in numerical
############################  spanish: forwardnum: lista reglas de iptables filter forward in numeros
####
####
 if [ "$first_option" = "forwardnum" ]; then  $give_cover
 legacycuatro=$("$which_iptables_legacy" -t filter -L FORWARD 1) &> /dev/null
 nftcuatro=$("$which_iptables_nft" -t filter -L FORWARD 1) &> /dev/null
 echo "$cinco [ $first_option ] [ List iptables filter forward ipv4 in numerical ]"
 echo $header_lineal
 echo $ralla
 echo $ralla
 case $legacycuatro in
 "$NULL") echo "$cinco [ Without rules xtables ] [ iptables-legacy ]" ;;
 *)
 echo "$rallica [ With rules xtables ] [ iptables-legacy ] [ FORWARD ] $ralla "
 $which_iptables_legacy -t filter -v -n -L FORWARD
 ;;
 esac
 echo $ralla
 case $nftcuatro in
 "$NULL") echo "$cinco [ Without rules nftables ] [ iptables-nft ]" ;;
 *)
 echo "$rallica [ With rules nftables ] [ iptables-nft ] [ FORWARD ] $ralla "
 $which_iptables_nft -t filter -v -n -L FORWARD
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################# english: listnum6: list option numerical filter ipv6
############################# spanish: listnum6: lista numeral filter ipv6
####
####
 if [ "$first_option" = "listnum6" ]; then  $give_cover
 legacyseis=$("$which_ip6tables_legacy" -t filter -L OUTPUT 1 && \
 "$which_ip6tables_legacy" -t filter -L OUTPUT 1 )
 nftseis=$("$which_ip6tables_nft" -t filter -L OUTPUT 1 && \
 "$which_ip6tables_nft" -t filter -L OUTPUT 1 )
 echo "$cinco [ $first_option ] [ List iptables filter ipv6 in numerical ]"
 echo $header_lineal
 echo $ralla
 case $legacyseis in
 "$NULL") echo "$rallica [ Without rules xtables ] [ iptables-legacy ]" ;;
 *)
  echo "$cinco [ With rules xtables ] [ iptables-legacy ]" 
 $which_ip6tables_legacy -v -n -L 
 ;;
 esac
 echo $ralla
 case $nftseis in
 "$NULL") echo "$rallica [ Without rules nftables ] [ iptables-nft ]" ;;
 *)
  echo "$cinco [ With rules xtables ] [ iptables-legacy ]" 
 $which_ip6tables_nft -v -n -L
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################  english: forwardnum6: list iptables filter forward rules in numerical ipv6
############################  spanish: forwardnum6: lista reglas de iptables filter forward in numeros ipv6
####
####
 if [ "$first_option" = "forwardnum6" ]; then  $give_cover
 legacycuatro=$("$which_ip6tables_legacy" -t filter -L FORWARD 1) &> /dev/null
 nftcuatro=$("$which_ip6tables_nft" -t filter -L FORWARD 1) &> /dev/null
 echo "$cinco [ $first_option ] [ List iptables filter forward ipv6 in numerical ]"
 echo $header_lineal
 echo $ralla
 echo $ralla
 case $legacycuatro in
 "$NULL") echo "$cinco [ Without rules in xtables ] [ iptables-legacy ] " ;;
 *)
 echo "$rallica [ With rules xtables ] [ iptables-legacy ] [ FORWARD ] $ralla "
 $which_ip6tables_legacy -t filter -v -n -L FORWARD
 ;;
 esac
 echo $ralla
 case $nftcuatro in
 "$NULL") echo "$cinco [ Without rules nftables ] [ iptables-nft ]" ;;
 *)
 echo "$rallica [ With rules nftables ] [ iptables-nft ] [ FORWARD ] $ralla "
 $which_ip6tables_nft -t filter -v -n -L FORWARD
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################       english: mangle-ip4: list mangle rules from ipv4
############################       spanish: mangle-ip4: lista reglas de mangle de ipv4
####
####
 if [ "$first_option" = "mangle-ip4" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ List iptables mangle ipv4 ]"
 echo $header_lineal
 echo $ralla
 echo $ralla
 echo "$rallica [ The xtables ] [ iptables-legacy ] [ MANGLE ] $ralla "
 $which_iptables_legacy -t mangle -v -L
 echo $ralla
 echo "$rallica [ The nftables ] [ iptables-nft ] [ MANGLE ] $ralla "
 $which_iptables_nft -t mangle -v -L
 echo $footer_lineal
 exit; fi
####
####
############################       english: mangle-ip6: list mangle rules from ipv6
############################       spanish: mangle-ip6: lista reglas de mangle de ipv6
####
####
 if [ "$first_option" = "mangle-ip6" ]; then $give_cover
 echo "$cinco [ $first_option ] [ List iptables mangle ipv6 ]"
 echo $header_lineal
 echo $ralla
 echo "$rallica [ The xtables ] [ iptables-legacy ] [ MANGLE ] $ralla "
 $which_ip6tables_legacy -t mangle -v -L
 echo $ralla
 echo "$rallica [ The nftables ] [iptables-nft ] [ MANGLE ] $ralla "
 $which_ip6tables_nft -t mangle -v -L
 echo $footer_lineal
 exit; fi
####
####
############################       english: raw-ip4: list raw rules from ipv4
############################       spanish: raw-ip4: lista reglas raw de ipv4
####
####
 if [ "$first_option" = "raw-ip4" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ List iptables raw ipv4 ]"
 echo $header_lineal
 echo $ralla
 echo "$rallica  [ The xtables ] [ iptables-legacy ] [ RAW ] $ralla "
 $which_iptables_legacy -t raw -v -L
 echo $ralla
 echo "$rallica [ The nftables ] [ iptables-nft ] [ RAW ] $ralla "
 $which_iptables_nft -t raw -v -L
 echo $footer_lineal
 exit; fi
####
####
############################       english: raw-ip6: list raw rules from ipv6
############################       spanish: raw-ip6: lista reglas raw de ipv6
####
####
 if [ "$first_option" = "raw-ip6" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ List iptables raw ipv6 ]"
 echo $header_lineal
 echo $ralla
 echo $ralla
 echo "$rallica [ The xtables ] [ iptables-legacy ] [ RAW ] $ralla "
 $which_ip6tables_legacy -t raw -v -L
 echo $ralla
 echo "$rallica [ The nftables ] [ iptables-nft ] [ RAW ] $ralla "
 $which_ip6tables_nft -t raw -v -L
 echo $footer_lineal
 exit; fi
####
####
############################       english: security-ip4: list security rules from ipv4
############################       spanish: security-ip4: lista reglas de security de ipv4
####
####
 if [ "$first_option" = "security-ip4" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ List iptables security ipv4 ]"
 echo $header_lineal
 echo $ralla
 echo $ralla
 echo "$rallica [ The xtables ] [ iptables-legacy ] [ SECURITY ] $ralla "
 $which_iptables_legacy -t security -v -L
 echo $ralla
 echo "$rallica [ The nftables ] [ iptables-nft ] [ SECURITY ] $ralla "
 $which_iptables_nft -t security -v -L
 echo $footer_lineal
 exit; fi
####
####
############################       english: security-ip6: list security rules from ipv6
############################       spanish: security-ip6: lista reglas de security de ipv6
####
####
 if [ "$first_option" = "security-ip6" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ List iptables security ipv6 ]"
 echo $header_lineal
 echo $ralla
 echo $ralla
 echo "$rallica [ The xtables ] [ iptables-legacy ] [ SECURITY ] $ralla "
 $which_ip6tables_legacy -t security -v -L
 echo $ralla
 echo "$rallica [ The nftables ] [ iptables-nft ] [ SECURITY ] $ralla "
 $which_ip6tables_nft -t security -v -L
 echo $footer_lineal
 exit; fi
####
####
############################       english: ebtables: list ebtables rules with mac
############################       spanish: ebtables: lista reglas de ebtables with mac
####
####
 if [ "$first_option" = "ebtables" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ List ebtables ]"
 echo $header_lineal
 echo $ralla
 echo $ralla
 echo "$rallica [ ebtables: filter ethernet nft ] [ EBTABLES ] $ralla "
 $which_ebtables -L -t filter
 echo $ralla
 echo "$rallica [ ebtables: nat ethernet nft ] [ EBTABLES ] $ralla "
 $which_ebtables -L -t nat
 echo $footer_lineal
 exit; fi
####
####
############################       english: ebtables: list rules arptables with arp
############################       spanish: ebtables: lista reglas de arptables with arp
####
####
####
####
 if [ "$first_option" = "arptables" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ List arptables ipv4 ]"
 echo $header_lineal
 echo $ralla
 echo $ralla
 $which_arptables -L
 echo $footer_lineal
 exit; fi
####
####
############################       english: new-full-config: new-full-config option to create new configs
############################       spanish: new-full-config: new-full-config para cear nuevas config
####
####
if [ "$first_option" = "new-full-config" ]; then $genfiles
case $second_option in "$NULL") config_option="si" ;; esac
case "$config_option" in
"si")
echo $head_principal
echo $header_lineal
echo "$cinco Use: $fiptables new-full-config config-new"
exit ;; esac
echo $head_principal
echo $header_lineal
archivo="$second_option"
cp "$defaultfullcfg_eng" "/tmp/fiptables-$archivo"
dialog --no-cancel --title "MODIFY FILE" --editbox "/tmp/fiptables-$archivo" 0 0 2> "$directory_config/$archivo"
if [ ! -s "$directory_config/$second_option" ]; then $nada ; 
rm "$directory_config/$second_option"
dialog --msgbox "[Canceled. file modify $second_option]" 0 0 ; clear
else  dialog --msgbox "[OK. file modify $second_option]" 0 0 ; clear; fi 
echo $footer_lineal
exit ; fi
####
####
############################       english: nueva-completa-config: create new configs
############################       spanish: nueva-completa-config: nueva-completa-config para cear nuevas config
####
####
if [ "$first_option" = "nueva-completa-config" ]; then $genfiles
case $second_option in "$NULL") config_option="si" ;; esac 
case "$config_option" in
"si")
echo $head_principal
echo $header_lineal
echo "$cinco Use: $fiptables nueva-completa-config config-nueva"
exit ;; esac
echo $head_principal
echo $header_lineal
archivo="$second_option"
cp "$defaultfullcfg_spa" "/tmp/fiptables-$archivo"
dialog --no-cancel --title "MODIFY FILE" --editbox "/tmp/fiptables-$archivo" 0 0 2> "$directory_config/$archivo"
if [ ! -s "$directory_config/$second_option" ]; then $nada ; 
rm "$directory_config/$second_option"
dialog --msgbox "[Canceled. file modify $second_option]" 0 0 ; clear
else  dialog --msgbox "[OK. file modify $second_option]" 0 0 ; clear; fi 
echo $footer_lineal
exit ; fi
####
####
############################       english: new-mini-config: create new configs
############################       spanish: new--mini config:cear nuevas config
####
####
if [ "$first_option" = "new-mini-config" ]; then $genfiles
case $second_option in "$NULL") config_option="si" ;; esac
case "$config_option" in
"si")
echo $head_principal
echo $header_lineal
echo "$cinco Use: $fiptables new-mini-config config-new" ; exit ;; esac
echo $head_principal
echo $header_lineal
archivo="$second_option"
cp "$defaultminicfg_eng" "/tmp/fiptables-$archivo"
dialog --no-cancel --title "MODIFY FILE" --editbox "/tmp/fiptables-$archivo" 0 0 2> "$directory_config/$archivo"
if [ ! -s "$directory_config/$second_option" ]; then $nada ; 
rm "$directory_config/$second_option"
dialog --msgbox "[Canceled. file modify $second_option]" 0 0 ; clear
else  dialog --msgbox "[OK. file modify $second_option]" 0 0 ; clear; fi 
echo $footer_lineal
exit ; fi
####
####
############################       english: nueva-mini-config: create new configs
############################       spanish: nueva-mini-config: crea nuevas config
####
####
if [ "$first_option" = "nueva-mini-config" ]; then $genfiles
case $second_option in "$NULL") config_option="si" ;; esac
case "$config_option" in
"si")
echo $header_lineal
echo "$cinco Use: $fiptables nueva-mini-config config-nueva" ; exit ;; esac
echo $head_principal
echo $header_lineal
archivo="$second_option"
cp "$defaultminicfg_spa" "/tmp/fiptables-$archivo"
dialog --no-cancel --title "MODIFY FILE" --editbox "/tmp/fiptables-$archivo" 0 0 2> "$directory_config/$archivo"
if [ ! -s "$directory_config/$second_option" ]; then $nada ; 
rm "$directory_config/$second_option"
dialog --msgbox "[Canceled. file modify $second_option]" 0 0 ; clear
else  dialog --msgbox "[OK. file modify $second_option]" 0 0 ; clear; fi 
echo $footer_lineal
exit ; fi
####
####
############################       english: modify-config: modify a one config.cfg
############################       spanish: modify-config: modify una configuracion.cfg
####
####
if [ "$first_option" = "modify-config" ]; then $nada
cp "$directory_config/$second_option" "/tmp/fiptables-$second_option" &> /dev/null
####
###
if [ ! -f "$directory_config"/"$second_option" ] ; then $nada
echo "$cinco Use: $fiptables modify-config config-existent" ; exit; fi
####
####
if [ -f "$directory_config"/"$second_option" ] ; then $nada
dialog --no-cancel --title "MODIFY FILE" --editbox "/tmp/fiptables-$second_option" 0 0 2> "$directory_config/$second_option"
clear; fi
####
####
if [  -s "$directory_config/$second_option" ] ; then
dialog --msgbox "[OK file modify config file: $second_option]" 0 0 
clear ; exit ; fi
####
####
if [ ! -s "$directory_config/$second_option" ] ; then $nada
cp "/tmp/fiptables-$second_option" "$directory_config/$second_option" &> /dev/null
dialog --msgbox "[Canceled file modify config file: $second_option]" 0 0 
clear ; exit ; fi
####
####
clear ; exit ; fi
####
####
############################       english: show-config: show a one config
############################       spanish: show-config: muestra una configuracion
####
####
if [ "$first_option" = "show-config" ] ; then echo "hola"
####
####
if [ ! -f "$directory_config"/"$second_option" ] ; then 
echo "$cinco Use: $fiptables show-config config-old" ; exit; fi
####
####
if [ -f "$directory_config"/"$second_option" ] ; then 
cat $directory_config/$second_option ;
echo $footer_lineal ; exit ; fi
####
####
exit; fi
############################       english: del-config: delete a old config
############################       spanish: del-config: elimina una vieja configuracion
####
####
if [ "$first_option" = "del-config" ]; then $nada
####
####
if [ ! -f $directory_config/$second_option ] ; then
echo "$cinco Use: $fiptables del-config config-old" ; exit ; fi
####
####
if [ -f $directory_config/$second_option ] ; then
rm $directory_config/$second_option
echo "$directory_config/$second_option Deleted"
echo $footer_lineal ; exit ; fi
####
####
exit ; fi
####
####
############################       english: sudo-auth: the sudo-auth option en english
############################       spanish: sudo-auth: la opcion de sudo-auth en ingles
####
####
if [ "$first_option" = "sudo-auth" ]; then $nada
case $second_option in
"$NULL") echo $head_principal ; echo $header_lineal ; echo "$cinco Use: $fiptables sudo-auth user" ; exit ;;
*) autorizados="$second_option" ;; esac
echo "$autorizados ALL=(root) NOPASSWD: $directory_fiptables/$fiptables " &> /etc/sudoers.d/$fiptables
echo "alias $fiptables='sudo $fiptables'" &>  /etc/bash_completion.d/$fiptables
echo "$cinco $cinco"
echo "$cinco    Ok. $autorizados will use:     $fiptables"
echo "$cinco    Ok. $fiptables will use alias with sudo "
echo "$cinco $cinco"
echo "$cinco sudoer file:   /etc/sudoers.d/$fiptables"
cat /etc/sudoers.d/$fiptables
echo $footer_lineal
exit; fi
####
####
############################       english: sudo-remove: the sudo-remove option en english
############################       spanish: sudo-remove: la opcion de sudo-remove en ingles
####
####
if [ "$first_option" = "sudo-remove" ]; then $nada
rm /etc/sudoers.d/$fiptables
echo "$cinco deleted auth sudo"
echo "deleted /etc/sudoers.d/$fiptables"
echo $footer_lineal
exit; fi
####
####
############################       english: sudo-list: the sudo-auth option en english
############################       spanish: sudo-list: la opcion de sudo-auth en ingles
####
####
if [ "$first_option" = "sudo-list" ] && [ -f /etc/sudoers.d/$fiptables ] ; then $give_cover
echo "$cinco [ $first_option ] [ list users with root auth for launch $fiptables ]"
echo "$cinco With root sudo for $fiptables from some user"
echo "$cinco sudoer file:   /etc/sudoers.d/$fiptables"
cat /etc/sudoers.d/$fiptables
echo $footer_lineal
exit; fi
####
####
if [ "$first_option" = "sudo-list" ] && [ ! -f /etc/sudoers.d/$fiptables ] ; then $give_cover
echo "$cinco [ list users with root auth for launch $fiptables ]"
echo $header_lineal
echo "$cinco Wihtout root sudo from users"
echo $footer_lineal
exit; fi
####
####
############################       english: alias-list: the sudo-auth option en english
############################       spanish: alias-list: la opcion de sudo-auth en ingles
####
####
if [ "$first_option" = "alias-list" ]; then $give_cover
echo "$cinco [ $first_option ] [ list alias and autocomplete for $fiptables ]"
echo $header_lineal
echo "$cinco alias file:   /etc/bash_completion.d/$fiptables"
cat /etc/bash_completion.d/$fiptables
echo $footer_lineal
exit; fi
####
####
############################       english: ipforward-list: the ipforwading option en english
############################       spanish: ipforward-list: la opcion de reenvios  en ingles
####
####
 if [ "$first_option" = "ipforward-list" ]; then $give_cover
 echo "$cinco [ $first_option ] [ Show ip forwading in kernel ]"
 echo $header_lineal
 echo "$cinco  Active 1 or deactive 0 for ipforwading with sysctl:     $cinco"
 $which_sysctl -a | grep -i forwarding
 echo $footer_lineal
 exit; fi
####
####
############################       english: tcpdump: listen at dump from conexiones
############################       spanish: tcpdump: escucha al volcado de conexiones
####
####
 if [ "$first_option" = "tcpdump" ]; then $give_cover
 case $(which tcpdump) in "$NULL") echo " Install tcpdump" ;;
 *) 
 echo "$cinco [ launch several seconds tcpdump ]"
 echo $header_lineal
 if [ "$second_option" = "$NULL" ]; then second_option="4"; fi
 echo "Waiting $second_option seconds to tcpdump .."
 echo "$ralla" "$ralla" "$ralla"
 timeout -s SIGINT -v $second_option tcpdump -v
 echo "$ralla" "$ralla" "$ralla"
 echo "[ Launch: ] [ $fiptables $first_option seconds ] [ for default 4 seconds ]"
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################       english: arp: listen at dump from conexiones
############################       spanish: arp: escucha al volcado de conexiones
####
####
 if [ "$first_option" = "arp" ]; then  $give_cover
 case $which_arp in "$NULL") echo "install arp" ;;
 *)
 echo "$cinco [ $first_option ] [ Show cache arp ]"
 echo $header_lineal
 $which_arp -a
 ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################       english: default: show /etc/default/fwiptables
############################       spanish: default: show /etc/default/fwiptables
####
####
 if [ "$first_option" = "default" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ show the /etc/default/fwiptables ]"
 echo $header_lineal
 cat /etc/default/fwiptables
 echo $footer_lineal
 echo "$cinco edit file /etc/default/fwiptables to change variables"
 echo $footer_lineal
 exit; fi
####
####
############################       english: names: file list whith rules in iptables format
############################       spanish: names: lista de archivos con reglas en formato iptables
####
####
 if [ "$first_option" = "names" ]; then $genfiles
 echo "$cinco [ $first_option ] [ List names from firewall saved ]"
 echo $header_lineal
 echo "$cinco $tab [English:] [File list with iptables format in folder:] [$directory_fwrecover]"
 echo "$cinco $tab [Spanish:] [Lista de archivos con iptables formato en carpeta:] [$directory_fwrecover]"
 ls -1 $directory_fwrecover | sed s/\-legacy\-ipv6//g | sed s/\-nft\-ipv6//g | sed s/\-legacy\-ipv4//g | sed s/\-nft\-ipv4//g | sort -u
 echo "$cinco  [OK FIREWALL NAMES]"
 echo $footer_lineal
 exit; fi
####
####
##############################       english: reset: reset counter rules
##############################       spanish: reset: resetea contadores de reglas
####
####
if [ "$first_option" = "reset" ]; then $nada
echo "$cinco [ $first_option ] [ Reset the firewall ]"
echo $header_lineal
$fiptables stop &> /dev/null
$fiptables continue &> /dev/null
echo "$cinco [OK FIREWALL RESETED]"
echo $footer_lineal
exit; fi
####
####
##############################       english: wizard-mini: wizard-mini
##############################       spanish: wizard-mini: mini-asistente 
####
####
if [ "$first_option" = "wizard-mini" ]; then $genfiles
archivo="$first_option"
cp "$defaultminicfg_eng" "/tmp/fiptables-$archivo"
dialog --no-cancel --title "MODIFY FILE" --editbox "/tmp/fiptables-$archivo" \
0 0 2> "$directory_config/$archivo"
clear
if [  -s "$directory_config/$archivo" ]; then $nada ; 
dialog --msgbox "wizard full ready" 0 0 ; clear ; $fiptables custom "$archivo" ; $fiptables listnum ;
else rm "$directory_config/$archivo" ; dialog --msgbox "Wizard full canceled" 0 0 ; clear ; fi
echo $footer_lineal
exit; fi
####
####
##############################       english: wizard-full: wizard-full
##############################       spanish: wizard-full: asistente 
####
####
if [ "$first_option" = "wizard-full" ]; then $genfiles
archivo="$first_option"
cp "$defaultfullcfg_eng" "/tmp/fiptables-$archivo"
dialog --no-cancel --title "MODIFY FILE" --editbox "/tmp/fiptables-$archivo" \
0 0 2> "$directory_config/$archivo"
clear
if [  -s "$directory_config/$archivo" ]; then $nada ; 
$dialog --msgbox "Wizard full ready" 0 0 ; clear ; $fiptables custom "$archivo" ; $fiptables listnum ;
else rm "$directory_config/$archivo" ; dialog --msgbox "Wizard full canceled" 0 0 ; clear ; fi
echo $footer_lineal
exit; fi
####
####
############################       english: load: load the rules in iptables format
############################       spanish: load: carga las reglas en formato iptables
####
####
 if [ "$first_option" = "load" ]; then $nada
####
####
#### English: Void in second option
####
####
if [ "second_option" = "$NULL" ]; then
$fiptables names; echo "$cinco [ usage: $fiptables load fw-to-load ] [ See: $fiptables names ]" ; exit ; fi
####
####
#### English if do exist second option in load
####
####
if [ -f $directory_fwrecover/$second_option-nft-ipv4 ] || [ -f $directory_fwrecover/$second_option-legacy-ipv4 ] ; then 
####
####
#### English: Remove all rules
####
####
$fiptables eraserules &> /dev/null
####
####
#### English: Load all rules
####
####
 $which_iptables_nft-restore $directory_fwrecover/$second_option-nft-ipv4 &>> /dev/null
 $which_iptables_legacy-restore $directory_fwrecover/$second_option-legacy-ipv4 &>> /dev/null
 $which_ip6tables_nft-restore $directory_fwrecover/$second_option-nft-ipv6 &>> /dev/null
 $which_ip6tables_legacy-restore $directory_fwrecover/$second_option-legacy-ipv6 &>> /dev/null
 echo "$cinco [ OK FIREWALL LOADED ] [ $second_option ]"
 else
 $fiptables names
 echo "$cinco [ usage: $fiptables load fw-to-load ] [ See: $fiptables names ]"
 fi 
####
####
 echo $footer_lineal
 exit; fi
####
####
############################       english: save: save the rules in iptables format
############################       spanish: save: guarda las reglas en formato iptables
####
####
 if [ "$first_option" = "save" ]; then $nada
 case "$second_option" in
 "$NULL") echo "$cinco Use in the command line: $fiptables save fw-to-save" ; exit ;;
 *) archivofin="$second_option" ;; 
 esac
 $which_iptables_nft-save &> $directory_fwrecover/$archivofin-nft-ipv4
 $which_iptables_legacy-save &> $directory_fwrecover/$archivofin-legacy-ipv4
 $which_ip6tables_nft-save &> $directory_fwrecover/$archivofin-nft-ipv6
 $which_ip6tables_legacy-save &> $directory_fwrecover/$archivofin-legacy-ipv6
 echo "$cinco [ OK FIREWALL SAVED ] [ $archivofin ]"
 ls -l $directory_fwrecover/$archivofin-nft-ipv4
 ls -l $directory_fwrecover/$archivofin-nft-ipv6
 ls -l $directory_fwrecover/$archivofin-legacy-ipv4
 ls -l $directory_fwrecover/$archivofin-legacy-ipv6
 echo "$cinco [ OK FIREWALL LISTED ] [ $archivofin ]"
 echo $footer_lineal
 exit; fi
####
####
############################       english: show: show the rules from one firewall in iptables format
############################       spanish: show: muestra las reglas de un firewall en formato iptables
####
####
 if [ "$first_option" = "show" ]; then $genfiles
 echo "$cinco [ $first_option ] [ show one firewall saved ]"
 echo $header_lineal
 case "$second_option" in
 "$NULL") $fiptables names; echo "$cinco Use in the command line: $fiptables show file-to-show" ; exit ;;
 *) archivofin=$(sed 's/\///g' <<< "$second_option") ;;
 esac
 ls -l $directory_fwrecover/$archivofin-nft-ipv4
 ls -l $directory_fwrecover/$archivofin-nft-ipv6
 ls -l $directory_fwrecover/$archivofin-legacy-ipv4
 ls -l $directory_fwrecover/$archivofin-legacy-ipv6
 echo "$cinco [ OK FIREWALL LISTED ] [ $archivofin ]"
 echo "$cincuenta $archivofin-nft-ipv4"
 cat $directory_fwrecover/$archivofin-nft-ipv4
 echo "$cincuenta $archivofin-legacy-ipv4"
 cat $directory_fwrecover/$archivofin-legacy-ipv4
 echo "$cincuenta $archivofin-nft-ipv6"
 cat $directory_fwrecover/$archivofin-nft-ipv6
 echo "$cincuenta archivofin-legacy-ipv6"
 cat $directory_fwrecover/$archivofin-legacy-ipv6
 echo "$cinco [ OK FIREWALL READED ] [ $archivofin ]"
 echo $footer_lineal
 exit; fi
####
####
############################       english: actual: show actuall firewall
############################       spanish: actual: muestra las reglas actuales
####
####
 if [ "$first_option" = "actual" ]; then $genfiles
 echo "$cinco [ $first_option ] [ show the last firewall saved ]"
 echo $header_lineal
 $which_iptables_nft-save &> $directory_fwrecover/last-nft-ipv4
 $which_iptables_legacy-save &> $directory_fwrecover/last-legacy-ipv4
 $which_ip6tables_nft-save &> $directory_fwrecover/last-nft-ipv6
 $which_ip6tables_legacy-save &> $directory_fwrecover/last-legacy-ipv6
 echo "$cincuenta nft with ipv4 $cinco"
 cat $directory_fwrecover/last-nft-ipv4
 echo "$cincuenta legacy with ipv4 $cinco"
 cat $directory_fwrecover/last-legacy-ipv4
 echo "$cincuenta nft with ipv6 $cinco"
 cat $directory_fwrecover/last-nft-ipv6
 echo "$cincuenta legacy with ipv6 $cinco"
 cat $directory_fwrecover/last-legacy-ipv6
 echo "$cinco  [ OK FIREWALL READED ACTUAL ]"
 echo $footer_lineal
 exit; fi
####
####
##############################       english: stop: stop firewall
##############################       spanish: stop: para el firewall
####
####
if [ "$first_option" = "stop" ]; then $nada
echo $head_principal
echo "$cinco [ $first_option ] [ Stop the firewall ]"
echo $header_lineal
####
####
#### english: save actual fw #### spanish: guarda actual fw
####
####
$which_iptables_nft-save &> $directory_fwrecover/stoped-nft-ipv4
$which_iptables_legacy-save &> $directory_fwrecover/stoped-legacy-ipv4
$which_ip6tables_nft-save &> $directory_fwrecover/stoped-nft-ipv6
$which_ip6tables_legacy-save &> $directory_fwrecover/stoped-legacy-ipv6
####
####
#### english: erase the rules #### spanish: borra las reglas
####
####
$fiptables eraserules &> /dev/null
echo "$cinco [ OK FIREWALL STOPED ]"
echo $footer_lineal
exit; fi
####
####
##############################       english: continue: continue the firewall
##############################       spanish: continue: continua el firewall
####
####
if [ "$first_option" = "continue" ]; then $nada
echo $head_principal
echo "$cinco [ $first_option ] [ Continue the stoped firewall ]"
echo $header_lineal
####
####
#### english: restore last fw #### spanish: restaura el ultimo fw
####
####
$which_iptables_nft-restore  $directory_fwrecover/stoped-nft-ipv4
$which_iptables_legacy-restore  $directory_fwrecover/stoped-legacy-ipv4
$which_ip6tables_nft-restore  $directory_fwrecover/stoped-nft-ipv6
$which_ip6tables_legacy-restore $directory_fwrecover/stoped-legacy-ipv6
echo "$cinco [ OK FIREWALL CONTINUED ]"
echo $footer_lineal
exit; fi
####
####
############################       english: ping-ip4: ping icmp with ipv4
############################       spanish: ping-ip4: ping icmp with ipv6
####
####
 if [ "$first_option" = "ping-ip4" ]; then $nada
 echo "$cinco [ $first_option ]  [ ping ip or host with ipv4 ]"
 echo $header_lineal
 case $which_ping in "$NULL") echo " Install ping" ; exit ;; esac
####
####
#### english: ask for continue #### spanish: pregunta para continuar
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica First stop the firewall and then continue the firewall. Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
#### english: launch #### spanish: lanza
####
####
 case "$second_option" in
 "$NULL") echo "$cinco Selecting host ping-ip4 to fast.com for default" ; trazador="fast.com" ;;
 *) trazador="$second_option" ;; esac
 $fiptables stop
 echo "$cinco ping -4 -c 5 -A $trazador"
 $which_ping -4 -c 5 -A $trazador
 $fiptables continue
 echo $footer_lineal
 exit; fi
####
####
############################       english: ping-ip6: ping icmp with ipv6
############################       spanish: ping-ip6: ping icmp con ipv6
 if [ "$first_option" = "ping-ip6" ]; then $nada
 echo "$cinco [ $first_option ] [ ping one ip or host with ipv6 ]"
 echo $header_lineal
 case $which_ping in "$NULL") echo " Install ping" ; exit ;; esac
####
####
#### english: ask for continue #### spanish: pregunta para continuar
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica First stop the firewall and then continue the firewall. Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
#### english: launch #### spanish: lanza
####
####
 case "$second_option" in
 "$NULL") echo "$cinco Selecting host ping-ip6 to fast.com for default" ; trazador="fast.com" ;;
 *) trazador="$second_option" ;;
 esac
 $fiptables stop
 echo "$cinco ping -6 -c 5 -A $trazador"
 $which_ping -6 -c 5 -A $trazador
 $fiptables continue
 echo $footer_lineal
 exit; fi
####
####
############################       english: trace-ip4: traceroute with tcp and ipv6
############################       spanish: trace-ip4: traceroute con tcp y ipv4
####
####
 if [ "$first_option" = "trace-ip4" ]; then $nada
 echo "$cinco [ $first_option ] [ trace ip or host with ipv4 ]"
 echo $header_lineal
 case $which_traceroute in "$NULL") echo " Install traceroute" ; exit ;;  esac
####
####
#### english: ask for continue #### spanish: pregunta para continuar
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica First stop the firewall and then continue the firewall. Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
#### english: launch #### spanish: lanza
####
####
 case "$second_option" in
 "$NULL") echo "$cinco Selecting host trace-ip4 to fast.com for default" ; trazador="fast.com" ;;
 *) trazador="$second_option" ;; esac
 $fiptables stop
 echo "$cinco traceroute -4 -T $trazador"
 $which_traceroute -4 -T $trazador
 $fiptables continue
 echo $footer_lineal
 exit; fi
####
####
############################       english: trace-ip6: traceroute with tcp and ipv6
############################       spanish: trace-ip6: traceroute con tcp e ipv6
####
####
 if [ "$first_option" = "trace-ip6" ]; then $nada
 echo "$cinco [ $first_option ] [ trace one ip or host with ipv6 ]"
 echo $header_lineal
 case $which_traceroute in "$NULL") echo " Install traceroute" ; exit ;; esac
####
####
#### english: ask for continue #### spanish: pregunta para continuar
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica First stop the firewall and then continue the firewall. Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
#### english: launch #### spanish: lanza
####
####
 case "$second_option" in
 "$NULL") echo "$cinco Selecting host ping-ip6 to fast.com for default" ; trazador="fast.com" ;;
 *) trazador="$second_option" ;;
 esac
 $fiptables stop
 echo "$cinco traceroute -6 -T $trazador"
 $which_traceroute -6 -T $trazador
 $fiptables continue
 echo $footer_lineal
 exit; fi
####
####
############################       english: host: host to resolve ip
############################       spanish: host: host to resolve ip
####
####
 if [ "$first_option" = "host" ]; then $nada
 echo "$cinco [ $first_option ] [ resolve one ip or host ]"
 echo $header_lineal
 case $which_host in "$NULL") echo " Install host" ; exit ;; esac
 case "$second_option" in
 "$NULL") echo "$cinco Selecting host resolve to fast.com for default" ; trazador="fast.com" ;;
 *) trazador="$second_option" ;; esac
 echo "$cinco host $trazador"
 $which_host $trazador
 echo $footer_lineal
 exit; fi
####
####
############################       english: resolveip: host to resolve ip and viceversa
############################       spanish: resolveip: host to resolve ip and viceversa
####
####
 if [ "$first_option" = "resolveip" ]; then $nada
 echo "$cinco [ $first_option ] [ resolve one ip or host ]"
 echo $header_lineal
 case $which_resolveip in "$NULL") echo " Install resolveip" ; exit ;; esac
 case "$second_option" in
 "$NULL") echo "$cinco Selecting host resolveip to fast.com for default" ; trazador="fast.com" ;;
 *) trazador="$second_option" ;; esac
 echo "$cinco resolveip $trazador"
 $which_resolveip $trazador
 echo $footer_lineal
 exit; fi
####
####
############################       english: geoip: host to resolve and locate
############################       spanish: geoip: host to resolve and locate
####
####
 if [ "$first_option" = "geoip" ]; then $nada
 echo "$cinco [ $first_option ] [ resolve the location to one ip or host ]"
 echo $header_lineal
 case $which_geoiplookup in "$NULL") echo " Install geoip-bin" ; exit  ;; esac
 case "$second_option" in
 "$NULL") echo "$cinco Selecting host geoip to fast.com for default" ; trazador="fast.com" ;;
 *) trazador="$second_option" ;; esac
 echo "$cinco geoiplookup -i $trazador"
 $which_geoiplookup -i $trazador
 echo $footer_lineal
 exit; fi
####
####
############################       english: ntpdate: update the date and time
############################       spanish: ntpdate: actualiza la fecha y hora
####
####
 if [ "$first_option" = "ntpdate" ]; then $nada
 echo "$cinco [ $first_option ] [ update the computer time and date from internet ]"
 echo $header_lineal
 echo "$rallica [ Updating the time and the date .. ]"
 pool0=0.debian.pool.ntp.org
 pool1=1.debian.pool.ntp.org
 pool2=2.debian.pool.ntp.org
 pool3=3.debian.pool.ntp.org
 $favorite_date_command $pool0
 date
 echo $footer_lineal
 exit; fi
####
####
############################       english: scan-tcp: scan one net per tcp
############################       spanish: scan-tcp: rastrea una red por tcp
####
####
if [ "$first_option" = "scan-tcp" ]; then $nada
 echo "$cinco [ $first_option ] [ scan with nmap tcp ]"
 echo $header_lineal
 echo "$cinco [ Usage: ] [ nmap $first_option ip/mask ]"
 echo "$cinco [ Notice:] [ Stoped firewall while launching nmap ]"
 case $which_nmap in $NULL) echo install nmap ; exit ;; esac
####
####
#### english: ask for continue #### spanish: pregunta para continuar
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica First stop the firewall and then continue the firewall. Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
#### english: stop the firewall #### spanish: para el firewall
####
####
 $fiptables stop
####
####
#### english: launch nmap #### spanish: lanza nmap
####
####
 echo "$cincuenta [ Doing nmap ]"
 $which_nmap -sT $2
####
####
#### english: continue the firewall #### spanish: continua el firewall
####
####
 $fiptables continue
####
####
 echo "$cinco [ Notice: ] [ Reloaded firewall rules after run nmap ]"
 echo $footer_lineal
 exit; fi
####
####
############################       english: scan-syn: scan one net per syn
############################       spanish: scan-syn: rastrea una por peticiones
####
####
 if [ "$first_option" = "scan-syn" ]; then $nada
 echo "$cinco [ $first_option ] [ scan with nmap syn ]"
 echo $header_lineal
 echo "$cinco [ Usage: ] [ nmap $first_option ip/mask ]"
 echo "$cinco [ Notice: ] [ Stoped firewall while launch nmap ]"
 case $which_nmap in "$NULL") echo install nmap ; exit ;; esac
####
####
#### english: ask for continue #### spanish: pregunta para continuar
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica First stop the firewall and then continue the firewall. Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
#### english: stop the firewall #### spanish: para el firewall
####
####
 $fiptables stop
####
####
#### english: launch nmap #### spanish: lanza nmap
####
####
 echo "$cincuenta [ Doing nmap ]"
 $which_nmap -sF $2
####
####
#### english: continue the firewall #### spanish: continua el firewall
####
####
 $fiptables continue
 echo "$cinco [ Notice: ] [ Reloaded firewall rules after run nmap ]"
 echo $footer_lineal
 exit; fi
####
####
############################       english: scan-fin: scan one net per conexiones
############################       spanish: scan-fin: rastrea una red por conexiones
####
####
 if [ "$first_option" = "scan-fin" ]; then $nada
 echo "$cinco [ $first_option ] [ scan with nmap fin ]"
 echo $header_lineal
 echo "$cinco [ Usage: ] [ nmap $first_option ip/mask ]"
 echo "$cinco [ Notice: ] [ Stoped firewall while launch nmap ]"
 case $which_nmap in "$NULL") echo install nmap ; exit ;; esac
####
####
#### english: ask for continue #### spanish: pregunta para continuar
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica First stop the firewall and then continue the firewall. Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
#### english: stop the firewall #### spanish: para el firewall
####
####
 $fiptables stop
####
####
#### english: launch nmap #### spanish: lanza nmap
####
####
 echo "$cincuenta [ Doing nmap ]"
 $which_nmap -sF $2
####
####
#### english: continue the firewall #### spanish: continua el firewall
####
####
 $fiptables continue
####
####
 echo "$cinco [ Notice: ] [ Reloaded firewall rules after run nmap ]"
 echo $footer_lineal
 exit; fi
####
####
############################       english: scan-udp: scan one net per udp
############################       spanish: scan-udp: rastrea una red por udp
####
####
 if [ "$first_option" = "scan-udp" ]; then $nada
 echo "$cinco [ $first_option ] [ scan with nmap udp ]"
 echo $header_lineal
 echo "$cinco [ Usage: ] [ nmap $first_option ip/mask ]"
 echo "$cinco [ Notice: ] [ Stoped firewall while launch nmap ]"
 case $which_nmap in "$NULL") echo install nmap ; exit ;; esac
####
####
#### english: ask for continue #### spanish: pregunta para continuar
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica First stop the firewall and then continue the firewall. Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
#### english: stop the firewall #### spanish: para el firewall
####
####
 $fiptables stop
####
####
#### english: launch nmap #### spanish: lanza nmap
####
####
 echo "$cincuenta [ Doing nmap ]"
 $which_nmap -sU $2
####
####
#### english: continue the firewall #### spanish: continua el firewall
####
####
 $fiptables continue
####
####
 echo "$cinco [ Notice: ] [ Reloaded firewall rules after run nmap ]"
 echo $footer_lineal
 exit; fi
####
####
############################       english: scan-ping: scan one net per ping
############################       spanish: scan-ping: rastrea una red por ping
####
####
 if [ "$first_option" = "scan-ping" ]; then $nada
 echo "$cinco [ $first_option ] [ scan with nmap ping ]"
 echo $header_lineal
 echo "$cinco [ Usage: ] [ nmap $first_option ip/mask ]"
 echo "$cinco [ Notice: ] [ Stoped firewall while launch nmap ]"
 case $which_nmap in "$NULL") echo install nmap ; exit ;; esac
####
####
#### english: ask for continue #### spanish: pregunta para continuar
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica First stop the firewall and then continue the firewall. Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
#### english: stop the firewall #### spanish: para el firewall
####
####
$fiptables stop
####
####
#### english: launch nmap #### spanish: lanza nmap
####
####
 echo "$cincuenta [ Doing nmap ]"
 $which_nmap -sn $2
####
####
#### english: continue the firewall #### spanish: continua el firewall
####
####
 $fiptables continue
 echo "$cinco [ Notice: ] [ Reloaded firewall rules after run nmap ]"
 echo $footer_lineal
 exit; fi
####
####
############################       english: ram-free: give one freedom to ram innecesary
############################       spanish: ram-free: limpia la memoria ram
####
####
 if [ "$first_option" = "ram-free" ]; then $give_cover
 echo "$cinco [ $first_option ] [ freedom from innecesary ram ]"
 echo $header_lineal
 case $which_tee in "$NULL") echo "$cinco Install dd command"; exit ;; esac
 echo " Actual Memory"
 free -hw && sync
 echo 3 | $which_tee /proc/sys/vm/drop_caches &> /dev/null
 echo " Memory ram freedom .. Actual memory"
 free -hw
 echo $footer_lineal
 exit; fi
####
####
############################       english: disc-speed: Show the speed of disc
############################       spanish: disc-speed: Muestra la velocidad de el disco
####
####
 if [ "$first_option" = "disc-speed" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ test the disc speed ]"
 echo $header_lineal
 case $which_dd in "$NULL") echo "$cinco Install dd command"; exit ;; esac
 echo "$rallica Testing speed with the temporal file /root/borrame.img.img"
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
 $which_dd if=/dev/zero of=/root/borrame.img.img status=progress bs=1M count=100
 rm /root/borrame.img.img &> /dev/null
 echo $footer_lineal
 exit; fi
####
####
############################       english: ram-speed: Show the speed of ram
############################       spanish: ram-speed: Muestra la velocidad de la ram
####
####
 if [ "$first_option" = "ram-speed" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ test the ram speed ]"
 echo $header_lineal
 case $which_dd in "$NULL") echo "$cinco Install dd command"; exit ;; esac
 case "$(mount | grep -i "/tmp type tmpfs" | wc -l)" 
 in "1")  ;; *) echo "$cinco Mount /tmp with tmpfs so: mount -t tmpfs tmpfs /tmp"; exit ;; esac
 echo "$rallica Test speed with the temporal file /tmp/borrame.img.img"
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
 $which_dd if=/dev/zero of=/tmp/borrame.img.img status=progress bs=1M count=100
 rm /tmp/borrame.img.img &> /dev/null
 echo $footer_lineal
 exit; fi
####
####
############################       english: glx-speed: show frammes por seconds with mesa graphicall 
############################       spanish: glx-speed: muestra los fotogramas por segundo con graphicos mesa
####
####
 if [ "$first_option" = "glx-speed" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ test gl mesa3D speed ]"
 echo $header_lineal
 case $which_glxgears in "$NULL") echo "$cinco Install mesa utils"; exit ;; esac
 vblank_mode=0 $which_glxgears
 echo $footer_lineal
 exit; fi
####
####
############################## english: read-fwiptables: Read log /var/log/fwiptables  ##############################
############################## spanish: read-fwiptables: Lee log  /var/log/fwiptables  ##############################
####
####
 if [ "$first_option" = "log-fwiptables" ] ; then  $give_cover
 echo "$cinco [ $first_option ] [ show /var/log/fwiptables ]"
 cat /var/log/fwiptables
 echo "$cinco this file is /var/log/fwiptables"
 echo $footer_lineal
 exit; fi
####
####
############################       english: log-sudo: log from sudo
############################       spanish: log-sudo: log desde sudo
####
####
 if [ "$first_option" = "log-sudo" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ search sudo in logs ]"
 echo $header_lineal
 find /var/log -maxdepth 5 -type f | xargs zgrep -a -i "sudo:"
 echo $footer_lineal
 exit; fi
####
####
############################       english: log-sshd: log from ssh server
############################       spanish: log-sshd: log desde el servidor de ssh
####
####
 if [ "$first_option" = "log-sshd" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ search sshd in logs ]"
 echo $header_lineal
 find /var/log -maxdepth 5 -type f | xargs zgrep -a -i "sshd"
 echo $footer_lineal
 exit; fi
####
####
############################       english: log-search: log from a one search
############################       spanish: log-search: log desde una busqueda
####
####
 if [ "$first_option" = "log-search" ]; then $nada
 echo "$cinco [ $first_option $second_option ]  [ search a one pattern in logs ]"
 echo $header_lineal
 case "$second_option" in
 $NULL) echo "$cinco use: $fiptables $first_option pattern" ;;
 *) find /var/log -maxdepth 5 -type f | xargs zgrep -a -i "$second_option" ;;
 esac
 echo $footer_lineal
 exit; fi
####
####
############################       english: dev-versions: about of program
############################       spanish: dev-versions: acerca del programa
####
####
 if [ "$first_option" = "dev-versions" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ show the link to dev version from git repository ]"
 echo $header_lineal
 echo $fweb_development
 echo $footer_lineal
 exit; fi
####
####
############################       english: new-versions: about of program
############################       spanish: new-versions: acerca del programa
####
####
 if [ "$first_option" = "new-versions" ]; then $give_cover
 echo "$cinco [ $first_option ] [ show the new versions in sourceforge page ]"
 echo $header_lineal
 case $favorite_text_browser in 
 "$NULL") echo "Install a one text browser like:   elinks, or lynx, or links, or links2"; exit; esac
 echo "$cinco list new-versions in the last week with browser $favorite_text_browser"
 echo $ralla
 $favorite_text_browser -dump $fweb_newfiles | egrep fwiptables-v | sed s/\<//g |sed s/\>//g 
 echo $footer_lineal
 exit; fi
####
####
############################       english: hosts: show /etc/hosts
############################       spanish: hosts: muestra /etc/hosts
####
####
 if [ "$first_option" = "hosts" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ show the file /etc/hosts ]"
 echo $header_lineal
 cat /etc/hosts
 echo $ralla
 echo "$cinco This file is /etc/hosts"
 echo $footer_lineal
 exit; fi
####
####
############################       english: protocols: show /etc/protocols
############################       spanish: protocols: muestra /etc/protocols
####
####
 if [ "$first_option" = "protocols" ]; then  $give_cover
  echo "$cinco [ $first_option ] [ show the file /etc/protocols ]"
 echo $header_lineal
 cat /etc/protocols  | sed s/\&//g 
 echo $ralla
 echo "$cinco This file is /etc/protocols"
 echo $footer_lineal
 exit; fi
####
####
############################       english: services: show /etc/services
############################       spanish: services: muestra /etc/services
####
####
 if [ "$first_option" = "services" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ show the file /etc/services ]"
 echo $header_lineal
 cat /etc/services | sed s/\&//g 
 echo $ralla
 echo "$cinco This file is /etc/services"
 echo $footer_lineal
 exit; fi
####
####
############################       english: host.allow: show /etc/host.allow
############################       spanish: host.allow: muestra /etc/host.allow
####
####
 if [ "$first_option" = "hosts.allow" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ show the file /etc/allow ]"
 echo $header_lineal
 cat /etc/hosts.allow
 echo $ralla
 echo "$cinco This file is /etc/hosts.allow"
 echo $footer_lineal
 exit; fi
####
####
############################       english: hosts.deny: show /etc/host.deny
############################       spanish: hosts.deny: muestra /etc/host.deny
####
####
 if [ "$first_option" = "hosts.deny" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ show the file /etc/deny ]"
 echo $header_lineal
 cat /etc/hosts.deny
 echo $ralla
 echo "$cinco This file is /etc/hosts.deny"
 echo $footer_lineal
 exit; fi
####
####
############################       english: resolv.conf: show /etc/resolv.conf
############################       spanish: resolv.conf: muestra /etc/resolv.conf
####
####
 if [ "$first_option" = "resolv.conf" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ show the file /resolv.conf ]"
 echo $header_lineal
 cat /etc/resolv.conf
 echo $ralla
 echo "$cinco This file is /etc/resolv.conf"
 echo $footer_lineal
 exit; fi
####
####
############################       english: about: about of program
############################       spanish: about: acerca del programa
####
####
if [ "$first_option" = "about" ]; then  $give_cover
echo "$cinco [ $first_option ] [ about $fiptables ]"
echo $header_lineal
echo
echo "$tab [Fran FireWall iptables Generator]"
echo "$cincuenta"
echo ""
echo "$tab [Exec name]"
echo "  $fiptables"
echo ""
echo "$tab [Program Name]"
echo "  $fprogram"
echo ""
echo "$tab [Program Description]"
echo "  $fdescription"
echo ""
echo "$tab [Program Install]"
echo "  chmod ugo+x $fiptables"
echo "  ./$fiptables install"
echo "  And then fwiptables is in $directory_fiptables/$fiptables"
echo
echo "$tab [Devevelopments version program]"
echo "  The fran iptables ver in development in git code at sourceforge:"
echo "  $fweb_development"
echo ""
echo "$tab [New versions program]"
echo "  The last versions in files repository at sourceforge:"
echo ""
echo "  $fweb_newfiles"
echo ""
echo "$tab [Access web with all versions program]"
echo "  The fran iptables all versions in code repository at sourceforge:"
echo ""
echo "  $fweb_tree"
echo ""
echo "$tab [Git clone with all versions program]"
echo "  The fran iptables all versions in code repository at sourceforge:"
echo ""
echo "  git clone $fweb_git"
echo
echo "$tab [Program License]"
echo "  $flicense"
echo ""
echo "$cincuenta"
echo ""
echo ""
echo $footer_lineal
exit; fi
####
####
############################       english: info-system: get info system
############################       spanish: info-system: da informacion del sistema
####
####
 if [ "$first_option" = "info-system" ]; then  $give_cover
 echo "$cinco [ $first_option ] [ show info about system ]"
 echo $header_lineal
 echo "$tab [ System info ] [ Distro ] "
 cat /etc/*-release | grep -i pretty_name | cut -d "=" -f 2 | sed 's/\"//g'
 echo $ralla
 echo "$tab [ System info ][ Kernel Linux ]"
 $which_uname -srom
 echo $ralla
 echo "$tab [ System info ] [ Processor ]"
 lscpu | egrep -i "socket|Model name|cpu max"
 echo $ralla
 echo "$tab [ System info ] [ Memory RAM ]"
 free -h
 echo $ralla
 echo "$tab [ System info ] [ Disks ]"
 df -h -x tmpfs
 echo $footer_lineal
 exit; fi
####
####
############################       english: info-net: get net info
############################       spanish: info-net: da informacion de la red
####
####
 if [ "$first_option" = "info-net" ]; then $give_cover
 echo "$cinco [ $first_option ] [ show info about net ]"
 echo $header_lineal
 echo "$tab [ Net Info Route ] [ Route ipv4 ]"
 $which_ip route 
 echo $ralla
 echo "$tab [ Net Info Listen ] [ Listen ipv4 ]"
 $which_ss -l4 | sed 's/   / /g'
 echo $ralla
 echo "$tab [ Net Info Listen ] [ Listen ipv6 ]"
 $which_ss -l6 | sed 's/   / /g'
 echo $footer_lineal
 exit; fi
####
####
############################       english: speed-ip4: speed from internet
############################       spanish: speed-ip4: velocidad desde internet
####
####
 if [ "$first_option" = "speed-ip4" ]; then $nada
 echo "$cinco [ $first_option ] [ test speed ipv4 with internet ]"
 echo $header_lineal
 case "$which_iperf"  in  $NULL) echo "Install Iperf"; exit ;; esac
####
####
#### english: ask for continue #### spanish: pregunta para continuar
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica First stop the firewall and then continue the firewall. Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
 case $second_option in $NULL) direccion_iperf="ping.online.net" ;; *) direccion_iperf="$second_option" ;; esac
 $fiptables stop
 echo "$cinco Doing bandwidth in ipv4 to $direccion_iperf with 4 seconds"
 echo $ralla
 $which_iperf -t 4 -c $direccion_iperf -P 4 | grep SUM | sed s/SUM/net-speed/g
 $fiptables continue
 echo $footer_lineal
 exit; fi
####
####
############################       english: speed-ip6: speed from internet
############################       spanish: speed-ip6: velocidad desde internet
####
####
 if [ "$first_option" = "speed-ip6" ]; then $nada
 echo "$cinco [ $first_option ] [ test speed ipv6 with internet ]"
 echo $header_lineal
 case "$which_iperf"  in  $NULL) echo "Install Iperf"; exit ;; esac
####
####
#### english: ask for continue #### spanish: pregunta para continuar
####
####
 if [ "$allow_question" = "no" ]; then $nada ; else
 read -p "$rallica First stop the firewall and then continue the firewall. Type YES to continue # " continuar
 case "$continuar" in "YES") echo " [ OK. ACCEPTED ] ";; 
 "yes") echo " [ OK. ACCEPTED ] ";; 
 *) echo " [ OK. DECLINE ] "; exit ;; esac
 fi
####
####
 case $second_option in $NULL) direccion_iperf="ping.online.net" ;; *) direccion_iperf="$second_option" ;; esac
 $fiptables stop
 echo "$cinco Doing bandwidth in ipv6 to $direccion_iperf with 4 seconds"
 echo $ralla
 $which_iperf -V -t 4 -c $direccion_iperf -P 4 | grep SUM | sed s/SUM/net-speed/g
 $fiptables continue
 echo $footer_lineal
 exit; fi
####
####
############################       english: config-eng: several options to config in english
############################       spanish: config-eng: varias opciones para configurar en ingles
####
####
if [ "$first_option" = "config-eng" ]; then $gefiles
 echo "$cinco [ $first_option ] [ show variables cfg from english configuration ]"
 echo $header_lineal
 cat  $defaultfullcfg_eng
 echo $footer_lineal
 exit; fi
####
####
############################       english: config-spa: several options to config in spanish
############################       spanish: config-spa: varias opciones para configurar en spanish
####
####
 if [ "$first_option" = "config-spa" ]; then $genfiles
 echo "$cinco [ $first_option ] [ show variables cfg from spanish configuration ]"
 echo $header_lineal
 cat $defaultfullcfg_spa
 echo $footer_lineal
 exit; fi
####
####
############################       english: help: the help option en english
############################       spanish: help: la opcion de ayuda en ingles
####
####
if [ "$first_option" = "help" ]; then $genfiles
echo "$cinco [ $first_option ]  [ Principal options ] $cinco"
echo
echo
echo "$cinco         [Launch guide]"
echo
echo "  info-system: Show info system"
echo "     info-net: Show net info"
echo "  wizard-full: Asistant y launch complete firewall"
echo "  wizard-mini: Asistant y Launch simple firewall"
echo
echo "$cinco         [Control the iptables rules]"
echo
echo "         stop: Save and stop firewall iptables"
echo "     continue: Restore the firewall iptables stopped"
echo "        reset: Reset the firewall iptables"
echo "      list-fw: Alias to names"
echo "        names: List the firewall iptables saved"
echo "         show: show one firewall standard"
echo "         save: Save one firewall iptables"
echo "         load: Restore a one firewall iptables"
echo "       actual: show the firewall standard actual"
echo
echo "$cinco         [List iptables rules]"
echo
echo "               [The filter table with names]"
echo "         list: Alias to filter-ip4"
echo "      forward: Alias to filter-ip6"
echo
echo "$cinco         [List the others tables]"
echo
echo "      listnum: List iptables filter rules from ipv4 in numbers"
echo "   forwardnum: List iptables filter rules foward in numbers"
echo "     listnum6: List iptables filter rules from ipv6 in numbers"
echo "  forwardnum6: List iptables filter rules forward ipv6 in numbers"
echo "        list6: List iptables filter rules from ipv6"
echo "     forward6: List iptables filter rules forward ipv6"
echo
echo "   filter-ip4: List iptables filter rules from ipv4"
echo "   filter-ip6: List iptables filter rules from ipv6"
echo "      nat-ip4: List iptables nat rules from ipv4"
echo "      nat-ip6: List iptables nat rules from ipv6"
echo "   mangle-ip4: List iptables mangle rules from ipv4"
echo "   mangle-ip6: List iptables mangle rules from ipv6"
echo "      raw-ip4: List iptables raw rules from ipv4"
echo "      raw-ip6: List iptables raw rules from ipv4"
echo " security-ip4: List iptables security rules from ipv4"
echo " security-ip6: List iptables security rules from ipv6"
echo "     ebtables: List rules ebtables nft ethernet"
echo "    arptables: List rules arptables arp"
echo
echo "$cinco         [Launch interface]"
echo
echo "          cli: alias to cli-menu"
echo "          gui: alias to gui-menu"
echo "     cli-menu: Comand line interface with menus"
echo "     gui-menu: Graphicall interface with menus"
echo "    gui-shell: Graphicall interface with shell"
echo "         text: alias for -text"
echo "          log: alias for -log"
echo "          gui: alias for -gui"
echo "        -text: Output in console, for default in command line"
echo "         -log: Output in file log /var/log/fwiptables"
echo "         -gui: Output in screen graphicall"
echo 
echo "               [ Secondary options ] $cinco"
echo
echo
echo "$cinco         [Launch iptables rules]"
echo
echo "   eraserules: Remove the iptables rules in ipv4 and ipv6"
echo "      offline: Disconected for all servers and clients except localhost"
echo " allpermisive: Configure a firewall very permisive"
echo "      onlyweb: Configure a firewall like cliente web"
echo "       custom: Configure one custom firewall, made for you with file.cfg"
echo
echo "$cinco         [tool config]"
echo
echo "       new-full-config: Create a new configfile.cfg in english"
echo " nueva-completa-config: Create a new configfile.cfg in spanish"
echo "       new-mini-config: Create a new basic configfile.cfg in english"
echo "     nueva-mini-config: Create a new basic configfile.cfg in spanish"
echo "           list-config: List config files cfg"
echo "         modify-config: Edit one config.cfg"
echo "           show-config: Show one config.cfg"
echo "            del-config: Delete one configuration file"
echo
echo "$cinco         [List sockets]"
echo
echo "            route: Show net devices and ip route tables"
echo "               ss: Show net sockets with command ss"
echo "             lsof: Show net sockets with command lsof"
echo "          netstat: Show net sockets with command netstat"
echo "      netstat-nat: Show net sockets with command netstat-nat"
echo "          tcpdump: Listen the connections"
echo "              arp: List the last conentions arp"
echo
echo "$cinco         [Tool forward]"
echo
echo " ipforward-list: Show kernel config about forward"
echo "   ipforward-on: Active kernel config about forward"
echo "  ipforward-off: Deactive kernel config about forward"
echo
echo "$cinco         [Tool icmp]"
echo
echo "     ping-ip4: Do a one ping with to one host with ipv4 icmp"
echo "     ping-ip6: Do a one ping with to one host with ipv6 icmp"
echo "    speed-ip4: Test the bandwidth with ipv4"
echo "    speed-ip6: Test the bandwidth with ipv6"
echo
echo "$cinco         [Tool tcp]"
echo
echo "    trace-ip4: Trace route a one host with ipv4 tcp"
echo "    trace-ip6: Trace route a one host with ipv6 tcp"
echo "         host: Resolve one host"
echo "    resolveip: Resolve one host and viceversa"
echo "        geoip: Locate a one host or ip"
echo "      ntpdate: Update the date from ntp server"
echo 
echo "$cinco         [Tool nmap]"
echo 
echo "     scan-tcp: Scan a host/mask per tcp protocol"
echo "     scan-syn: Scan a host/mask per syn socket"
echo "     scan-fin: Scan a host/mask per fin socket"
echo "     scan-udp: Scan a host/mask per udp protocol"
echo "    scan-ping: Scan a host/mask per ping udp"
echo
echo "$cinco         [Tool sudo]"
echo
echo "    sudo-auth: Allow sudo to other choosed users"
echo "  sudo-remove: Remove sudo to other choosed users"
echo "    sudo-list: List sudo to other choosed users"
echo
echo "$cinco         [Tool Install]"
echo
echo "      install: Install this program actual"
echo "howto-upgrade: Howto install the latest version"
echo "      upgrade: Upgrade at the latest version"
echo
echo "$cinco         [Show etc]"
echo
echo "        hosts: Show /etc/hosts, hosts local and statics host"
echo "   protocolos: Show /etc/protocols, protocols names"
echo "     services: Show /etc/services, ports names"
echo "  hosts.allow: Show /etc/hosts.allow, hosts allowed in some own server"
echo "   hosts.deny: Show /etc/hosts.deny, hosts drops in some own server"
echo "  resolv.conf: Show /etc/resolv.conf, it are the dns configured"
echo "      default: Show /etc/default/fwiptables, overwrite variables for fwiptables"
echo
echo "$cinco         [Show log]"
echo
echo " log-fwiptables: Show /var/log/fwiptables"
echo "       log-sudo: Search the logs from sudo for /var/log"
echo "       log-sshd: Search the logs from sshd for /var/log"
echo "     log-search: Search the logs from a input pattern for /var/log"
echo
echo "$cinco         [Show about]"
echo
echo "          about: About info"
echo "        version: Info version program actual"
echo "        depends: Show depends"
echo "       examples: Show examples"
echo "   new-versions: Show the last versions"
echo "     config-eng: config example with comments in english"
echo "     config-spa: config example with comments in spanish"
echo
echo "$cinco         [Show help]"
echo
echo "   full-options: Show full options"
echo "           help: Show help in english"
echo "          ayuda: Show help in spanish"
echo ""
echo "$cincuenta The second option: (optional)"
echo ""
echo "    if launch without specific the config it takes $defaultcfg"
echo "    you can  modify and create the files in the folder $directory_config"
echo ""
echo "$cincuenta Examples"
echo ""
echo " $fiptables custom server-example1.cfg     [Configure firewall custom]"
echo " $fiptables eraserules                     [Remove iptables rules]"
echo " $fiptables list                           [List iptables rules]"
echo " $fiptables help                           [Show this help in english]"
echo ""
echo "$cincuenta Examples of variables to the configs files $cinco"
echo
cat $defaultfullcfg_eng
echo
echo " $fiptables notes:"
echo
echo
echo "$cincuenta  [vpn]"
echo
echo "     Host [vpn] excepcionals hosts has conection allowed in firewall"
echo ""
echo "$cincuenta  [blacklist]"
echo
echo "     Host [blacklist] excepcionals hosts has conection dropped in firewall"
echo ""
echo "$cincuenta  [uid and/or gid excepcional]"
echo
echo "     User and/or group excepcional have output conection allowed in firewall"
echo
echo "$cincuenta  [iptables netftilter]"
echo
echo "     iptables-legacy   is    support for xtables "
echo "     iptables-nft      is    support for nftables "
echo
echo "$cincuenta  [client firewall needs in udp ports]"
echo
echo "     This port is necesary to update the date  : ntp"
echo "     This port is necesary to dhcp and get ip  : bootpc"
echo "     This port is necesary to domain resolver  : domain"
echo
echo "$cincuenta  [Ipv6 needs protocols]"
echo
echo "     Necesary protocol: ipv6-icmp"
echo "     Ipv6 works too with: ipv4 procotols"
echo
echo "$cincuenta  [License]"
echo ""
echo "  Download the latest version $fprogram from sourceforge"
echo "  $fweb_latest"
echo "  $flicense"
echo
echo $footer_lineal
exit; fi
####
####
############################       english: ayuda: the help option in spanish
############################       spanish: ayuda: la opcion de ayuda en español
####
####
if [ "$first_option" = "ayuda" ]; then $genfiles
echo "$cinco [ $first_option ] [ Opciones principales ] $cinco"
echo
echo "$cinco         [Lanzar guia]"
echo
echo "  info-system: Muestra la informacion del sistema"
echo "     info-net: Muestra informacion de la red"
echo "  wizard-full: Asistente y lanza completo cortafuegos"
echo "  wizard-mini: Asistente y lanza simple cortafuegos"
echo
echo "$cinco         [Controla las reglas de iptables]"
echo
echo "         stop: Para las reglas del firewall"
echo "     continue: Continua las reglas del firewall"
echo "        reset: Resetea las reglas del firewall"
echo "      list-fw: Apodo a names"
echo "        names: Lista los archivos de firewall estandard"
echo "         show: Muestra las reglas del firewall estandard especificado" 
echo "         save: Guarda las reglas de firewall estandard especificado"
echo "         load: Reculpera firewall estandard especificado"
echo "       actual: Muestra el contenido del firewall estandard actual"
echo
echo "$cinco         [Lista las reglas de tablas de iptables]"
echo
echo "               La tabla de filtros con nombres"
echo "         list: apodo para filter-ip4" 
echo "        list6: apodo para filter-ip6"
echo
echo "$cinco         [Lista Las otras tablas de iptables]"
echo
echo "      listnum: Lista las reglas de ipv4 de filtros en numeros"
echo "   forwardnum: Lista las reglas de ipv4 de filtros de reenvio en numeros"
echo "     list6num: Lista las reglas de ipv6 de filtros en numeros"
echo "  forward6num: Lista las reglas de ipv6 de filtros de reenvio en numeros"
echo "      forward: Lista las reglas de ipv4 de filtros de reenvio"
echo "     forward6: Lista las reglas de ipv6 de filtros de reenvio"
echo
echo "   filter-ip4: Lista las reglas de ipv4 de filtros iptables"
echo "   filter-ip6: Lista las reglas de ipv6 de filtros iptables"
echo "      nat-ip4: Lista las reglas de ipv4 de nat iptables"
echo "      nat-ip6: Lista las reglas de ipv6 de nat iptables"
echo "   mangle-ip4: Lista las reglas de ipv4 de mangle iptables"
echo "   mangle-ip6: Lista las reglas de ipv6 de mangle iptables"
echo "      raw-ip4: Lista las reglas de ipv4 de raw iptables"
echo "      raw-ip6: Lista las reglas de ipv6 de raw iptables"
echo " security-ip4: lista las reglas de ip4 de security iptables"
echo " security-ip6: Lista las reglas de ip6 de security iptables"
echo "     ebtables: Lista las reglas de nft de ethernet"
echo "    arptables: Lista las reglas de arp arptables"
echo
echo "$cinco         [Lanza interfaz]"
echo
echo "          cli: apodo de cli-menu"
echo "          gui: apodo de gui-menu"
echo "     cli-menu: modo texto with menus"
echo "     gui-menu: Graficos con menus"
echo "    gui-shell: Graficos con entorno de comandos"
echo "         text: apodo de -text"
echo "          gui: apodo de -gui"
echo "          log: apodo de -log"
echo "        -text: Salida a consola, por defecto en linea de comandos"
echo "         -gui: Salida a graficos"
echo "         -log: Salida a archivo log en /var/log/fwiptables"
echo
echo
echo "               [ Opciones secundarias ] $cinco"
echo
echo "$cinco         [Lanza reglas de iptables]"
echo
echo "   eraserules: Borra las reglas de iptables de ipv4 y de ipv6"
echo "      offline: Desconecta el cortafuegos de todo excepto localhost"
echo "      onlyweb: Configura el cortafuegos como cliente web"
echo " allpermisive: Configura el cortafuegos muy permisivo"
echo "       custom: Configura el cortafuegos especificando un archivo.cfg"
echo
echo "$cinco         [Herramienta de configuraciones]"
echo
echo "       new-full-config: Crea una nueva configuracion.cfg en ingles"
echo " nueva-completa-config: Crea una nueva configuracion.cfg en español"
echo "       new-mini-config: Crea una nueva basica configuracion.cfg en ingles"
echo "     nueva-mini-config: Crea una nueva basica configuracion.cfg en español"
echo "           list-config: Lista los archivos de configuracion cfg"
echo "         modify-config: Edita una existente configuracion.cfg"
echo "           show-config: Muestra una existente configuracion.cfg"
echo "            del-config: Borra unaa existente configuracion.cfg"
echo
echo "$cinco         [Lista las conexiones abiertas]"
echo
echo "             route: Muestra los dispositivos de red y la tabla de rutas"
echo "                ss: Muestra las conexiones con comando ss"
echo "           netstat: Muestra las conexiones con comando netstat"
echo "       netstat-nat: Muestra las conexiones con comando netstat-nat"
echo "              lsof: Muestra las conexiones con command lsof"
echo "           tcpdump: Escuchar las conexiones ip"
echo "               arp: Lista las ultimas conexiones arp"
echo
echo "$cinco         [Herramienta de ip forwading]"
echo
echo "  ipforward-list: Muestra la configuracion del kernel sobre reenvios ip"
echo "    ipforward-on: Activa la configuracion del kernel sobre reenvios ip"
echo "   ipforward-off: Desactiva la configuracion del kernel sobre reenvios ip"
echo
echo "$cinco         [Herramienta icmp]"
echo
echo "     ping-ip4: Hace un ping a una host con ipv4 icmp"
echo "     ping-ip6: Hace un ping a una host con ipv6 icmp"
echo "    speed-ip4: Testea el ancho de banda con ipv4"
echo "    speed-ip6: Testea el ancho de banda con ipv6"
echo
echo "$cinco         [Herramienta tcp]"
echo
echo "    trace-ip4: Traza ruta a una host con ipv4 tcp"
echo "    trace-ip6: Traza ruta a una host con ipv6 tcp"
echo "         host: Resuelve la ip de un host"
echo "    resolveip: Resuelve la ip de un host y viceversa"
echo "        geoip: Localiza una ip o host"
echo "      ntpdate: Actualiza la fecha desde un ntp server"
echo 
echo "$cinco         [Herramienta nmap]"
echo 
echo "     scan-tcp: Rastrea una host/mask por tcp protocolo"
echo "     scan-syn: Rastrea una host/mask por syn socket"
echo "     scan-fin: Rastrea una host/mask por fin socket"
echo "     scan-udp: Rastrea una host/mask por udp protocolo"
echo "    scan-ping: Rastrea una host/mask por ping udp"
echo
echo "$cinco         [Herramienta de autorizacion]"
echo
echo "    sudo-auth: Permite autorizacion de usuarios elegidos"
echo "  sudo-remove: Borra la autorizacion otorgada"
echo "    sudo-list: Lista autorizacion de usuarios elegidos"
echo
echo "$cinco         [Herramienta de instalacion]"
echo
echo "      install: Instala este programa actual"
echo "howto-upgrade: Indicacion para actualizar"
echo " upgrade: Actualiza a la ultima version"
echo
echo "$cinco         [Mostrar etc]"
echo
echo "        hosts: Muestra /etc/hosts, hosts locales y hosts estaticos"
echo "   protocolos: Muestra /etc/protocols, nombres de protocolos"
echo "     services: Muestra /etc/services, nombres de puertos y servicios"
echo "  hosts.allow: Muestra /etc/hosts.allow, hosts permitidas en algunos propios servidores"
echo "   hosts.deny: Muestra /etc/hosts.deny, hosts denegadas en algunos propios servidores"
echo "  resolv.conf: Muestra /etc/resolv.conf, este es el dns configurado"
echo "      default: Muestra /etc/default/fwiptables, sobrescribe variables en fwiptables"
echo
echo "$cinco         [Mostrar log]"
echo
echo " log-fwiptables: Muestra /var/log/fwiptables"
echo "       log-sudo: Busca los logs de sudo en /var/log"
echo "       log-sshd: Busca los logs de sshd en /var/log"
echo "     log-search: Busca los logs dando un patron para /var/log"
echo
echo "$cinco         [Mostrar acerca]"
echo
echo "          About: Acerca de "
echo "        version: Informacion de la actual version"
echo "        Depends: Muestra las dependencias"
echo "       examples: Muestra ejemplos"
echo "   new-versions: Muestra las ultimas versiones"
echo "     config-eng: Ejemplo de config con comentarios en ingles"
echo "     config-spa: Ejemplo de config con comentarios en castellano"
echo
echo "$cinco         [Mostrar ayuda]"
echo
echo "   full-options: Muestra las opciones"
echo "           help: Muestra la ayuda en ingles"
echo "          ayuda: Muestra la ayuda en español"
echo
echo "$cincuenta La segunda opcion (opcional)"
echo ""
echo "    si lanzas sin especificar una config tomara por defecto $defaultcfg"
echo "    Puedes modificar y crear archivos en la carpeta $directory_config"
echo
echo "$cincuenta Ejemplos"
echo
echo "   $fiptables custom games-example1.cfg    [lanza un firewall modificado]"
echo "   $fiptables eraserules                   [Borra las reglas de iptables] "
echo "   $fiptables list                         [Lista las reglas de iptables] "
echo "   $fiptables help                         [Muestra la ayuda en ingles] "
echo
echo "$cincuenta  Ejemplos de las variables de configuración $cinco"
echo
cat $defaultfullcfg_spa
echo
echo " Notas de $fiptables :"
echo
echo
echo "$cincuenta  [vpn]"
echo
echo "     Host [vpn] excepcionales tienen conexion permitida en el firewall"
echo
echo "$cincuenta  [blacklist]"
echo
echo "     Host [blacklist] excepcionales tienen conexion denegada en el firewall"
echo
echo "$cincuenta  [uid y/o gid excepcional]"
echo
echo "     Usuario y/o grupo excepcional tienen conexion de salida permitida en el firewall"
echo
echo "$cincuenta  [iptables netftilter]"
echo
echo "     iptables-legacy   es    soporte para xtables "
echo "     iptables-nft      es    soporte para nftables "
echo
echo "$cincuenta  [Puertos cliente udp necesarios]"
echo
echo "     necesario para actualizar la fecha :   ntp"
echo "     necesario para dhcp y conseguir ip :   bootpc"
echo "     necesario para resolver dominios   :   domain"
echo
echo "$cincuenta  [Protocolos necesarios para ipv6]"
echo
echo "     Necesario protocolo: ipv6-icmp"
echo "     Ipv6 funciona tambien con: ipv4 procolos"
echo
echo "$cincuenta  [Licencia]"
echo
echo "  Descarga la ultima version de $fprogram desde la web de sourceforge "
echo "  $fweb_latest"
echo "  $flicense"
echo
echo $footer_lineal
exit; fi
####
####
############################       english: default: without other valid options
############################	   spanish: default: sin otra valida opcion
####
####
if [ "$launch_iptables" = "si" ] ; then $nada ; else 
echo "$cinco Selecting default option"; "$fiptables" "$default_option" ; exit ; fi
####
####
###############################################################################################################
###############################################################################################################
####                                                                                            ###############
####           Knowed now sure that:         launch_iptables="si"                               ###############
####                                                                                            ###############
###############################################################################################################
###############################################################################################################
####                                                                                            ###############
####                                                                                            ###############
####  english:                               only for:                                          ###############
####  spanish:                               solo para:                                         ###############
####  english: Options for launch rules:     offline or allpermisive or custom or [config.cfg ] ###############
####  spanish: Opciones para lanzar reglas:  offline o allpermisive o custom o [config.cfg ]    ###############
####                                                                                            ###############
####                                                                                            ###############
###############################################################################################################
###############################################################################################################
####
####
####
####
##############################       english: overwrite system varibles for files variables configured or defaultcfg
##############################       spanish: sobreescribe las variables por la de los archivos de configuracion o defaultcfg
####
####
if [ "$first_option" = "custom" ]; then if [ -f $directory_config/$second_option ]; 
then source $directory_config/$second_option &> /dev/null ; else echo "$cinco File do not exits"; exit ; fi ; fi
####
####
##############################      english: selective state of intput/oputut          #####################
##############################      spanish: estado selectivo de entrada/salida        #####################
####
####
if [ "$allow_input_state" = "$NULL" ]  ; then input_state="-m state --state $input_state"   ; else input_state="$NULL"  ; fi
if [ "$allow_output_state" = "$NULL" ] ; then output_state="-m state --state $output_state" ; else output_state="$NULL" ; fi
####
####
##############################      english: output_uid or output_gid for input established status        #####################
##############################      spanish: usuario o grupo para establecidos de entrada de estado        #####################
####
####
uid_gid=no
if [ "$allow_output_uid" = "$NULL" ]; then uid_gid= ; else $nada ; fi
if [ "$allow_output_gid" = "$NULL" ]; then uid_gid= ; else $nada ; fi
####
####
##############################      english: compatibility with old variables, backward compatibility      #####################
##############################      spanish: compatibilidad con viejas ariables, retrocompatibilidad       #####################
#### execnft="$which_iptables_nft"
#### execlegacy="$which_iptables_legacy"
#### iptables_nft="$allow_nft"
#### iptables_legacy="$allow_legacy"
#### log_tcp=$logserver_tcp
#### log_udp=$logserver_udp
############################       english: iptables rules ipv4  iptables-legacy
############################       spanish: reglas de iptables ipv4   iptables-legacy
####
####
#### english:  Ipv4 filter legacy rules erased
#### spanish:  Borrardo de filtros ipv4
####
####
#### english: Erase nft rules ipv4
#### spanish: Borra nft reglas ipv4
$which_iptables_legacy -t filter -F
####
####
#### english: Erase legacy rules ipv6
#### spanish: Borra legacy reglas ipv6
$which_ip6tables_legacy -t filter -F
####
####
######### english:  ipv4 filter nft rules erased
######### spanish:  borrardo de filtros nft ipv4
####
####
#### english: Erase nft rules ipv4
#### spanish: Borra nft reglas ipv4
$which_iptables_nft -t filter -F
####
####
#### english: Erase nft rules ipv4
#### spanish: Borra nft reglas ipv4
$which_ip6tables_nft -t filter -F
####
####
#######################################        english: Accept localhost rules
#######################################        spanish: aceptar reglas localhost
####
####
$allow_legacy   $which_iptables_legacy -A INPUT  -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
$allow_legacy   $which_iptables_legacy -A OUTPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT &> /dev/null
####
####
$allow_legacy   $which_ip6tables_legacy -A INPUT  -s ::1 -d ::1  -j ACCEPT &> /dev/null
$allow_legacy   $which_ip6tables_legacy -A OUTPUT -s ::1 -d ::1 -j ACCEPT &> /dev/null
####
####
$allow_nft  $which_iptables_nft -A INPUT  -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
$allow_nft  $which_iptables_nft -A OUTPUT -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
####
####
$allow_nft  $which_ip6tables_nft -A INPUT  -s ::1 -d ::1  -j ACCEPT &> /dev/null
$allow_nft  $which_ip6tables_nft -A OUTPUT -s ::1 -d ::1 -j ACCEPT &> /dev/null
####
####
#######################################        english: limit bandwidth in kb/s
#######################################        spanish: limitar ancho de banda en kb/s
####
####
#### english: ipv4  bandwidth
#### spanish: ipv4  ancho de banda
$allow_ipv4 $allow_legacy $allow_input_bandwidth $which_iptables_legacy     -A  INPUT \
-m hashlimit --hashlimit-above   "$bandwidth_input"kb/sec \
--hashlimit-name maxinputlegacy  -j DROP &> /dev/null
####
####
$allow_ipv4 $allow_legacy $allow_output_bandwidth $which_iptables_legacy    -A OUTPUT \
-m hashlimit --hashlimit-above  "$bandwidth_output"kb/sec \
--hashlimit-mode dstip --hashlimit-name maxoutputlegacy -j DROP &> /dev/null
####
####
$allow_ipv4 $allow_nft $allow_input_bandwidth $which_iptables_nft           -A INPUT \
-m hashlimit    --hashlimit-above "$bandwidth_input"kb/sec  \
--hashlimit-name maxinputnft  -j DROP &> /dev/null
####
####
$allow_ipv4 $allow_nft $allow_output_bandwidth $which_iptables_nft          -A OUTPUT \
-m hashlimit  --hashlimit-above "$bandwidth_output"kb/sec \
--hashlimit-mode dstip  --hashlimit-name maxoutputnft -j DROP &> /dev/null
####
####
#### english: ipv6 bandwidth
#### spanish: ipv6 ancho de banda
####
####
$allow_ipv6 $allow_legacy $allow_input_bandwidth $which_ip6tables_legacy -A  INPUT \
-m hashlimit --hashlimit-above "$bandwidth_input"kb/sec --hashlimit-name maxinput  -j DROP &> /dev/null
####
####
$allow_ipv6 $allow_legacy $allow_output_bandwidth $which_ip6tables_legacy -A OUTPUT \
-m hashlimit --hashlimit-above  "$bandwidth_output"kb/sec --hashlimit-name maxoutput -j DROP &> /dev/null
####
####
$allow_ipv6 $allow_nft $allow_input_bandwidth $which_ip6tables_nft -A  INPUT \
-m hashlimit --hashlimit-above "$bandwidth_input"kb/sec --hashlimit-name maxinput  -j DROP &> /dev/null
####
####
$allow_ipv6 $allow_nft $allow_output_bandwidth $which_ip6tables_nft -A OUTPUT \
-m hashlimit --hashlimit-above "$bandwidth_output"kb/sec --hashlimit-name maxoutput -j DROP &> /dev/null
####
####
#######################################        english: limit number of all connections
#######################################        spanish: limitar numero de conexiones totales
####
####
#### english: ipv4  bandwidth
#### spanish: ipv4  ancho de banda
$allow_ipv4 $allow_legacy $allow_input_maxconnect  $which_iptables_legacy -A INPUT  \
-m connlimit --connlimit-above $maxconnect_input  -j DROP  &> /dev/null
####
####
$allow_ipv4 $allow_legacy $allow_output_maxconnect $which_iptables_legacy -A OUTPUT \
-m connlimit --connlimit-above $maxconnect_output -j DROP &> /dev/null
####
####
$allow_ipv4 $allow_nft $allow_input_maxconnect $which_iptables_nft   -A INPUT  \
-m connlimit --connlimit-above $maxconnect_input       -j DROP &> /dev/null
####
####
$allow_ipv4 $allow_nft $allow_output_maxconnect $which_iptables_nft  -A OUTPUT \
-m connlimit --connlimit-above $maxconnect_output      -j DROP &> /dev/null
####
####
#### english: ipv6 bandwidth
#### spanish: ipv6 ancho de banda
####
####
$allow_ipv6 $allow_legacy $allow_input_maxconnect  $which_ip6tables_legacy -A INPUT  \
-m connlimit --connlimit-above $maxconnect_input  -j DROP &> /dev/null
####
####
$allow_ipv6 $allow_legacy $allow_output_maxconnect $which_ip6tables_legacy -A OUTPUT \
-m connlimit --connlimit-above $maxconnect_output -j DROP &> /dev/null
####
####
$allow_ipv6 $allow_nft $allow_input_maxconnect $which_ip6tables_nft   -A INPUT  \
-m connlimit --connlimit-above $maxconnect_input       -j DROP &> /dev/null
####
####
$allow_ipv6 $allow_nft $allow_output_maxconnect $which_ip6tables_nft  -A OUTPUT \
-m connlimit --connlimit-above $maxconnect_output      -j DROP &> /dev/null
####
####
####################################### english: Drop rules for blacklist
####################################### spanish: reglas de denegar para lista negra
####
####
for one_blacklist in $(echo $blacklist | sed 's/,/ /g')
####
####
#### ipv4
####
####
do
$allow_ipv4 $allow_legacy $allow_blacklist $which_iptables_legacy  -A INPUT  \
-s $one_blacklist -j DROP &> /dev/null
####
####
$allow_ipv4 $allow_legacy $allow_blacklist $which_iptables_legacy  -A OUTPUT \
-d $one_blacklist -j DROP &> /dev/null
####
####
$allow_ipv4 $allow_nft    $allow_blacklist $which_iptables_nft     -A INPUT  \
-s $one_blacklist -j DROP &> /dev/null
####
####
$allow_ipv4 $allow_nft    $allow_blacklist $which_iptables_nft     -A OUTPUT \
-d $one_blacklist -j DROP &> /dev/null
####
####
#### ipv6
####
####
$allow_ipv6 $allow_legacy $allow_blacklist $which_ip6tables_legacy -A INPUT  \
-s $one_blacklist -j DROP &> /dev/null
####
####
$allow_ipv6 $allow_legacy $allow_blacklist $which_ip6tables_legacy -A OUTPUT \
-d $one_blacklist -j DROP &> /dev/null
####
####
$allow_ipv6 $allow_nft    $allow_blacklist $which_ip6tables_nft    -A INPUT  \
-s $one_blacklist -j DROP &> /dev/null
####
####
$allow_ipv6 $allow_nft    $allow_blacklist $which_ip6tables_nft    -A OUTPUT \
-d $one_blacklist -j DROP &> /dev/null
done
#### 
####
####################################### english: Accept rules for vpn
####################################### spanish: reglas de aceptar para vpn
####
####
for one_vpn in $(echo $vpn | sed 's/,/ /g') 
#### ipv4
####
do
$allow_ipv4 $allow_legacy $allow_vpn $which_iptables_legacy  -A  INPUT  \
-s $one_vpn -j ACCEPT &> /dev/null
####
####
$allow_ipv4 $allow_legacy $allow_vpn $which_iptables_legacy  -A  OUTPUT \
-d $one_vpn -j ACCEPT &> /dev/null
####
####
$allow_ipv4 $allow_nft    $allow_vpn $which_iptables_nft     -A  INPUT  \
-s $one_vpn -j ACCEPT &> /dev/null
####
####
$allow_ipv4 $allow_nft    $allow_vpn $which_iptables_nft     -A  OUTPUT \
-d $one_vpn -j ACCEPT &> /dev/null
####
####
#### ipv6
####
####
$allow_ipv6 $allow_legacy $allow_vpn $which_ip6tables_legacy -A  INPUT  \
-s $one_vpn -j ACCEPT &> /dev/null
####
####
$allow_ipv6 $allow_legacy $allow_vpn $which_ip6tables_legacy -A  OUTPUT \
-d $one_vpn -j ACCEPT &> /dev/null
####
####
$allow_ipv6 $allow_nft    $allow_vpn $which_ip6tables_nft    -A  INPUT  \
-s $one_vpn -j ACCEPT &> /dev/null
####
####
$allow_ipv6 $allow_nft    $allow_vpn $which_ip6tables_nft    -A  OUTPUT \
-d $one_vpn -j ACCEPT &> /dev/null
done
####
####
####################################### english: rules to allow client ports
####################################### spanish: reglas para permitir puertos cliente
####
####
#### ipv4 legacy
####
$allow_legacy  $allow_ipv4 $which_iptables_legacy -A INPUT \
-p udp -m multiport $input_state --sports $client_udp -s $net_ipv4_client -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv4 $which_iptables_legacy -A INPUT \
-p tcp -m multiport $input_state --sports $client_tcp -s $net_ipv4_client -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $which_iptables_legacy -A OUTPUT \
-p udp -m multiport $output_state --dports $client_udp -d $net_ipv4_client -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv4 $which_iptables_legacy -A OUTPUT \
-p tcp -m multiport $output_state --dports $client_tcp -d $net_ipv4_client -j ACCEPT &> /dev/null
####
#### 
#### ipv4 nft
####
$allow_nft $allow_ipv4     $which_iptables_nft -A INPUT \
-p udp -m multiport $input_state --sports $client_udp -s $net_ipv4_client -j ACCEPT &> /dev/null
$allow_nft $allow_ipv4     $which_iptables_nft -A INPUT \
-p tcp -m multiport $input_state --sports $client_tcp -s $net_ipv4_client -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv     $which_iptables_nft -A OUTPUT \
-p udp -m multiport $output_state --dports $client_udp -d $net_ipv4_client -j ACCEPT &> /dev/null
$allow_nft $allow_ipv     $which_iptables_nft -A OUTPUT \
-p tcp -m multiport $output_state --dports $client_tcp -d $net_ipv4_client -j ACCEPT &> /dev/null
####
####
#### ipv6 legacy
####
$allow_legacy  $allow_ipv6 $which_ip6tables_legacy -A INPUT \
-p udp -m multiport $input_state --sports $client_udp -s $net_ipv6_client -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv6 $which_ip6tables_legacy -A INPUT \
-p tcp -m multiport $input_state --sports $client_tcp -s $net_ipv6_client -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $which_ip6tables_legacy -A OUTPUT \
-p udp -m multiport $output_state --dports $client_udp -d $net_ipv6_client -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv6 $which_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport $output_state --dports $client_tcp -d $net_ipv6_client -j ACCEPT &> /dev/null
####
####
#### ipv6 nft
####
####
$allow_nft  $allow_ipv6 $which_ip6tables_nft -A INPUT \
-p udp -m multiport $input_state --sports $client_udp -s $net_ipv6_client -j ACCEPT &> /dev/null
$allow_nft  $allow_ipv6 $which_ip6tables_nft -A INPUT \
-p tcp -m multiport $input_state --sports $client_tcp -s $net_ipv6_client -j ACCEPT &> /dev/null
####
####
$allow_nft  $allow_ipv6 $which_ip6tables_nft -A OUTPUT \
-p udp -m multiport $output_state --dports $client_udp -d $net_ipv6_client -j ACCEPT &> /dev/null
$allow_nft  $allow_ipv6 $which_ip6tables_nft -A OUTPUT \
-p tcp -m multiport $output_state --dports $client_tcp -d $net_ipv6_client -j ACCEPT &> /dev/null
####
####
####################################### english: rules to log servers
####################################### spanish: reglas para logear servers
####
####
#### ipv4
####
####
$allow_legacy  $allow_ipv4  $which_iptables_legacy -A INPUT  \
-p tcp  -m multiport --dports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_input" &> /dev/null
$allow_legacy  $allow_ipv4  $which_iptables_legacy -A INPUT  \
-p udp  -m multiport --dports $logserver_udp -j LOG --log-prefix "$logserver_prefix_input" &> /dev/null
####
####
$allow_legacy  $allow_ipv4  $which_iptables_legacy -A OUTPUT \
-p tcp -m multiport --sports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_output" &> /dev/null
$allow_legacy  $allow_ipv4  $which_iptables_legacy -A OUTPUT \
-p udp -m multiport --sports $logserver_udp -j LOG --log-prefix "$logserver_prefix_output" &> /dev/null
####
####
$allow_nft     $allow_ipv4  $which_iptables_nft    -A INPUT  \
-p tcp  -m multiport --dports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_input" &> /dev/null
$allow_nft     $allow_ipv4  $which_iptables_nft    -A INPUT  \
-p udp  -m multiport --dports $logserver_udp -j LOG --log-prefix "$logserver_prefix_input" &> /dev/null
####
####
$allow_nft     $allow_ipv4  $which_iptables_nft    -A OUTPUT \
-p tcp -m multiport --sports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_output" &> /dev/null
$allow_nft     $allow_ipv4  $which_iptables_nft    -A OUTPUT \
-p udp -m multiport --sports $logserver_udp -j LOG --log-prefix "$logserver_prefix_output" &> /dev/null
####
####
#### ipv6
####
####
$allow_legacy  $allow_ipv6   $which_ip6tables_legacy -A INPUT   \
-p tcp  -m multiport --dports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_input" &> /dev/null
$allow_legacy  $allow_ipv6   $which_ip6tables_legacy -A INPUT   \
-p udp  -m multiport --dports $logserver_udp -j LOG --log-prefix "$logserver_prefix_input" &> /dev/null
####
####
$allow_legacy  $allow_ipv6   $which_ip6tables_legacy -A OUTPUT  \
-p tcp -m multiport --sports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_output" &> /dev/null
$allow_legacy  $allow_ipv6   $which_ip6tables_legacy -A OUTPUT  \
-p udp -m multiport --sports $logserver_udp -j LOG --log-prefix "$logserver_prefix_output" &> /dev/null
####
####
$allow_nft     $allow_ipv6   $which_ip6tables_nft    -A INPUT   \
-p tcp  -m multiport --dports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_input" &> /dev/null
$allow_nft     $allow_ipv6   $which_ip6tables_nft    -A INPUT   \
-p udp  -m multiport --dports $logserver_udp -j LOG --log-prefix "$logserver_prefix_input" &> /dev/null
####
####
$allow_nft     $allow_ipv6   $which_ip6tables_nft    -A OUTPUT  \
-p tcp -m multiport --sports $logserver_tcp -j LOG --log-prefix "$logserver_prefix_output" &> /dev/null
$allow_nft     $allow_ipv6   $which_ip6tables_nft    -A OUTPUT  \
-p udp -m multiport --sports $logserver_udp -j LOG --log-prefix "$logserver_prefix_output" &> /dev/null
####
####
####################################### english: rules allow server ports
####################################### spanish: reglas para permitir puertos servidor 
####
####
#### ipv4 legacy
####
$allow_legacy  $allow_ipv4 $which_iptables_legacy -A INPUT  \
-p udp -m multiport --dports $server_udp -s $net_ipv4_server -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv4 $which_iptables_legacy -A INPUT  \
-p tcp -m multiport --dports $server_tcp -s $net_ipv4_server -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $which_iptables_legacy -A OUTPUT \
-p udp -m multiport --sports $server_udp -d $net_ipv4_server -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv4 $which_iptables_legacy -A OUTPUT \
-p tcp -m multiport --sports $server_tcp -d $net_ipv4_server -j ACCEPT &> /dev/null
####
#### 
#### ipv4 nft
####
$allow_nft $allow_ipv4 $which_iptables_nft -A INPUT \
-p udp -m multiport --dports $server_udp -s $net_ipv4_server -j ACCEPT &> /dev/null
$allow_nft $allow_ipv4 $which_iptables_nft -A INPUT \
-p tcp -m multiport --dports $server_tcp -s $net_ipv4_server -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv4 $which_iptables_nft -A OUTPUT \
-p udp -m multiport --sports $server_udp -d $net_ipv4_server -j ACCEPT &> /dev/null
$allow_nft $allow_ipv4 $which_iptables_nft -A OUTPUT \
-p tcp -m multiport --sports $server_tcp -d $net_ipv4_server -j ACCEPT &> /dev/null
####
####
#### ipv6 legacy
####
####
$allow_legacy  $allow_ipv6 $which_ip6tables_legacy -A INPUT  \
-p udp -m multiport --dports $server_udp -s $net_ipv6_server -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv6 $which_ip6tables_legacy -A INPUT  \
-p tcp -m multiport --dports $server_tcp -s $net_ipv6_server -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $which_ip6tables_legacy -A OUTPUT \
-p udp -m multiport --sports $server_udp -d $net_ipv6_server -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv6 $which_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport --sports $server_tcp -d $net_ipv6_server -j ACCEPT &> /dev/null
####
####
#### ipv6 nft
####
####
$allow_nft  $allow_ipv6 $which_ip6tables_nft -A INPUT  \
-p udp -m multiport --dports $server_udp -s $net_ipv6_server -j ACCEPT &> /dev/null
$allow_nft  $allow_ipv6 $which_ip6tables_nft -A INPUT  \
-p tcp -m multiport --dports $server_tcp -s $net_ipv6_server -j ACCEPT &> /dev/null
####
####
$allow_nft  $allow_ipv6 $which_ip6tables_nft -A OUTPUT \
-p udp -m multiport --sports $server_udp -d $net_ipv6_server -j ACCEPT &> /dev/null
$allow_nft  $allow_ipv6 $which_ip6tables_nft -A OUTPUT \
-p tcp -m multiport --sports $server_tcp -d $net_ipv6_server -j ACCEPT &> /dev/null
####
####
####################################### english: rules from input of legacy ipv4 for ping, uid, gid and protocols
####################################### spanish: reglas de entrada de legacy ipv4 para ping, uid, gid y protocolos
####
####
$allow_legacy  $allow_ipv4 $allow_output_ping  $which_iptables_legacy -A INPUT  \
-p icmp --icmp-type echo-reply -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $allow_input_ping $which_iptables_legacy -A INPUT \
-p icmp --icmp-type echo-request -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $uid_gid $which_iptables_legacy -A INPUT \
-m state --state related,established -j ACCEPT &> /dev/null
####
####
for one_protocol in $(echo $others_protocols | sed 's/,/ /g') ;
do $allow_legacy  $allow_ipv4 $allow_others_protocols $which_iptables_legacy -A INPUT \
-p $one_protocol -j ACCEPT &> /dev/null
done
####
####
####################################### english: rules from output of legacy ipv4 for ping, uid, gid and protocols
####################################### spanish: reglas de salida de legacy ipv4 para ping, uid, gid y protocolos
####
####
$allow_legacy  $allow_ipv4 $allow_output_ping  $which_iptables_legacy   -A OUTPUT \
-p icmp --icmp-type echo-request -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $allow_input_ping  $which_iptables_legacy -A OUTPUT \
-p icmp --icmp-type echo-reply -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $allow_output_uid $which_iptables_legacy   -A OUTPUT \
-m owner --uid-owner $output_uid -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $allow_output_gid $which_iptables_legacy   -A OUTPUT \
-m owner --gid-owner $output_gid -j ACCEPT &> /dev/null
####
####
for one_protocol in $(echo $others_protocols | sed 's/,/ /g') ;
do $allow_legacy  $allow_ipv4 $allow_others_protocols      $which_iptables_legacy -A OUTPUT \
-p $one_protocol -j ACCEPT &> /dev/null
done
####
####
####################################### english: ipv6 filter legacy rules input and output for ping, uid, gid and protocols
####################################### spanish: ipv6 filtros legacy reglas de entrada y salida para ping, uid, gid y protocolos
####
#### 
#### english: ipv6 filter legacy rules input 
#### spanish: ipv6 filtros de legacy reglas de entrada
####
####
$allow_legacy  $allow_ipv6 $allow_output_ping      $which_ip6tables_legacy -A INPUT \
-p icmpv6 --icmpv6-type echo-reply -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $allow_input_ping    $which_ip6tables_legacy -A INPUT \
-p icmpv6 --icmpv6-type echo-request -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $uid_gid $which_ip6tables_legacy -A INPUT \
-m state --state related,established -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $which_ip6tables_legacy -A INPUT \
-p ipv6-icmp -j ACCEPT &> /dev/null
####
####
for one_protocol in $(echo $others_protocols | sed 's/,/ /g') ;
do $allow_legacy  $allow_ipv6 $allow_others_protocols      $which_ip6tables_legacy -A INPUT \
-p $one_protocol -j ACCEPT &> /dev/null
done
####
####
#### english: ipv6 filter legacy rules output
#### spanish: ipv6 filtros legacy reglas de salida
####
####
$allow_legacy  $allow_ipv6 $allow_output_ping  $which_ip6tables_legacy   -A OUTPUT \
-p icmpv6 --icmpv6-type echo-request -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $allow_input_ping  $which_ip6tables_legacy -A OUTPUT \
-p icmpv6 --icmpv6-type echo-reply -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $allow_output_uid $which_ip6tables_legacy   -A OUTPUT \
-m owner --uid-owner $output_uid -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $allow_output_gid $which_ip6tables_legacy   -A OUTPUT \
-m owner --gid-owner $output_gid -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $which_ip6tables_legacy -A OUTPUT -p ipv6-icmp -j ACCEPT &> /dev/null
####
####
for one_protocol in $(echo $others_protocols | sed 's/,/ /g') ;
do $allow_legacy6  $allow_ipv6 $allow_others_protocols      $which_ip6tables_legacy -A OUTPUT \
-p $one_protocol -j ACCEPT &> /dev/null
done
####
####
############################       english: iptables rules ipv4  iptables-nft for ping, uid, gid and protocols
############################       spanish: reglas de iptables ipv4 iptables-nft para ping, uid, gid y protocolos
####
####
#### english: ipv4 filter nft rules input
#### spanish: ipv4 filter nft reglas de entrada
####
####
$allow_nft $allow_ipv4 $allow_output_ping     $which_iptables_nft -A INPUT \
-p icmp --icmp-type echo-reply -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv4 $allow_input_ping   $which_iptables_nft -A INPUT \
-p icmp --icmp-type echo-request -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv4 $uid_gid $which_iptables_nft -A INPUT \
-m state --state related,established -j ACCEPT &> /dev/null
####
####
for one_protocol in $(echo $others_protocols | sed 's/,/ /g') ;
do $allow_nft $allow_ipv4 $allow_others_protocols       $which_iptables_nft -A INPUT \
-p $one_protocol -j ACCEPT &> /dev/null
done
####
####
#### english: ipv4 filter nft rules output
#### spanish: ipv4 filter nft reglas de salida
####
####
$allow_nft $allow_ipv4 $allow_output_ping    $which_iptables_nft -A OUTPUT \
-p icmp --icmp-type echo-request -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv4 $allow_input_ping  $which_iptables_nft -A OUTPUT \
-p icmp --icmp-type echo-reply -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv4 $allow_output_uid $which_iptables_nft   -A OUTPUT \
-m owner --uid-owner $output_uid -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv4 $allow_output_gid $which_iptables_nft   -A OUTPUT \
-m owner --gid-owner $output_gid -j ACCEPT &> /dev/null
####
####
for one_protocol in $(echo $others_protocols | sed 's/,/ /g') ;
do $allow_nft $allow_ipv4 $allow_others_protocols      $which_iptables_nft -A OUTPUT \
-p $one_protocol -j ACCEPT &> /dev/null
done
####
####
########## english: ipv6 filter nft rules input and output for ping, uid, gid and protocols
########## spanish: ipv6 filtros nft relgas de entrada y salida para ping, uid, gid y protocolos
####
####
#### ipv6 filter nft rules input
#### ipv6 filtros nft reglas d entrada
####
####
$allow_nft $allow_ipv6 $allow_output_ping      $which_ip6tables_nft -A INPUT \
-p icmpv6 --icmpv6-type echo-reply -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv6 $allow_input_ping    $which_ip6tables_nft -A INPUT \
-p icmpv6 --icmpv6-type echo-request -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv6 $uid_gid $which_ip6tables_nft -A INPUT \
-m state --state related,established -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv6 $which_ip6tables_nft -A INPUT \
-p ipv6-icmp -j ACCEPT &> /dev/null
####
####
for one_protocol in $(echo $others_protocols | sed 's/,/ /g') ;
do $allow_nft $allow_ipv6 $allow_others_protocols      $which_ip6tables_nft -A INPUT \
-p $one_protocol -j ACCEPT &> /dev/null
done
####
####
#### english: ipv6 filter nft rules output
#### spanish: ipv6 filtros nft reglas de salida
####
####
$allow_nft $allow_ipv6 $allow_output_ping      $which_ip6tables_nft -A OUTPUT \
-p icmpv6 --icmpv6-type echo-request -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv6 $allow_input_ping    $which_ip6tables_nft -A OUTPUT \
-p icmpv6 --icmpv6-type echo-reply -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv6 $allow_output_uid     $which_ip6tables_nft -A OUTPUT \
-m owner --uid-owner $output_uid -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv6 $allow_output_gid     $which_ip6tables_nft -A OUTPUT \
-m owner --gid-owner $output_gid -j ACCEPT &> /dev/null
####
####
$allow_nft $allow_ipv6 $which_ip6tables_nft -A OUTPUT -p ipv6-icmp -j ACCEPT &> /dev/null
####
####
for one_protocol in $(echo $others_protocols | sed 's/,/ /g') ;
do $allow_nft $allow_ipv6 $allow_others_protocols      $which_ip6tables_nft -A OUTPUT \
-p $one_protocol -j ACCEPT &> /dev/null
done
####
####
########################################## english: nat for ipv4 and ipv6
########################################## spanish: nat para ipv4 y ipv6
####
####
#### english: nat DELETED
#### spanish: borrado nat
####
####
$which_iptables_nft -t nat -F
$which_iptables_legacy -t nat -F
$which_ip6tables_nft -t nat -F
$which_ip6tables_legacy -t nat -F
####
####
#### english: do masquerade nat ip4 and ip6 ALLOW GATEWAY
#### spanish: hace nat masquerade ip4 y ip6 PERMITIR GATEWAY
####
####
$allow_nft $allow_ipv4 $allow_gateway_ipv4 $which_iptables_nft -t nat \
-A POSTROUTING -j MASQUERADE      &>/dev/null
$allow_legacy $allow_ipv4 $allow_gateway_ipv4 $which_iptables_legacy -t nat \
-A POSTROUTING -j MASQUERADE   &>/dev/null
####
####
$allow_nft $allow_ipv6 $allow_gateway_ipv6 $which_ip6tables_nft -t nat \
-A POSTROUTING -j MASQUERADE     &>/dev/null
$allow_legacy $allow_ipv6 $allow_gateway_ipv6 $which_ip6tables_legacy -t nat \
-A POSTROUTING -j MASQUERADE  &>/dev/null
####
####
########################################     english: ipv4 iptables allpermisisive
########################################     spanish: ipv4 iptables todo permisivo
####
####
#### legacy ip4
####
####
$allow_legacy  $allow_ipv4 $launch_permisive  $which_iptables_legacy -F &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $launch_permisive  $which_iptables_legacy -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv4 $launch_permisive  $which_iptables_legacy -A INPUT \
$input_state  -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv4 $launch_permisive  $which_iptables_legacy -A OUTPUT \
-j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv4 $launch_permisive  $which_iptables_legacy -A FORWARD \
-j ACCEPT &> /dev/null
####
####
#### nft ip4
####
####
$allow_nft $allow_ipv4 $launch_permisive  $which_iptables_nft -F &> /dev/null
####
####
$allow_nft $allow_ipv4 $launch_permisive  $which_iptables_nft -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
$allow_nft $allow_ipv4 $launch_permisive  $which_iptables_nft -A INPUT \
$input_state -j ACCEPT &> /dev/null
$allow_nft $allow_ipv4 $launch_permisive  $which_iptables_nft -A OUTPUT \
-j ACCEPT &> /dev/null
$allow_nft $allow_ipv4 $launch_permisive  $which_iptables_nft -A FORWARD \
-j ACCEPT &> /dev/null
####
####
########################################     english: ipv6 iptables allpermisisive
########################################     spanish: ipv6 iptables todo permisivo
####
####
#### legacy ip6
####
####
$allow_legacy $allow_ipv6 $launch_permisive  $which_ip6tables_legacy -F &> /dev/null
####
####
$allow_legacy $allow_ipv6 $launch_permisive  $which_ip6tables_legacy -A INPUT  \
-s ::1 -d ::1  -j ACCEPT &> /dev/null
$allow_legacy $allow_ipv6 $launch_permisive  $which_ip6tables_legacy -A INPUT \
$input_state -j ACCEPT &> /dev/null
$allow_legacy $allow_ipv6 $launch_permisive  $which_ip6tables_legacy -A OUTPUT \
-j ACCEPT &> /dev/null
$allow_legacy $allow_ipv6 $launch_permisive  $which_ip6tables_legacy -A FORWARD \
-j ACCEPT &> /dev/null
####
####
#### nft ip6
####
####
$allow_nft $allow_ipv6 $launch_permisive  $which_ip6tables_nft -F &> /dev/null
####
####
$allow_nft $allow_ipv6 $launch_permisive  $which_ip6tables_nft -A INPUT   \
-s ::1 -d ::1  -j ACCEPT &> /dev/null
$allow_nft $allow_ipv6 $launch_permisive  $which_ip6tables_nft -A INPUT   \
$input_state -j ACCEPT &> /dev/null
$allow_nft $allow_ipv6 $launch_permisive  $which_ip6tables_nft -A OUTPUT  \
-j ACCEPT &> /dev/null
$allow_nft $allow_ipv6 $launch_permisive  $which_ip6tables_nft -A FORWARD \
-j ACCEPT &> /dev/null
####
####
####
####
########################################     english: ipv4 iptables onlyweb
########################################     spanish: ipv4 iptables soloweb
####
####
#### legacy ip4
####
####
$allow_legacy  $allow_ipv4 $launch_onlyweb  $which_iptables_legacy -F &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $launch_onlyweb  $which_iptables_legacy -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv4 $launch_onlyweb  $which_iptables_legacy -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $launch_onlyweb  $which_iptables_legacy -A INPUT \
-p udp -m multiport --sports domain,bootpc,ntp -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv4 $launch_onlyweb  $which_iptables_legacy -A INPUT \
-p tcp -m multiport --sports http,https -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv4 $launch_onlyweb  $which_iptables_legacy -A OUTPUT \
-p udp -m multiport --dports domain,bootpc,ntp -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv4 $launch_onlyweb  $which_iptables_legacy -A OUTPUT \
-p tcp -m multiport --dports http,https -j ACCEPT &> /dev/null
####
####
#### nft ip4
####
####
$allow_nft $allow_ipv4 $launch_onlyweb  $which_iptables_nft -F &> /dev/null
####
####
$allow_nft  $allow_ipv4 $launch_onlyweb  $which_iptables_nft -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
$allow_nft  $allow_ipv4 $launch_onlyweb  $which_iptables_nft -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
####
####
$allow_nft  $allow_ipv4 $launch_onlyweb  $which_iptables_nft -A INPUT \
-p udp -m multiport --sports domain,bootpc,ntp -j ACCEPT &> /dev/null
$allow_nft  $allow_ipv4 $launch_onlyweb  $which_iptables_nft -A INPUT \
-p tcp -m multiport --sports http,https -j ACCEPT &> /dev/null
####
####
$allow_nft  $allow_ipv4 $launch_onlyweb  $which_iptables_nft -A OUTPUT \
-p udp -m multiport --dports domain,bootpc,ntp -j ACCEPT &> /dev/null
$allow_nft  $allow_ipv4 $launch_onlyweb  $which_iptables_nft -A OUTPUT \
-p tcp -m multiport --dports http,https -j ACCEPT &> /dev/null
####
####
########################################     english: ipv6 iptables onlyweb
########################################     spanish: ipv6 iptables soloweb
####
####
#### legacy ip6
####
####
$allow_legacy  $allow_ipv6 $launch_onlyweb  $which_ip6tables_legacy -F &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $launch_onlyweb  $which_ip6tables_legacy -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv6 $launch_onlyweb  $which_ip6tables_legacy -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $launch_onlyweb  $which_ip6tables_legacy -A INPUT \
-p udp -m multiport --dports domain,bootpc,ntp -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv6 $launch_onlyweb  $which_ip6tables_legacy -A INPUT \
-p tcp -m multiport --dports http,https -j ACCEPT &> /dev/null
####
####
$allow_legacy  $allow_ipv6 $launch_onlyweb  $which_ip6tables_legacy -A OUTPUT \
-p udp -m multiport --sports domain,bootpc,ntp -j ACCEPT &> /dev/null
$allow_legacy  $allow_ipv6 $launch_onlyweb  $which_ip6tables_legacy -A OUTPUT \
-p tcp -m multiport --sports http,https -j ACCEPT &> /dev/null
####
####
#### nft ip6
####
####
$allow_nft $allow_ipv6 $launch_onlyweb  $which_ip6tables_nft -F &> /dev/null
####
####
$allow_nft  $allow_ipv6 $launch_onlyweb  $which_ip6tables_nft -A INPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
$allow_nft  $allow_ipv6 $launch_onlyweb  $which_ip6tables_nft -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
####
####
$allow_nft  $allow_ipv6 $launch_onlyweb  $which_ip6tables_nft -A INPUT \
-p udp -m multiport --dports domain,bootpc,ntp -j ACCEPT &> /dev/null
$allow_nft  $allow_ipv6 $launch_onlyweb  $which_ip6tables_nft -A INPUT \
-p tcp -m multiport --dports http,https -j ACCEPT &> /dev/null
####
####
$allow_nft  $allow_ipv6 $launch_onlyweb  $which_ip6tables_nft -A OUTPUT \
-p udp -m multiport --sports domain,bootpc,ntp -j ACCEPT &> /dev/null
$allow_nft  $allow_ipv6 $launch_onlyweb  $which_ip6tables_nft -A OUTPUT \
-p tcp -m multiport --sports http,https -j ACCEPT &> /dev/null
####
####
########################################     english: ipv4 iptables offline
########################################     spanish: ipv4 iptables desconectado
####
####
#### legacy ip4
####
####
$allow_legacy $allow_ipv4 $launch_offline  $which_iptables_legacy -F &> /dev/null
####
####
$allow_legacy $allow_ipv4 $launch_offline  $which_iptables_legacy -A INPUT  \
-s 127.0.0.1 -d 127.0.0.1   -j ACCEPT &> /dev/null
$allow_legacy $allow_ipv4 $launch_offline  $which_iptables_legacy -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
####
####
#### nft ip4
####
####
$allow_nft $allow_ipv4 $launch_offline  $which_iptables_nft -F &> /dev/null
####
####
$allow_nft $allow_ipv4 $launch_offline  $which_iptables_nft -A INPUT   \
-s 127.0.0.1 -d 127.0.0.1  -j ACCEPT &> /dev/null
$allow_nft $allow_ipv4 $launch_offline  $which_iptables_nft -A OUTPUT  \
-s 127.0.0.1 -d 127.0.0.1 -j ACCEPT &> /dev/null
####
####
########################################     english: ipv6 iptables offline
########################################     spanish: ipv6 iptables desconectado
####
####
#### legacy ip6
####
####
$allow_legacy $allow_ipv6 $launch_offline  $which_ip6tables_legacy -F &> /dev/null
####
####
$allow_legacy $allow_ipv6 $launch_offline  $which_ip6tables_legacy -A INPUT  \
-s ::1 -d ::1  -j ACCEPT &> /dev/null
$allow_legacy $allow_ipv6 $launch_offline  $which_ip6tables_legacy -A OUTPUT \
-s ::1 -d ::1  -j ACCEPT &> /dev/null
####
####
#### nft ip6
####
####
$allow_nft $allow_ipv6 $launch_offline  $which_ip6tables_nft -F &> /dev/null
####
####
$allow_nft $allow_ipv6 $launch_offline  $which_ip6tables_nft -A INPUT  \
-s ::1 -d ::1  -j ACCEPT &> /dev/null
$allow_nft $allow_ipv6 $launch_offline  $which_ip6tables_nft -A OUTPUT \
-s ::1 -d ::1  -j ACCEPT &> /dev/null
####
####
######################################## english: iptables ipv4 and ipv6 with forward rules ALLOW FORWARD
######################################## spanish: iptables ipv4 y ipv6 con reglas de reenvio PERMITIR FORWARD
####
####
#### english: deactive for default with forward or without forward
#### spanish: desactiva por defecto con reenvio o sin reenvio
####
####
$which_sysctl -w net.ipv4.conf.all.forwarding=0 &> /dev/null
$which_sysctl -w net.ipv6.conf.all.forwarding=0 &> /dev/null
####
####
####   Active when there is forward
$ipv4 $allow_forward $which_sysctl -w net.ipv4.conf.all.forwarding=1 &> /dev/null
$ipv6 $allow_forward $which_sysctl -w net.ipv6.conf.all.forwarding=1 &> /dev/null
####
####
####   ipv4 filter legacy rules forward
$allow_legacy $allow_forward_ip4 $which_iptables_legacy -A FORWARD -j ACCEPT &> /dev/null
####
####
####   ipv6 filter legacy rules forward
$allow_legacy $allow_forward_ip6 $which_ip6tables_legacy -A FORWARD -j ACCEPT &> /dev/null
####
####
####   ipv4 filter nft rules forward
$allow_nft $allow_forward_ip4 $which_iptables_nft -A FORWARD -j ACCEPT &> /dev/null
####
####
####   ipv6 filter nft rules forward
$allow_nft $allow_forward_ip6 $which_ip6tables_nft -A FORWARD -j ACCEPT &> /dev/null
####
####
#######################################       iptables ipv4 and ipv6 closed with drop input, and drop forward, and drop output rules
#######################################       iptables ipv4 y ipv6 cierran la entrada, reemvio y salida con reglas de dropeo
####
####
#### ipv4 drop rules iptables-legacy
$allow_legacy $which_iptables_legacy -A INPUT -j DROP &> /dev/null
$allow_legacy $which_iptables_legacy -A OUTPUT -j DROP &> /dev/null
$allow_legacy $which_iptables_legacy -A FORWARD -j DROP &> /dev/null
####
####
#### ipv6 drop rules iptables-legacy
$allow_legacy $which_ip6tables_legacy -A INPUT -j DROP &> /dev/null
$allow_legacy $which_ip6tables_legacy -A OUTPUT -j DROP &> /dev/null
$allow_legacy $which_ip6tables_legacy -A FORWARD -j DROP &> /dev/null
####
####
#### ipv4 drop rules iptables-nft
$allow_nft $which_iptables_nft -A INPUT -j DROP &> /dev/null
$allow_nft $which_iptables_nft -A OUTPUT -j DROP &> /dev/null
$allow_nft $which_iptables_nft -A FORWARD -j DROP &> /dev/null
####
#### ipv6 drop rules iptables-nft
$allow_nft $which_ip6tables_nft -A INPUT -j DROP &> /dev/null
$allow_nft $which_ip6tables_nft -A OUTPUT -j DROP &> /dev/null
$allow_nft $which_ip6tables_nft -A FORWARD -j DROP &> /dev/null
####
####
########################################       english: iptables ipv4 and ipv6 with variable input_all
########################################       english: iptables ipv4 y ipv6 con variable input_all
####
####
#### english: nft INPUT deleted
#### spanish: nft INPUT borradas
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $which_iptables_nft -t filter -F INPUT  &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $which_ip6tables_nft -t filter -F INPUT  &> /dev/null
####
####
#### english: legacy INPUT deleted
#### spanish: legacy INPUT borradas
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $which_iptables_legacy -t filter -F INPUT  &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $which_ip6tables_legacy -t filter -F INPUT  &> /dev/null
####
####
#### english: nft INPUT 127.0.0.1 accept
#### spanish: nft INPUT ::1 acepta
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $which_iptables_nft -t filter -A INPUT \
-s 127.0.0.1 -d 127.0.0.1 -j ACCEPT &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $which_ip6tables_nft -t filter -A INPUT \
-s ::1 -d ::1 -j ACCEPT &> /dev/null
####
####
#### english: legacy INPUT 127.0.0.1 accept
#### spanish: legacy INPUT ::1 acepta
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $which_iptables_legacy -t filter -A INPUT \
-s 127.0.0.1 -d 127.0.0.1 -j ACCEPT &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $which_ip6tables_legacy -t filter -A INPUT \
-s ::1 -d ::1 -j ACCEPT &> /dev/null
####
####
#### english: legacy4 INPUT  limit bandwidth
#### spanish: legacy6 INPUT limita ancho de banda
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $allow_input_bandwidth iptables-legacy -A  INPUT \
-m hashlimit --hashlimit-above "$bandwidth_input"kb/sec --hashlimit-name maxinput  -j DROP &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $allow_input_bandwidth ip6tables-legacy -A  INPUT \
-m hashlimit --hashlimit-above "$bandwidth_input"kb/sec --hashlimit-name maxinput  -j DROP &> /dev/null
####
####
#### english: nft4 INPUT limit bandwidth
#### spanish: nft6 INPUT limita ancho de banda
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $allow_input_bandwidth iptables-nft -A  INPUT \
-m hashlimit --hashlimit-above "$bandwidth_input"kb/sec --hashlimit-name maxinput  -j DROP &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $allow_input_bandwidth ip6tables-nft -A  INPUT \
-m hashlimit --hashlimit-above "$bandwidth_input"kb/sec --hashlimit-name maxinput  -j DROP &> /dev/null
####
####
#### english: ipv4  limit conections numbers
#### spanish: ipv4  limita numero de conexiones
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $allow_input_maxconnect  $which_iptables_legacy -A INPUT \
-m connlimit --connlimit-above $maxconnect_input  -j DROP  &> /dev/null
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $allow_input_maxconnect $which_iptables_nft   -A INPUT \
-m connlimit --connlimit-above $maxconnect_input       -j DROP &> /dev/null
####
####
#### english: ipv6 limit conections numbers
#### spanish: ipv6 limita numero de conexiones
####
####
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $allow_input_maxconnect  $which_ip6tables_legacy -A INPUT \
-m connlimit --connlimit-above $maxconnect_input  -j DROP &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $allow_input_maxconnect $which_ip6tables_nft   -A INPUT \
-m connlimit --connlimit-above $maxconnect_input       -j DROP &> /dev/null
####
####
#### english: nft INPUT ACCEPT all or input_state
#### spanish: nft INPUT acepta todo o estado de entrada
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $which_iptables_nft -t filter -A INPUT \
$input_state -j ACCEPT &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $which_ip6tables_nft -t filter -A INPUT \
$input_state -j ACCEPT &> /dev/null
####
####
#### english: legacy INPUT ACCEPT all or input_state
#### spanish: entrada acepta todo o estado de entrada
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $which_iptables_legacy -t filter -A INPUT \
$input_state -j ACCEPT &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $which_ip6tables_legacy -t filter -A INPUT \
$input_state -j ACCEPT &> /dev/null
####
####
#### english: nft INPUT DROP all
#### spanish: nft INPUT deniega todo
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_nft $allow_ipv4 $which_iptables_nft -t filter -A INPUT \
-j DROP &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_nft $which_ip6tables_nft -t filter -A INPUT \
-j DROP &> /dev/null
####
####
#### english: legacy INPUT DROP all
#### spanish: legacy INPUT deniega todo
####
####
$launch_custom $allow_input_all $allow_ipv4 $allow_legacy $which_iptables_legacy -t filter -A INPUT \
-j DROP &> /dev/null
$launch_custom $allow_input_all $allow_ipv6 $allow_legacy $which_ip6tables_legacy -t filter -A INPUT \
-j DROP &> /dev/null
####
####
####
####
########################################       english: iptables ipv4 and ipv6 with variable output_all
########################################       english: iptables ipv4 y ipv6 con variable output_all
####
####
#### english: nft OUTPUT deleted
#### spanish: nft OUTPUT borradas
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $which_iptables_nft -t filter -F OUTPUT  &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $which_ip6tables_nft -t filter -F OUTPUT  &> /dev/null
####
####
#### english: legacy OUTPUT deleted
#### spanish: legacy OUTPUT borradas
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $which_iptables_legacy -t filter -F OUTPUT  &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $which_ip6tables_legacy -t filter -F OUTPUT  &> /dev/null
####
####
#### english: nft OUTPUT 127.0.0.1 accept
#### spanish: nft OUTPUT ::1 acepta
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $which_iptables_nft -t filter -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1 -j ACCEPT &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $which_ip6tables_nft -t filter -A OUTPUT \
-s ::1 -d ::1 -j ACCEPT &> /dev/null
####
####
#### english: legacy OUTPUT 127.0.0.1 accept
#### spanish: legacy OUTPUT ::1 acepta
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $which_iptables_legacy -t filter -A OUTPUT \
-s 127.0.0.1 -d 127.0.0.1 -j ACCEPT &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $which_ip6tables_legacy -t filter -A OUTPUT \
-s ::1 -d ::1 -j ACCEPT &> /dev/null
####
####
#### english: legacy4 OUTPUT  limit bandwidth
#### spanish: legacy6 OUTPUT limita ancho de banda
####
#### 
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $allow_output_bandwidth iptables-legacy -A OUTPUT \
-m hashlimit --hashlimit-above "$bandwidth_output"kb/sec --hashlimit-name maxoutput  -j DROP &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $allow_output_bandwidth ip6tables-legacy -A  OUTPUT \
-m hashlimit --hashlimit-above "$bandwidth_output"kb/sec --hashlimit-name maxoutput  -j DROP &> /dev/null
####
####
#### english: nft4 OUTPUT limit bandwidth
#### spanish: nft6 OUTPUT limita ancho de banda
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $allow_output_bandwidth iptables-nft -A OUTPUT \
-m hashlimit --hashlimit-above "$bandwidth_output"kb/sec --hashlimit-name maxoutput  -j DROP &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $allow_output_bandwidth ip6tables-nft -A OUTPUT \
-m hashlimit --hashlimit-above "$bandwidth_output"kb/sec --hashlimit-name maxoutput  -j DROP &> /dev/null
####
####
#### english: ipv4  limit conections numbers
#### spanish: ipv4  limita numero de conexiones
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $allow_output_maxconnect  $which_iptables_legacy -A OUTPUT \
-m connlimit --connlimit-above $maxconnect_output  -j DROP  &> /dev/null
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $allow_output_maxconnect $which_iptables_nft   -A OUTPUT \
-m connlimit --connlimit-above $maxconnect_output       -j DROP &> /dev/null
####
####
#### english: ipv6 limit conections numbers
#### spanish: ipv6 limita numero de conexiones
####
####
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $allow_output_maxconnect  $which_ip6tables_legacy -A OUTPUT \
-m connlimit --connlimit-above $maxconnect_output  -j DROP &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $allow_output_maxconnect $which_ip6tables_nft   -A OUTPUT \
-m connlimit --connlimit-above $maxconnect_output       -j DROP &> /dev/null
####
####
#### english: nft OUTPUT ACCEPT all or input_state
#### spanish: nft OUTPUT acepta todo o estado de entrada
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $which_iptables_nft -t filter -A OUTPUT \
$input_state -j ACCEPT &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $which_ip6tables_nft -t filter -A OUTPUT \
$input_state -j ACCEPT &> /dev/null
####
####
#### english: legacy INPUT ACCEPT all or input_state
#### spanish: entrada acepta todo o estado de entrada
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $which_iptables_legacy -t filter  -A OUTPUT \
$input_state -j ACCEPT &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $which_ip6tables_legacy -t filter -A OUTPUT \
$input_state -j ACCEPT &> /dev/null
####
####
#### english: nft INPUT DROP all
#### spanish: nft INPUT deniega todo
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_nft $which_iptables_nft -t filter -A OUTPUT  -j DROP &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_nft $which_ip6tables_nft -t filter -A OUTPUT  -j DROP &> /dev/null
####
####
#### english: legacy INPUT DROP all
#### spanish: legacy INPUT deniega todo
####
####
$launch_custom $allow_output_all $allow_ipv4 $allow_legacy $which_iptables_legacy  -t filter -A OUTPUT  -j DROP &> /dev/null
$launch_custom $allow_output_all $allow_ipv6 $allow_legacy $which_ip6tables_legacy -t filter -A OUTPUT  -j DROP &> /dev/null
####
####
########################################       english: show text when active rules
########################################       spanish: muestra texto cuando activas las reglas
####
####
####  # show text head lines in all firewall #
echo $head_principal
echo "$cinco lauching iptables rules $cinco"
if [ "$first_option" = "offline" ]; then $nada
echo "$cinco [OK FIREWALL OFFLINE]"
exit ; else $nada ; fi
if [ "$first_option" = "allpermisive" ]; then $nada
echo "$cinco [OK FIREWALL ALLPERMISIVE]"
exit ; else $nada ; fi
if [ "$first_option" = "onlyweb" ]; then $nada
echo "$cinco [OK FIREWALL ONLYWEB]"
exit ; else $nada ; fi
if [ -f "$directory_config/$second_option" ]; then $nada
echo "$cinco [OK FIREWALL CUSTOM] [$second_option]"
exit ; else $nada ; fi
####
####
#######################
####     left script
#######################
####
####
#######################         english: End of script
#######################         spanish: Fin del script
####    
####
####    Git mini tutorial:
####
####
####    Download repository: Repository git.code.sf.net/p/f-iptables/code
####
####    Download f-iptables repository to folder user       :     git clone https://git.code.sf.net/p/f-iptables/code
####    Recover f-iptables repository to folder user        :     git fetch
####
####    upload repository: Repository git.code.sf.net/p/f-iptables/code
####    Upload f-iptables repository from local repository  :     git commit -a ; git push ;
####
####    Create repository local: /var/git/repository.localhost
####
####    mkdir /var/git/repository.localhost
####    cd /var/git/repository.localhost
####    git init --bare
####    chmod user /var/git/repository.localhost -R
####    service ssh start or systemctl restart ssh
####
####
#######################
#######################
####
####
exit 
